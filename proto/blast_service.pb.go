// Code generated by protoc-gen-go.
// source: proto/blast_service.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/blast_service.proto

It has these top-level messages:
	Document
	UpdateRequest
	GetIndexRequest
	GetIndexResponse
	PutDocumentRequest
	PutDocumentResponse
	GetDocumentRequest
	GetDocumentResponse
	DeleteDocumentRequest
	DeleteDocumentResponse
	BulkRequest
	BulkResponse
	SearchRequest
	SearchResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Document struct {
	Id     string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Fields *google_protobuf.Any `protobuf:"bytes,2,opt,name=fields" json:"fields,omitempty"`
}

func (m *Document) Reset()                    { *m = Document{} }
func (m *Document) String() string            { return proto1.CompactTextString(m) }
func (*Document) ProtoMessage()               {}
func (*Document) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Document) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Document) GetFields() *google_protobuf.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type UpdateRequest struct {
	Method   string    `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	Document *Document `protobuf:"bytes,2,opt,name=document" json:"document,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UpdateRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *UpdateRequest) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type GetIndexRequest struct {
	IncludeIndexMapping bool `protobuf:"varint,1,opt,name=include_index_mapping,json=includeIndexMapping" json:"include_index_mapping,omitempty"`
	IncludeIndexType    bool `protobuf:"varint,2,opt,name=include_index_type,json=includeIndexType" json:"include_index_type,omitempty"`
	IncludeKvstore      bool `protobuf:"varint,3,opt,name=include_kvstore,json=includeKvstore" json:"include_kvstore,omitempty"`
	IncludeKvconfig     bool `protobuf:"varint,4,opt,name=include_kvconfig,json=includeKvconfig" json:"include_kvconfig,omitempty"`
}

func (m *GetIndexRequest) Reset()                    { *m = GetIndexRequest{} }
func (m *GetIndexRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetIndexRequest) ProtoMessage()               {}
func (*GetIndexRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetIndexRequest) GetIncludeIndexMapping() bool {
	if m != nil {
		return m.IncludeIndexMapping
	}
	return false
}

func (m *GetIndexRequest) GetIncludeIndexType() bool {
	if m != nil {
		return m.IncludeIndexType
	}
	return false
}

func (m *GetIndexRequest) GetIncludeKvstore() bool {
	if m != nil {
		return m.IncludeKvstore
	}
	return false
}

func (m *GetIndexRequest) GetIncludeKvconfig() bool {
	if m != nil {
		return m.IncludeKvconfig
	}
	return false
}

type GetIndexResponse struct {
	IndexPath    string               `protobuf:"bytes,1,opt,name=index_path,json=indexPath" json:"index_path,omitempty"`
	IndexMapping *google_protobuf.Any `protobuf:"bytes,2,opt,name=index_mapping,json=indexMapping" json:"index_mapping,omitempty"`
	IndexType    string               `protobuf:"bytes,3,opt,name=index_type,json=indexType" json:"index_type,omitempty"`
	Kvstore      string               `protobuf:"bytes,4,opt,name=kvstore" json:"kvstore,omitempty"`
	Kvconfig     *google_protobuf.Any `protobuf:"bytes,5,opt,name=kvconfig" json:"kvconfig,omitempty"`
}

func (m *GetIndexResponse) Reset()                    { *m = GetIndexResponse{} }
func (m *GetIndexResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetIndexResponse) ProtoMessage()               {}
func (*GetIndexResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetIndexResponse) GetIndexPath() string {
	if m != nil {
		return m.IndexPath
	}
	return ""
}

func (m *GetIndexResponse) GetIndexMapping() *google_protobuf.Any {
	if m != nil {
		return m.IndexMapping
	}
	return nil
}

func (m *GetIndexResponse) GetIndexType() string {
	if m != nil {
		return m.IndexType
	}
	return ""
}

func (m *GetIndexResponse) GetKvstore() string {
	if m != nil {
		return m.Kvstore
	}
	return ""
}

func (m *GetIndexResponse) GetKvconfig() *google_protobuf.Any {
	if m != nil {
		return m.Kvconfig
	}
	return nil
}

type PutDocumentRequest struct {
	Document *Document `protobuf:"bytes,1,opt,name=document" json:"document,omitempty"`
}

func (m *PutDocumentRequest) Reset()                    { *m = PutDocumentRequest{} }
func (m *PutDocumentRequest) String() string            { return proto1.CompactTextString(m) }
func (*PutDocumentRequest) ProtoMessage()               {}
func (*PutDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PutDocumentRequest) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type PutDocumentResponse struct {
	PutCount int32 `protobuf:"varint,1,opt,name=put_count,json=putCount" json:"put_count,omitempty"`
}

func (m *PutDocumentResponse) Reset()                    { *m = PutDocumentResponse{} }
func (m *PutDocumentResponse) String() string            { return proto1.CompactTextString(m) }
func (*PutDocumentResponse) ProtoMessage()               {}
func (*PutDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PutDocumentResponse) GetPutCount() int32 {
	if m != nil {
		return m.PutCount
	}
	return 0
}

type GetDocumentRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetDocumentRequest) Reset()                    { *m = GetDocumentRequest{} }
func (m *GetDocumentRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetDocumentRequest) ProtoMessage()               {}
func (*GetDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetDocumentResponse struct {
	Document *Document `protobuf:"bytes,1,opt,name=document" json:"document,omitempty"`
}

func (m *GetDocumentResponse) Reset()                    { *m = GetDocumentResponse{} }
func (m *GetDocumentResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetDocumentResponse) ProtoMessage()               {}
func (*GetDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetDocumentResponse) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type DeleteDocumentRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteDocumentRequest) Reset()                    { *m = DeleteDocumentRequest{} }
func (m *DeleteDocumentRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteDocumentRequest) ProtoMessage()               {}
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteDocumentResponse struct {
	DeleteCount int32 `protobuf:"varint,1,opt,name=delete_count,json=deleteCount" json:"delete_count,omitempty"`
}

func (m *DeleteDocumentResponse) Reset()                    { *m = DeleteDocumentResponse{} }
func (m *DeleteDocumentResponse) String() string            { return proto1.CompactTextString(m) }
func (*DeleteDocumentResponse) ProtoMessage()               {}
func (*DeleteDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteDocumentResponse) GetDeleteCount() int32 {
	if m != nil {
		return m.DeleteCount
	}
	return 0
}

type BulkRequest struct {
	BatchSize int32            `protobuf:"varint,1,opt,name=batch_size,json=batchSize" json:"batch_size,omitempty"`
	Requests  []*UpdateRequest `protobuf:"bytes,2,rep,name=requests" json:"requests,omitempty"`
}

func (m *BulkRequest) Reset()                    { *m = BulkRequest{} }
func (m *BulkRequest) String() string            { return proto1.CompactTextString(m) }
func (*BulkRequest) ProtoMessage()               {}
func (*BulkRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *BulkRequest) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

func (m *BulkRequest) GetRequests() []*UpdateRequest {
	if m != nil {
		return m.Requests
	}
	return nil
}

type BulkResponse struct {
	PutCount      int32 `protobuf:"varint,1,opt,name=put_count,json=putCount" json:"put_count,omitempty"`
	PutErrorCount int32 `protobuf:"varint,2,opt,name=put_error_count,json=putErrorCount" json:"put_error_count,omitempty"`
	DeleteCount   int32 `protobuf:"varint,3,opt,name=delete_count,json=deleteCount" json:"delete_count,omitempty"`
}

func (m *BulkResponse) Reset()                    { *m = BulkResponse{} }
func (m *BulkResponse) String() string            { return proto1.CompactTextString(m) }
func (*BulkResponse) ProtoMessage()               {}
func (*BulkResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *BulkResponse) GetPutCount() int32 {
	if m != nil {
		return m.PutCount
	}
	return 0
}

func (m *BulkResponse) GetPutErrorCount() int32 {
	if m != nil {
		return m.PutErrorCount
	}
	return 0
}

func (m *BulkResponse) GetDeleteCount() int32 {
	if m != nil {
		return m.DeleteCount
	}
	return 0
}

type SearchRequest struct {
	SearchRequest *google_protobuf.Any `protobuf:"bytes,1,opt,name=search_request,json=searchRequest" json:"search_request,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto1.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SearchRequest) GetSearchRequest() *google_protobuf.Any {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

type SearchResponse struct {
	SearchResult *google_protobuf.Any `protobuf:"bytes,1,opt,name=search_result,json=searchResult" json:"search_result,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto1.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *SearchResponse) GetSearchResult() *google_protobuf.Any {
	if m != nil {
		return m.SearchResult
	}
	return nil
}

func init() {
	proto1.RegisterType((*Document)(nil), "proto.Document")
	proto1.RegisterType((*UpdateRequest)(nil), "proto.UpdateRequest")
	proto1.RegisterType((*GetIndexRequest)(nil), "proto.GetIndexRequest")
	proto1.RegisterType((*GetIndexResponse)(nil), "proto.GetIndexResponse")
	proto1.RegisterType((*PutDocumentRequest)(nil), "proto.PutDocumentRequest")
	proto1.RegisterType((*PutDocumentResponse)(nil), "proto.PutDocumentResponse")
	proto1.RegisterType((*GetDocumentRequest)(nil), "proto.GetDocumentRequest")
	proto1.RegisterType((*GetDocumentResponse)(nil), "proto.GetDocumentResponse")
	proto1.RegisterType((*DeleteDocumentRequest)(nil), "proto.DeleteDocumentRequest")
	proto1.RegisterType((*DeleteDocumentResponse)(nil), "proto.DeleteDocumentResponse")
	proto1.RegisterType((*BulkRequest)(nil), "proto.BulkRequest")
	proto1.RegisterType((*BulkResponse)(nil), "proto.BulkResponse")
	proto1.RegisterType((*SearchRequest)(nil), "proto.SearchRequest")
	proto1.RegisterType((*SearchResponse)(nil), "proto.SearchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Blast service

type BlastClient interface {
	GetIndex(ctx context.Context, in *GetIndexRequest, opts ...grpc.CallOption) (*GetIndexResponse, error)
	PutDocument(ctx context.Context, in *PutDocumentRequest, opts ...grpc.CallOption) (*PutDocumentResponse, error)
	GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error)
	DeleteDocument(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*DeleteDocumentResponse, error)
	Bulk(ctx context.Context, in *BulkRequest, opts ...grpc.CallOption) (*BulkResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type blastClient struct {
	cc *grpc.ClientConn
}

func NewBlastClient(cc *grpc.ClientConn) BlastClient {
	return &blastClient{cc}
}

func (c *blastClient) GetIndex(ctx context.Context, in *GetIndexRequest, opts ...grpc.CallOption) (*GetIndexResponse, error) {
	out := new(GetIndexResponse)
	err := grpc.Invoke(ctx, "/proto.Blast/GetIndex", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) PutDocument(ctx context.Context, in *PutDocumentRequest, opts ...grpc.CallOption) (*PutDocumentResponse, error) {
	out := new(PutDocumentResponse)
	err := grpc.Invoke(ctx, "/proto.Blast/PutDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error) {
	out := new(GetDocumentResponse)
	err := grpc.Invoke(ctx, "/proto.Blast/GetDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) DeleteDocument(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*DeleteDocumentResponse, error) {
	out := new(DeleteDocumentResponse)
	err := grpc.Invoke(ctx, "/proto.Blast/DeleteDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) Bulk(ctx context.Context, in *BulkRequest, opts ...grpc.CallOption) (*BulkResponse, error) {
	out := new(BulkResponse)
	err := grpc.Invoke(ctx, "/proto.Blast/Bulk", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := grpc.Invoke(ctx, "/proto.Blast/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Blast service

type BlastServer interface {
	GetIndex(context.Context, *GetIndexRequest) (*GetIndexResponse, error)
	PutDocument(context.Context, *PutDocumentRequest) (*PutDocumentResponse, error)
	GetDocument(context.Context, *GetDocumentRequest) (*GetDocumentResponse, error)
	DeleteDocument(context.Context, *DeleteDocumentRequest) (*DeleteDocumentResponse, error)
	Bulk(context.Context, *BulkRequest) (*BulkResponse, error)
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
}

func RegisterBlastServer(s *grpc.Server, srv BlastServer) {
	s.RegisterService(&_Blast_serviceDesc, srv)
}

func _Blast_GetIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).GetIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Blast/GetIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).GetIndex(ctx, req.(*GetIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_PutDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).PutDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Blast/PutDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).PutDocument(ctx, req.(*PutDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_GetDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).GetDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Blast/GetDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).GetDocument(ctx, req.(*GetDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_DeleteDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).DeleteDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Blast/DeleteDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).DeleteDocument(ctx, req.(*DeleteDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_Bulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).Bulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Blast/Bulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).Bulk(ctx, req.(*BulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Blast/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Blast_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Blast",
	HandlerType: (*BlastServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetIndex",
			Handler:    _Blast_GetIndex_Handler,
		},
		{
			MethodName: "PutDocument",
			Handler:    _Blast_PutDocument_Handler,
		},
		{
			MethodName: "GetDocument",
			Handler:    _Blast_GetDocument_Handler,
		},
		{
			MethodName: "DeleteDocument",
			Handler:    _Blast_DeleteDocument_Handler,
		},
		{
			MethodName: "Bulk",
			Handler:    _Blast_Bulk_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Blast_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/blast_service.proto",
}

func init() { proto1.RegisterFile("proto/blast_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 673 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x54, 0x6d, 0x4f, 0xd3, 0x50,
	0x14, 0x66, 0x1b, 0x9b, 0xdd, 0xd9, 0x1b, 0x39, 0x13, 0x1c, 0x55, 0x12, 0x6c, 0x8c, 0x60, 0x24,
	0x43, 0xe7, 0x07, 0x43, 0x88, 0x1f, 0x40, 0x14, 0x0d, 0x1a, 0x49, 0xc1, 0xaf, 0x36, 0x5d, 0x7b,
	0xd9, 0x1a, 0x4a, 0x5b, 0xdb, 0x5b, 0xe2, 0xf8, 0x1b, 0xfe, 0x28, 0x7f, 0x82, 0x7f, 0xc7, 0xf4,
	0xbe, 0xd1, 0x6e, 0x73, 0xe8, 0xa7, 0xe6, 0x3e, 0xe7, 0xb9, 0xcf, 0xb9, 0xcf, 0x3d, 0xcf, 0x2d,
	0xac, 0x47, 0x71, 0x48, 0xc3, 0xdd, 0xa1, 0x6f, 0x27, 0xd4, 0x4a, 0x48, 0x7c, 0xed, 0x39, 0xa4,
	0xcf, 0x30, 0xac, 0xb2, 0x8f, 0xbe, 0x3e, 0x0a, 0xc3, 0x91, 0x4f, 0x76, 0xd9, 0x6a, 0x98, 0x5e,
	0xec, 0xda, 0xc1, 0x84, 0x33, 0x8c, 0x0f, 0xa0, 0x1d, 0x85, 0x4e, 0x7a, 0x45, 0x02, 0x8a, 0x6d,
	0x28, 0x7b, 0x6e, 0xaf, 0xb4, 0x59, 0xda, 0xae, 0x9b, 0x65, 0xcf, 0xc5, 0x1d, 0xa8, 0x5d, 0x78,
	0xc4, 0x77, 0x93, 0x5e, 0x79, 0xb3, 0xb4, 0xdd, 0x18, 0xdc, 0xef, 0x73, 0x9d, 0xbe, 0xd4, 0xe9,
	0x1f, 0x04, 0x13, 0x53, 0x70, 0x8c, 0x73, 0x68, 0x7d, 0x8d, 0x5c, 0x9b, 0x12, 0x93, 0x7c, 0x4f,
	0x49, 0x42, 0x71, 0x0d, 0x6a, 0x57, 0x84, 0x8e, 0x43, 0x29, 0x29, 0x56, 0xf8, 0x1c, 0x34, 0x57,
	0xb4, 0x14, 0xc2, 0x1d, 0xae, 0xd8, 0x97, 0x27, 0x31, 0x15, 0xc1, 0xf8, 0x55, 0x82, 0xce, 0x31,
	0xa1, 0x1f, 0x03, 0x97, 0xfc, 0x90, 0xc2, 0x03, 0x58, 0xf5, 0x02, 0xc7, 0x4f, 0x5d, 0x62, 0x79,
	0x19, 0x6e, 0x5d, 0xd9, 0x51, 0xe4, 0x05, 0x23, 0xd6, 0x47, 0x33, 0xbb, 0xa2, 0xc8, 0xf6, 0x7c,
	0xe6, 0x25, 0xdc, 0x01, 0x2c, 0xee, 0xa1, 0x93, 0x88, 0xb0, 0xf6, 0x9a, 0xb9, 0x92, 0xdf, 0x70,
	0x3e, 0x89, 0x08, 0x6e, 0x41, 0x47, 0xb2, 0x2f, 0xaf, 0x13, 0x1a, 0xc6, 0xa4, 0x57, 0x61, 0xd4,
	0xb6, 0x80, 0x4f, 0x38, 0x8a, 0xcf, 0x60, 0xe5, 0x96, 0xe8, 0x84, 0xc1, 0x85, 0x37, 0xea, 0x2d,
	0x33, 0x66, 0x47, 0x31, 0x39, 0x6c, 0xfc, 0x2e, 0xc1, 0xca, 0xad, 0x93, 0x24, 0x0a, 0x83, 0x84,
	0xe0, 0x06, 0x00, 0x3f, 0x4e, 0x64, 0xd3, 0xb1, 0xb8, 0xa7, 0x3a, 0x43, 0x4e, 0x6d, 0x3a, 0xc6,
	0x3d, 0x68, 0x15, 0x1d, 0x2e, 0x1a, 0x44, 0xd3, 0xcb, 0x1b, 0x56, 0xca, 0xcc, 0x68, 0x25, 0xa7,
	0xcc, 0x1c, 0xf6, 0xe0, 0x9e, 0x74, 0xb6, 0xcc, 0x6a, 0x72, 0x89, 0x2f, 0x40, 0x53, 0x56, 0xaa,
	0x0b, 0xda, 0x29, 0x96, 0x71, 0x00, 0x78, 0x9a, 0x52, 0x35, 0x3c, 0x31, 0xa5, 0xfc, 0x98, 0x4b,
	0x77, 0x8d, 0x79, 0x00, 0xdd, 0x82, 0x84, 0xb8, 0x9e, 0x87, 0x50, 0x8f, 0x52, 0x6a, 0x39, 0x61,
	0x2a, 0x44, 0xaa, 0xa6, 0x16, 0xa5, 0xf4, 0x6d, 0xb6, 0x36, 0x9e, 0x00, 0x1e, 0x93, 0x99, 0xb6,
	0x53, 0x21, 0x36, 0x0e, 0xa1, 0x5b, 0x60, 0x09, 0xe5, 0xff, 0x3a, 0xdd, 0x16, 0xac, 0x1e, 0x11,
	0x9f, 0x50, 0x72, 0x57, 0xb3, 0x7d, 0x58, 0x9b, 0x26, 0x8a, 0x7e, 0x8f, 0xa1, 0xe9, 0xb2, 0x4a,
	0xc1, 0x4c, 0x83, 0x63, 0xdc, 0xcf, 0x37, 0x68, 0x1c, 0xa6, 0xfe, 0xa5, 0xd4, 0xde, 0x00, 0x18,
	0xda, 0xd4, 0x19, 0x5b, 0x89, 0x77, 0x43, 0x04, 0xbf, 0xce, 0x90, 0x33, 0xef, 0x86, 0x8d, 0x29,
	0xe6, 0xcc, 0xec, 0x79, 0x56, 0xd8, 0x98, 0xb8, 0x81, 0xc2, 0x2b, 0x34, 0x15, 0xcb, 0xb8, 0x86,
	0x26, 0xd7, 0xff, 0x87, 0xcb, 0xc5, 0xa7, 0xd0, 0xc9, 0x8a, 0x24, 0x8e, 0xc3, 0x58, 0x50, 0xca,
	0x8c, 0xd2, 0x8a, 0x52, 0xfa, 0x2e, 0x43, 0x39, 0x6f, 0xda, 0x57, 0x65, 0xd6, 0xd7, 0x27, 0x68,
	0x9d, 0x11, 0x3b, 0x76, 0xc6, 0xd2, 0xd9, 0x3e, 0xb4, 0x13, 0x06, 0x58, 0xe2, 0x6c, 0x62, 0x02,
	0xf3, 0x73, 0xd6, 0x4a, 0xf2, 0x9b, 0x8d, 0x13, 0x68, 0x4b, 0x35, 0xe1, 0x63, 0x0f, 0x5a, 0x4a,
	0x2e, 0x49, 0xfd, 0xc5, 0x6a, 0x4d, 0xa9, 0x96, 0x31, 0x07, 0x3f, 0x2b, 0x50, 0x3d, 0xcc, 0xfe,
	0x9b, 0xf8, 0x06, 0x34, 0xf9, 0x38, 0x71, 0x4d, 0x5c, 0xe4, 0xd4, 0x7f, 0x47, 0x7f, 0x30, 0x83,
	0xf3, 0x13, 0x18, 0x4b, 0xf8, 0x1e, 0x1a, 0xb9, 0xfc, 0xe2, 0xba, 0x60, 0xce, 0x3e, 0x0b, 0x5d,
	0x9f, 0x57, 0xca, 0xeb, 0xe4, 0xd2, 0xaa, 0x74, 0x66, 0x73, 0xae, 0x74, 0xe6, 0x84, 0xdb, 0x58,
	0xc2, 0x2f, 0xd0, 0x2e, 0x06, 0x11, 0x1f, 0xc9, 0x78, 0xcf, 0x0b, 0xb2, 0xbe, 0xf1, 0x97, 0xaa,
	0x12, 0x7c, 0x09, 0xcb, 0x59, 0x78, 0x10, 0x05, 0x31, 0x97, 0x54, 0xbd, 0x5b, 0xc0, 0xd4, 0x96,
	0xd7, 0x50, 0xe3, 0x93, 0x42, 0x99, 0xcc, 0x42, 0x0c, 0xf4, 0xd5, 0x29, 0x54, 0x6e, 0x1c, 0xd6,
	0x18, 0xfe, 0xea, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x20, 0xa3, 0xa8, 0x73, 0xd9, 0x06, 0x00,
	0x00,
}
