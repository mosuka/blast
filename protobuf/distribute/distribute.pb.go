// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/distribute/distribute.proto

package distribute

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LivenessProbeResponse_State int32

const (
	LivenessProbeResponse_UNKNOWN LivenessProbeResponse_State = 0
	LivenessProbeResponse_ALIVE   LivenessProbeResponse_State = 1
	LivenessProbeResponse_DEAD    LivenessProbeResponse_State = 2
)

var LivenessProbeResponse_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "ALIVE",
	2: "DEAD",
}

var LivenessProbeResponse_State_value = map[string]int32{
	"UNKNOWN": 0,
	"ALIVE":   1,
	"DEAD":    2,
}

func (x LivenessProbeResponse_State) String() string {
	return proto.EnumName(LivenessProbeResponse_State_name, int32(x))
}

func (LivenessProbeResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{0, 0}
}

type ReadinessProbeResponse_State int32

const (
	ReadinessProbeResponse_UNKNOWN   ReadinessProbeResponse_State = 0
	ReadinessProbeResponse_READY     ReadinessProbeResponse_State = 1
	ReadinessProbeResponse_NOT_READY ReadinessProbeResponse_State = 2
)

var ReadinessProbeResponse_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "READY",
	2: "NOT_READY",
}

var ReadinessProbeResponse_State_value = map[string]int32{
	"UNKNOWN":   0,
	"READY":     1,
	"NOT_READY": 2,
}

func (x ReadinessProbeResponse_State) String() string {
	return proto.EnumName(ReadinessProbeResponse_State_name, int32(x))
}

func (ReadinessProbeResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{1, 0}
}

// use for health check
type LivenessProbeResponse struct {
	State                LivenessProbeResponse_State `protobuf:"varint,1,opt,name=state,proto3,enum=distribute.LivenessProbeResponse_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *LivenessProbeResponse) Reset()         { *m = LivenessProbeResponse{} }
func (m *LivenessProbeResponse) String() string { return proto.CompactTextString(m) }
func (*LivenessProbeResponse) ProtoMessage()    {}
func (*LivenessProbeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{0}
}

func (m *LivenessProbeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LivenessProbeResponse.Unmarshal(m, b)
}
func (m *LivenessProbeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LivenessProbeResponse.Marshal(b, m, deterministic)
}
func (m *LivenessProbeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LivenessProbeResponse.Merge(m, src)
}
func (m *LivenessProbeResponse) XXX_Size() int {
	return xxx_messageInfo_LivenessProbeResponse.Size(m)
}
func (m *LivenessProbeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LivenessProbeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LivenessProbeResponse proto.InternalMessageInfo

func (m *LivenessProbeResponse) GetState() LivenessProbeResponse_State {
	if m != nil {
		return m.State
	}
	return LivenessProbeResponse_UNKNOWN
}

// use for health check
type ReadinessProbeResponse struct {
	State                ReadinessProbeResponse_State `protobuf:"varint,1,opt,name=state,proto3,enum=distribute.ReadinessProbeResponse_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ReadinessProbeResponse) Reset()         { *m = ReadinessProbeResponse{} }
func (m *ReadinessProbeResponse) String() string { return proto.CompactTextString(m) }
func (*ReadinessProbeResponse) ProtoMessage()    {}
func (*ReadinessProbeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{1}
}

func (m *ReadinessProbeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadinessProbeResponse.Unmarshal(m, b)
}
func (m *ReadinessProbeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadinessProbeResponse.Marshal(b, m, deterministic)
}
func (m *ReadinessProbeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadinessProbeResponse.Merge(m, src)
}
func (m *ReadinessProbeResponse) XXX_Size() int {
	return xxx_messageInfo_ReadinessProbeResponse.Size(m)
}
func (m *ReadinessProbeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadinessProbeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadinessProbeResponse proto.InternalMessageInfo

func (m *ReadinessProbeResponse) GetState() ReadinessProbeResponse_State {
	if m != nil {
		return m.State
	}
	return ReadinessProbeResponse_UNKNOWN
}

type GetDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDocumentRequest) Reset()         { *m = GetDocumentRequest{} }
func (m *GetDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*GetDocumentRequest) ProtoMessage()    {}
func (*GetDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{2}
}

func (m *GetDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDocumentRequest.Unmarshal(m, b)
}
func (m *GetDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDocumentRequest.Marshal(b, m, deterministic)
}
func (m *GetDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDocumentRequest.Merge(m, src)
}
func (m *GetDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_GetDocumentRequest.Size(m)
}
func (m *GetDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDocumentRequest proto.InternalMessageInfo

func (m *GetDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetDocumentResponse struct {
	Fields               *any.Any `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDocumentResponse) Reset()         { *m = GetDocumentResponse{} }
func (m *GetDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*GetDocumentResponse) ProtoMessage()    {}
func (*GetDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{3}
}

func (m *GetDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDocumentResponse.Unmarshal(m, b)
}
func (m *GetDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDocumentResponse.Marshal(b, m, deterministic)
}
func (m *GetDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDocumentResponse.Merge(m, src)
}
func (m *GetDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_GetDocumentResponse.Size(m)
}
func (m *GetDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDocumentResponse proto.InternalMessageInfo

func (m *GetDocumentResponse) GetFields() *any.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type IndexDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields               *any.Any `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexDocumentRequest) Reset()         { *m = IndexDocumentRequest{} }
func (m *IndexDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*IndexDocumentRequest) ProtoMessage()    {}
func (*IndexDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{4}
}

func (m *IndexDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocumentRequest.Unmarshal(m, b)
}
func (m *IndexDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocumentRequest.Marshal(b, m, deterministic)
}
func (m *IndexDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocumentRequest.Merge(m, src)
}
func (m *IndexDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_IndexDocumentRequest.Size(m)
}
func (m *IndexDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocumentRequest proto.InternalMessageInfo

func (m *IndexDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *IndexDocumentRequest) GetFields() *any.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type IndexDocumentResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexDocumentResponse) Reset()         { *m = IndexDocumentResponse{} }
func (m *IndexDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*IndexDocumentResponse) ProtoMessage()    {}
func (*IndexDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{5}
}

func (m *IndexDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocumentResponse.Unmarshal(m, b)
}
func (m *IndexDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocumentResponse.Marshal(b, m, deterministic)
}
func (m *IndexDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocumentResponse.Merge(m, src)
}
func (m *IndexDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_IndexDocumentResponse.Size(m)
}
func (m *IndexDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocumentResponse proto.InternalMessageInfo

func (m *IndexDocumentResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DeleteDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDocumentRequest) Reset()         { *m = DeleteDocumentRequest{} }
func (m *DeleteDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDocumentRequest) ProtoMessage()    {}
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{6}
}

func (m *DeleteDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDocumentRequest.Unmarshal(m, b)
}
func (m *DeleteDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDocumentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDocumentRequest.Merge(m, src)
}
func (m *DeleteDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDocumentRequest.Size(m)
}
func (m *DeleteDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDocumentRequest proto.InternalMessageInfo

func (m *DeleteDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteDocumentResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDocumentResponse) Reset()         { *m = DeleteDocumentResponse{} }
func (m *DeleteDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDocumentResponse) ProtoMessage()    {}
func (*DeleteDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{7}
}

func (m *DeleteDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDocumentResponse.Unmarshal(m, b)
}
func (m *DeleteDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDocumentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDocumentResponse.Merge(m, src)
}
func (m *DeleteDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDocumentResponse.Size(m)
}
func (m *DeleteDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDocumentResponse proto.InternalMessageInfo

func (m *DeleteDocumentResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SearchRequest struct {
	SearchRequest        *any.Any `protobuf:"bytes,1,opt,name=search_request,json=searchRequest,proto3" json:"search_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{8}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetSearchRequest() *any.Any {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

type SearchResponse struct {
	SearchResult         *any.Any `protobuf:"bytes,1,opt,name=search_result,json=searchResult,proto3" json:"search_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{9}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetSearchResult() *any.Any {
	if m != nil {
		return m.SearchResult
	}
	return nil
}

func init() {
	proto.RegisterEnum("distribute.LivenessProbeResponse_State", LivenessProbeResponse_State_name, LivenessProbeResponse_State_value)
	proto.RegisterEnum("distribute.ReadinessProbeResponse_State", ReadinessProbeResponse_State_name, ReadinessProbeResponse_State_value)
	proto.RegisterType((*LivenessProbeResponse)(nil), "distribute.LivenessProbeResponse")
	proto.RegisterType((*ReadinessProbeResponse)(nil), "distribute.ReadinessProbeResponse")
	proto.RegisterType((*GetDocumentRequest)(nil), "distribute.GetDocumentRequest")
	proto.RegisterType((*GetDocumentResponse)(nil), "distribute.GetDocumentResponse")
	proto.RegisterType((*IndexDocumentRequest)(nil), "distribute.IndexDocumentRequest")
	proto.RegisterType((*IndexDocumentResponse)(nil), "distribute.IndexDocumentResponse")
	proto.RegisterType((*DeleteDocumentRequest)(nil), "distribute.DeleteDocumentRequest")
	proto.RegisterType((*DeleteDocumentResponse)(nil), "distribute.DeleteDocumentResponse")
	proto.RegisterType((*SearchRequest)(nil), "distribute.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "distribute.SearchResponse")
}

func init() {
	proto.RegisterFile("protobuf/distribute/distribute.proto", fileDescriptor_0b1b3e8a99d31c9c)
}

var fileDescriptor_0b1b3e8a99d31c9c = []byte{
	// 528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xdd, 0x8f, 0xd2, 0x4c,
	0x14, 0xc6, 0x29, 0xef, 0x0b, 0xca, 0xc1, 0x36, 0x64, 0x04, 0xe2, 0xd6, 0x44, 0xd7, 0xc9, 0x26,
	0x8b, 0xd1, 0x2d, 0x09, 0x5e, 0x19, 0xa3, 0x09, 0x5a, 0x62, 0x36, 0x4b, 0xba, 0x9b, 0xee, 0xfa,
	0x7d, 0xb1, 0x69, 0xe9, 0x59, 0xb6, 0xb1, 0x74, 0xb0, 0x33, 0x35, 0xee, 0xa5, 0x77, 0xfe, 0xc5,
	0x5e, 0x1b, 0xfa, 0x81, 0x1d, 0x28, 0xe0, 0x1d, 0x73, 0xce, 0x79, 0x7e, 0xf3, 0xf4, 0xe4, 0x19,
	0xe0, 0x60, 0x1e, 0x31, 0xc1, 0xdc, 0xf8, 0xaa, 0xef, 0xf9, 0x5c, 0x44, 0xbe, 0x1b, 0x0b, 0x2c,
	0xfc, 0x34, 0x92, 0x36, 0x81, 0xbf, 0x15, 0x7d, 0x6f, 0xca, 0xd8, 0x34, 0xc0, 0xfe, 0x52, 0xe8,
	0x84, 0x37, 0xe9, 0x98, 0x7e, 0x7f, 0xb5, 0x85, 0xb3, 0xb9, 0xc8, 0x9a, 0xf4, 0xa7, 0x02, 0x9d,
	0xb1, 0xff, 0x1d, 0x43, 0xe4, 0xfc, 0x2c, 0x62, 0x2e, 0xda, 0xc8, 0xe7, 0x2c, 0xe4, 0x48, 0x5e,
	0x42, 0x8d, 0x0b, 0x47, 0xe0, 0x3d, 0x65, 0x5f, 0xe9, 0x69, 0x83, 0x43, 0xa3, 0x70, 0x7f, 0xa9,
	0xc2, 0x38, 0x5f, 0x8c, 0xdb, 0xa9, 0x8a, 0x3e, 0x86, 0x5a, 0x72, 0x26, 0x4d, 0xb8, 0xf5, 0xce,
	0x3a, 0xb1, 0x4e, 0x3f, 0x58, 0xad, 0x0a, 0x69, 0x40, 0x6d, 0x38, 0x3e, 0x7e, 0x3f, 0x6a, 0x29,
	0xe4, 0x36, 0xfc, 0x6f, 0x8e, 0x86, 0x66, 0xab, 0x4a, 0x7f, 0x29, 0xd0, 0xb5, 0xd1, 0xf1, 0xfc,
	0x75, 0x13, 0xaf, 0x64, 0x13, 0xbd, 0xa2, 0x89, 0x72, 0x89, 0xec, 0xc2, 0xd8, 0xe4, 0xc2, 0x1e,
	0x0d, 0xcd, 0x4f, 0x2d, 0x85, 0xa8, 0xd0, 0xb0, 0x4e, 0x2f, 0x2e, 0xd3, 0x63, 0x95, 0x1e, 0x00,
	0x79, 0x8b, 0xc2, 0x64, 0x93, 0x78, 0x86, 0xa1, 0xb0, 0xf1, 0x5b, 0x8c, 0x5c, 0x10, 0x0d, 0xaa,
	0xbe, 0x97, 0x58, 0x68, 0xd8, 0x55, 0xdf, 0xa3, 0x6f, 0xe0, 0xae, 0x34, 0x95, 0x99, 0x7d, 0x0a,
	0xf5, 0x2b, 0x1f, 0x03, 0x8f, 0x27, 0xa3, 0xcd, 0x41, 0xdb, 0x48, 0x37, 0x6f, 0xe4, 0x9b, 0x37,
	0x86, 0xe1, 0x8d, 0x9d, 0xcd, 0xd0, 0x0b, 0x68, 0x1f, 0x87, 0x1e, 0xfe, 0xd8, 0x71, 0x59, 0x81,
	0x5a, 0xfd, 0x07, 0xea, 0x11, 0x74, 0x56, 0xa8, 0x99, 0xb9, 0x36, 0xd4, 0x26, 0x2c, 0x0e, 0x45,
	0x42, 0xae, 0xd9, 0xe9, 0x81, 0x1e, 0x42, 0xc7, 0xc4, 0x00, 0x05, 0xee, 0xfa, 0x64, 0x03, 0xba,
	0xab, 0x83, 0x5b, 0xc1, 0x63, 0x50, 0xcf, 0xd1, 0x89, 0x26, 0xd7, 0x39, 0xf0, 0x05, 0x68, 0x3c,
	0x29, 0x5c, 0x46, 0x69, 0x65, 0xeb, 0x92, 0x54, 0x5e, 0x14, 0xd3, 0x13, 0xd0, 0x72, 0x5a, 0x76,
	0xeb, 0x73, 0x50, 0x97, 0x38, 0x1e, 0x07, 0xdb, 0x69, 0x77, 0x72, 0xda, 0x62, 0x72, 0xf0, 0xfb,
	0x3f, 0x00, 0x73, 0x19, 0x23, 0x32, 0x06, 0x55, 0x8a, 0x33, 0xe9, 0xae, 0x31, 0x46, 0x8b, 0x07,
	0xa3, 0x3f, 0xda, 0xf9, 0x02, 0x68, 0x85, 0x58, 0xa0, 0xc9, 0xb9, 0xdc, 0x88, 0xa3, 0xbb, 0xb3,
	0x4c, 0x2b, 0xe4, 0x0c, 0x9a, 0x85, 0xa8, 0x91, 0x07, 0x45, 0xd1, 0x7a, 0x52, 0xf5, 0x87, 0x1b,
	0xfb, 0x4b, 0xe2, 0x47, 0x50, 0xa5, 0x84, 0x90, 0xfd, 0xa2, 0xa6, 0x2c, 0x92, 0xf2, 0x97, 0x97,
	0xc6, 0x8b, 0x56, 0x7a, 0x0a, 0xf9, 0x02, 0x9a, 0x9c, 0x11, 0x22, 0x09, 0x4b, 0x83, 0x26, 0xaf,
	0xa1, 0x3c, 0x62, 0x09, 0x7c, 0x08, 0xf5, 0x34, 0x02, 0x64, 0xaf, 0xa8, 0x90, 0x42, 0xa6, 0xeb,
	0x65, 0xad, 0x1c, 0xf2, 0xfa, 0xe8, 0xf3, 0x93, 0xa9, 0x2f, 0xae, 0x63, 0xd7, 0x98, 0xb0, 0x59,
	0x7f, 0xc6, 0x78, 0xfc, 0xd5, 0xe9, 0xbb, 0x81, 0xc3, 0x45, 0xbf, 0xe4, 0xff, 0xd6, 0xad, 0x27,
	0xc5, 0x67, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf3, 0xf4, 0x4b, 0x0a, 0x8d, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DistributeClient is the client API for Distribute service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DistributeClient interface {
	LivenessProbe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LivenessProbeResponse, error)
	ReadinessProbe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReadinessProbeResponse, error)
	GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error)
	IndexDocument(ctx context.Context, opts ...grpc.CallOption) (Distribute_IndexDocumentClient, error)
	DeleteDocument(ctx context.Context, opts ...grpc.CallOption) (Distribute_DeleteDocumentClient, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type distributeClient struct {
	cc *grpc.ClientConn
}

func NewDistributeClient(cc *grpc.ClientConn) DistributeClient {
	return &distributeClient{cc}
}

func (c *distributeClient) LivenessProbe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LivenessProbeResponse, error) {
	out := new(LivenessProbeResponse)
	err := c.cc.Invoke(ctx, "/distribute.Distribute/LivenessProbe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributeClient) ReadinessProbe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReadinessProbeResponse, error) {
	out := new(ReadinessProbeResponse)
	err := c.cc.Invoke(ctx, "/distribute.Distribute/ReadinessProbe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributeClient) GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error) {
	out := new(GetDocumentResponse)
	err := c.cc.Invoke(ctx, "/distribute.Distribute/GetDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributeClient) IndexDocument(ctx context.Context, opts ...grpc.CallOption) (Distribute_IndexDocumentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Distribute_serviceDesc.Streams[0], "/distribute.Distribute/IndexDocument", opts...)
	if err != nil {
		return nil, err
	}
	x := &distributeIndexDocumentClient{stream}
	return x, nil
}

type Distribute_IndexDocumentClient interface {
	Send(*IndexDocumentRequest) error
	CloseAndRecv() (*IndexDocumentResponse, error)
	grpc.ClientStream
}

type distributeIndexDocumentClient struct {
	grpc.ClientStream
}

func (x *distributeIndexDocumentClient) Send(m *IndexDocumentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *distributeIndexDocumentClient) CloseAndRecv() (*IndexDocumentResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(IndexDocumentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *distributeClient) DeleteDocument(ctx context.Context, opts ...grpc.CallOption) (Distribute_DeleteDocumentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Distribute_serviceDesc.Streams[1], "/distribute.Distribute/DeleteDocument", opts...)
	if err != nil {
		return nil, err
	}
	x := &distributeDeleteDocumentClient{stream}
	return x, nil
}

type Distribute_DeleteDocumentClient interface {
	Send(*DeleteDocumentRequest) error
	CloseAndRecv() (*DeleteDocumentResponse, error)
	grpc.ClientStream
}

type distributeDeleteDocumentClient struct {
	grpc.ClientStream
}

func (x *distributeDeleteDocumentClient) Send(m *DeleteDocumentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *distributeDeleteDocumentClient) CloseAndRecv() (*DeleteDocumentResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(DeleteDocumentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *distributeClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/distribute.Distribute/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DistributeServer is the server API for Distribute service.
type DistributeServer interface {
	LivenessProbe(context.Context, *empty.Empty) (*LivenessProbeResponse, error)
	ReadinessProbe(context.Context, *empty.Empty) (*ReadinessProbeResponse, error)
	GetDocument(context.Context, *GetDocumentRequest) (*GetDocumentResponse, error)
	IndexDocument(Distribute_IndexDocumentServer) error
	DeleteDocument(Distribute_DeleteDocumentServer) error
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
}

func RegisterDistributeServer(s *grpc.Server, srv DistributeServer) {
	s.RegisterService(&_Distribute_serviceDesc, srv)
}

func _Distribute_LivenessProbe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributeServer).LivenessProbe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/distribute.Distribute/LivenessProbe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributeServer).LivenessProbe(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Distribute_ReadinessProbe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributeServer).ReadinessProbe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/distribute.Distribute/ReadinessProbe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributeServer).ReadinessProbe(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Distribute_GetDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributeServer).GetDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/distribute.Distribute/GetDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributeServer).GetDocument(ctx, req.(*GetDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Distribute_IndexDocument_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DistributeServer).IndexDocument(&distributeIndexDocumentServer{stream})
}

type Distribute_IndexDocumentServer interface {
	SendAndClose(*IndexDocumentResponse) error
	Recv() (*IndexDocumentRequest, error)
	grpc.ServerStream
}

type distributeIndexDocumentServer struct {
	grpc.ServerStream
}

func (x *distributeIndexDocumentServer) SendAndClose(m *IndexDocumentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *distributeIndexDocumentServer) Recv() (*IndexDocumentRequest, error) {
	m := new(IndexDocumentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Distribute_DeleteDocument_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DistributeServer).DeleteDocument(&distributeDeleteDocumentServer{stream})
}

type Distribute_DeleteDocumentServer interface {
	SendAndClose(*DeleteDocumentResponse) error
	Recv() (*DeleteDocumentRequest, error)
	grpc.ServerStream
}

type distributeDeleteDocumentServer struct {
	grpc.ServerStream
}

func (x *distributeDeleteDocumentServer) SendAndClose(m *DeleteDocumentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *distributeDeleteDocumentServer) Recv() (*DeleteDocumentRequest, error) {
	m := new(DeleteDocumentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Distribute_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributeServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/distribute.Distribute/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributeServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Distribute_serviceDesc = grpc.ServiceDesc{
	ServiceName: "distribute.Distribute",
	HandlerType: (*DistributeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LivenessProbe",
			Handler:    _Distribute_LivenessProbe_Handler,
		},
		{
			MethodName: "ReadinessProbe",
			Handler:    _Distribute_ReadinessProbe_Handler,
		},
		{
			MethodName: "GetDocument",
			Handler:    _Distribute_GetDocument_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Distribute_Search_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "IndexDocument",
			Handler:       _Distribute_IndexDocument_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DeleteDocument",
			Handler:       _Distribute_DeleteDocument_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "protobuf/distribute/distribute.proto",
}
