// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/distribute/distribute.proto

package distribute

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	index "github.com/mosuka/blast/protobuf/index"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeHealthCheckRequest_Probe int32

const (
	NodeHealthCheckRequest_HEALTHINESS NodeHealthCheckRequest_Probe = 0
	NodeHealthCheckRequest_LIVENESS    NodeHealthCheckRequest_Probe = 1
	NodeHealthCheckRequest_READINESS   NodeHealthCheckRequest_Probe = 2
)

var NodeHealthCheckRequest_Probe_name = map[int32]string{
	0: "HEALTHINESS",
	1: "LIVENESS",
	2: "READINESS",
}

var NodeHealthCheckRequest_Probe_value = map[string]int32{
	"HEALTHINESS": 0,
	"LIVENESS":    1,
	"READINESS":   2,
}

func (x NodeHealthCheckRequest_Probe) String() string {
	return proto.EnumName(NodeHealthCheckRequest_Probe_name, int32(x))
}

func (NodeHealthCheckRequest_Probe) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{0, 0}
}

type NodeHealthCheckResponse_State int32

const (
	NodeHealthCheckResponse_HEALTHY   NodeHealthCheckResponse_State = 0
	NodeHealthCheckResponse_UNHEALTHY NodeHealthCheckResponse_State = 1
	NodeHealthCheckResponse_ALIVE     NodeHealthCheckResponse_State = 2
	NodeHealthCheckResponse_DEAD      NodeHealthCheckResponse_State = 3
	NodeHealthCheckResponse_READY     NodeHealthCheckResponse_State = 4
	NodeHealthCheckResponse_NOT_READY NodeHealthCheckResponse_State = 5
)

var NodeHealthCheckResponse_State_name = map[int32]string{
	0: "HEALTHY",
	1: "UNHEALTHY",
	2: "ALIVE",
	3: "DEAD",
	4: "READY",
	5: "NOT_READY",
}

var NodeHealthCheckResponse_State_value = map[string]int32{
	"HEALTHY":   0,
	"UNHEALTHY": 1,
	"ALIVE":     2,
	"DEAD":      3,
	"READY":     4,
	"NOT_READY": 5,
}

func (x NodeHealthCheckResponse_State) String() string {
	return proto.EnumName(NodeHealthCheckResponse_State_name, int32(x))
}

func (NodeHealthCheckResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{1, 0}
}

type NodeHealthCheckRequest struct {
	Probe                NodeHealthCheckRequest_Probe `protobuf:"varint,1,opt,name=probe,proto3,enum=distribute.NodeHealthCheckRequest_Probe" json:"probe,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *NodeHealthCheckRequest) Reset()         { *m = NodeHealthCheckRequest{} }
func (m *NodeHealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*NodeHealthCheckRequest) ProtoMessage()    {}
func (*NodeHealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{0}
}

func (m *NodeHealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeHealthCheckRequest.Unmarshal(m, b)
}
func (m *NodeHealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeHealthCheckRequest.Marshal(b, m, deterministic)
}
func (m *NodeHealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeHealthCheckRequest.Merge(m, src)
}
func (m *NodeHealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_NodeHealthCheckRequest.Size(m)
}
func (m *NodeHealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeHealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeHealthCheckRequest proto.InternalMessageInfo

func (m *NodeHealthCheckRequest) GetProbe() NodeHealthCheckRequest_Probe {
	if m != nil {
		return m.Probe
	}
	return NodeHealthCheckRequest_HEALTHINESS
}

type NodeHealthCheckResponse struct {
	State                NodeHealthCheckResponse_State `protobuf:"varint,1,opt,name=state,proto3,enum=distribute.NodeHealthCheckResponse_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *NodeHealthCheckResponse) Reset()         { *m = NodeHealthCheckResponse{} }
func (m *NodeHealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*NodeHealthCheckResponse) ProtoMessage()    {}
func (*NodeHealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{1}
}

func (m *NodeHealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeHealthCheckResponse.Unmarshal(m, b)
}
func (m *NodeHealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeHealthCheckResponse.Marshal(b, m, deterministic)
}
func (m *NodeHealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeHealthCheckResponse.Merge(m, src)
}
func (m *NodeHealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_NodeHealthCheckResponse.Size(m)
}
func (m *NodeHealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeHealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeHealthCheckResponse proto.InternalMessageInfo

func (m *NodeHealthCheckResponse) GetState() NodeHealthCheckResponse_State {
	if m != nil {
		return m.State
	}
	return NodeHealthCheckResponse_HEALTHY
}

type GetDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDocumentRequest) Reset()         { *m = GetDocumentRequest{} }
func (m *GetDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*GetDocumentRequest) ProtoMessage()    {}
func (*GetDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{2}
}

func (m *GetDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDocumentRequest.Unmarshal(m, b)
}
func (m *GetDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDocumentRequest.Marshal(b, m, deterministic)
}
func (m *GetDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDocumentRequest.Merge(m, src)
}
func (m *GetDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_GetDocumentRequest.Size(m)
}
func (m *GetDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDocumentRequest proto.InternalMessageInfo

func (m *GetDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetDocumentResponse struct {
	Document             *index.Document `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetDocumentResponse) Reset()         { *m = GetDocumentResponse{} }
func (m *GetDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*GetDocumentResponse) ProtoMessage()    {}
func (*GetDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{3}
}

func (m *GetDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDocumentResponse.Unmarshal(m, b)
}
func (m *GetDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDocumentResponse.Marshal(b, m, deterministic)
}
func (m *GetDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDocumentResponse.Merge(m, src)
}
func (m *GetDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_GetDocumentResponse.Size(m)
}
func (m *GetDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDocumentResponse proto.InternalMessageInfo

func (m *GetDocumentResponse) GetDocument() *index.Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type IndexDocumentRequest struct {
	Document             *index.Document `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *IndexDocumentRequest) Reset()         { *m = IndexDocumentRequest{} }
func (m *IndexDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*IndexDocumentRequest) ProtoMessage()    {}
func (*IndexDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{4}
}

func (m *IndexDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocumentRequest.Unmarshal(m, b)
}
func (m *IndexDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocumentRequest.Marshal(b, m, deterministic)
}
func (m *IndexDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocumentRequest.Merge(m, src)
}
func (m *IndexDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_IndexDocumentRequest.Size(m)
}
func (m *IndexDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocumentRequest proto.InternalMessageInfo

func (m *IndexDocumentRequest) GetDocument() *index.Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type IndexDocumentResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexDocumentResponse) Reset()         { *m = IndexDocumentResponse{} }
func (m *IndexDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*IndexDocumentResponse) ProtoMessage()    {}
func (*IndexDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{5}
}

func (m *IndexDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocumentResponse.Unmarshal(m, b)
}
func (m *IndexDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocumentResponse.Marshal(b, m, deterministic)
}
func (m *IndexDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocumentResponse.Merge(m, src)
}
func (m *IndexDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_IndexDocumentResponse.Size(m)
}
func (m *IndexDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocumentResponse proto.InternalMessageInfo

func (m *IndexDocumentResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DeleteDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDocumentRequest) Reset()         { *m = DeleteDocumentRequest{} }
func (m *DeleteDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDocumentRequest) ProtoMessage()    {}
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{6}
}

func (m *DeleteDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDocumentRequest.Unmarshal(m, b)
}
func (m *DeleteDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDocumentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDocumentRequest.Merge(m, src)
}
func (m *DeleteDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDocumentRequest.Size(m)
}
func (m *DeleteDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDocumentRequest proto.InternalMessageInfo

func (m *DeleteDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteDocumentResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDocumentResponse) Reset()         { *m = DeleteDocumentResponse{} }
func (m *DeleteDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDocumentResponse) ProtoMessage()    {}
func (*DeleteDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{7}
}

func (m *DeleteDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDocumentResponse.Unmarshal(m, b)
}
func (m *DeleteDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDocumentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDocumentResponse.Merge(m, src)
}
func (m *DeleteDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDocumentResponse.Size(m)
}
func (m *DeleteDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDocumentResponse proto.InternalMessageInfo

func (m *DeleteDocumentResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SearchRequest struct {
	SearchRequest        *any.Any `protobuf:"bytes,1,opt,name=search_request,json=searchRequest,proto3" json:"search_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{8}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetSearchRequest() *any.Any {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

type SearchResponse struct {
	SearchResult         *any.Any `protobuf:"bytes,1,opt,name=search_result,json=searchResult,proto3" json:"search_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1b3e8a99d31c9c, []int{9}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetSearchResult() *any.Any {
	if m != nil {
		return m.SearchResult
	}
	return nil
}

func init() {
	proto.RegisterEnum("distribute.NodeHealthCheckRequest_Probe", NodeHealthCheckRequest_Probe_name, NodeHealthCheckRequest_Probe_value)
	proto.RegisterEnum("distribute.NodeHealthCheckResponse_State", NodeHealthCheckResponse_State_name, NodeHealthCheckResponse_State_value)
	proto.RegisterType((*NodeHealthCheckRequest)(nil), "distribute.NodeHealthCheckRequest")
	proto.RegisterType((*NodeHealthCheckResponse)(nil), "distribute.NodeHealthCheckResponse")
	proto.RegisterType((*GetDocumentRequest)(nil), "distribute.GetDocumentRequest")
	proto.RegisterType((*GetDocumentResponse)(nil), "distribute.GetDocumentResponse")
	proto.RegisterType((*IndexDocumentRequest)(nil), "distribute.IndexDocumentRequest")
	proto.RegisterType((*IndexDocumentResponse)(nil), "distribute.IndexDocumentResponse")
	proto.RegisterType((*DeleteDocumentRequest)(nil), "distribute.DeleteDocumentRequest")
	proto.RegisterType((*DeleteDocumentResponse)(nil), "distribute.DeleteDocumentResponse")
	proto.RegisterType((*SearchRequest)(nil), "distribute.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "distribute.SearchResponse")
}

func init() {
	proto.RegisterFile("protobuf/distribute/distribute.proto", fileDescriptor_0b1b3e8a99d31c9c)
}

var fileDescriptor_0b1b3e8a99d31c9c = []byte{
	// 556 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x5d, 0xba, 0x65, 0xb4, 0xb7, 0xeb, 0x87, 0x4c, 0x37, 0x58, 0x1e, 0x60, 0x98, 0x49, 0x14,
	0x4d, 0x73, 0xa5, 0x22, 0x1e, 0x10, 0x12, 0x28, 0x5b, 0x2a, 0x5a, 0x51, 0x95, 0x29, 0x1d, 0x88,
	0x01, 0xd2, 0x94, 0x34, 0xa6, 0x8d, 0xd6, 0xd6, 0x25, 0x76, 0x24, 0xf6, 0x2b, 0xf8, 0x27, 0x3c,
	0xf2, 0xfb, 0x50, 0xe2, 0x24, 0x24, 0x5d, 0xc8, 0xe0, 0xa5, 0xea, 0xbd, 0xf7, 0x9c, 0xe3, 0xe3,
	0xdc, 0x93, 0xc0, 0xe1, 0xca, 0x63, 0x82, 0xd9, 0xfe, 0xd7, 0x8e, 0xe3, 0x72, 0xe1, 0xb9, 0xb6,
	0x2f, 0x68, 0xea, 0x2f, 0x09, 0xc7, 0x08, 0xfe, 0x74, 0xb4, 0xfd, 0x29, 0x63, 0xd3, 0x39, 0xed,
	0x24, 0x44, 0x6b, 0x79, 0x2d, 0x61, 0x9a, 0x96, 0xf4, 0xdc, 0xa5, 0x43, 0xbf, 0xcb, 0x5f, 0x39,
	0xc3, 0x3f, 0x14, 0xd8, 0x1b, 0x31, 0x87, 0xf6, 0xa9, 0x35, 0x17, 0xb3, 0xd3, 0x19, 0x9d, 0x5c,
	0x99, 0xf4, 0x9b, 0x4f, 0xb9, 0x40, 0xaf, 0x40, 0x5d, 0x79, 0xcc, 0xa6, 0xf7, 0x95, 0x03, 0xa5,
	0x5d, 0xef, 0xb6, 0x49, 0xea, 0xfc, 0x7c, 0x0a, 0x39, 0x0b, 0xf0, 0xa6, 0xa4, 0xe1, 0xe7, 0xa0,
	0x86, 0x35, 0x6a, 0x40, 0xb5, 0xdf, 0xd3, 0x87, 0xe7, 0xfd, 0xc1, 0xa8, 0x37, 0x1e, 0x37, 0x37,
	0xd0, 0x0e, 0x94, 0x87, 0x83, 0x0f, 0xbd, 0xb0, 0x52, 0x50, 0x0d, 0x2a, 0x66, 0x4f, 0x37, 0xe4,
	0xb0, 0x84, 0x7f, 0x2a, 0x70, 0xef, 0x86, 0x3c, 0x5f, 0xb1, 0x25, 0xa7, 0xe8, 0x35, 0xa8, 0x5c,
	0x58, 0x22, 0xb6, 0xf4, 0xb4, 0xd0, 0x92, 0xe4, 0x90, 0x71, 0x40, 0x30, 0x25, 0x0f, 0x9b, 0xa0,
	0x86, 0x35, 0xaa, 0xc2, 0x1d, 0xe9, 0xe9, 0xa2, 0xb9, 0x11, 0x38, 0x78, 0x3f, 0x8a, 0x4b, 0x05,
	0x55, 0x40, 0xd5, 0x03, 0x7f, 0xcd, 0x12, 0x2a, 0xc3, 0x96, 0xd1, 0xd3, 0x8d, 0xe6, 0x66, 0xd0,
	0x0c, 0x5c, 0x5e, 0x34, 0xb7, 0x02, 0xf8, 0xe8, 0xdd, 0xf9, 0xa5, 0x2c, 0x55, 0x7c, 0x08, 0xe8,
	0x0d, 0x15, 0x06, 0x9b, 0xf8, 0x0b, 0xba, 0x14, 0xf1, 0xd3, 0xab, 0x43, 0xc9, 0x75, 0x42, 0x9f,
	0x15, 0xb3, 0xe4, 0x3a, 0xf8, 0x04, 0xee, 0x66, 0x50, 0xd1, 0x8d, 0x8e, 0xa0, 0xec, 0x44, 0xbd,
	0x10, 0x5c, 0xed, 0x36, 0x88, 0xdc, 0x4f, 0x02, 0x4d, 0x00, 0xf8, 0x14, 0x5a, 0x83, 0x60, 0xb6,
	0x7e, 0xd6, 0x7f, 0x89, 0x1c, 0xc3, 0xee, 0x9a, 0x48, 0x64, 0xa5, 0x05, 0xea, 0x84, 0xf9, 0x91,
	0x84, 0x6a, 0xca, 0x02, 0x3f, 0x81, 0x5d, 0x83, 0xce, 0xa9, 0xa0, 0xb7, 0x5d, 0x90, 0xc0, 0xde,
	0x3a, 0xb0, 0x50, 0x78, 0x08, 0xb5, 0x31, 0xb5, 0xbc, 0xc9, 0x2c, 0x16, 0x7c, 0x09, 0x75, 0x1e,
	0x36, 0x2e, 0x3d, 0xd9, 0x89, 0xee, 0xd2, 0x22, 0x32, 0xda, 0x24, 0x8e, 0x31, 0xd1, 0x97, 0xd7,
	0x66, 0x8d, 0xa7, 0xc9, 0xf8, 0x2d, 0xd4, 0x63, 0xb5, 0xe8, 0xd4, 0x17, 0x50, 0x4b, 0xe4, 0xb8,
	0x3f, 0x2f, 0x56, 0xdb, 0x89, 0xd5, 0x02, 0x64, 0xf7, 0xd7, 0x26, 0x80, 0x91, 0x24, 0x0b, 0x7d,
	0x81, 0xc6, 0x5a, 0xb8, 0x10, 0xbe, 0xfd, 0x65, 0xd0, 0x1e, 0xff, 0x43, 0x3a, 0xf1, 0x06, 0x3a,
	0x83, 0x6a, 0x2a, 0x18, 0xe8, 0x41, 0x9a, 0x75, 0x33, 0x57, 0xda, 0xc3, 0xbf, 0xce, 0x13, 0xc5,
	0x8f, 0x50, 0xcb, 0x6c, 0x18, 0x1d, 0xa4, 0x39, 0x79, 0x09, 0xd2, 0x1e, 0x15, 0x20, 0x62, 0xdd,
	0xb6, 0x82, 0x3e, 0x43, 0x3d, 0xbb, 0x63, 0x94, 0x21, 0xe6, 0x06, 0x45, 0xc3, 0x45, 0x90, 0x94,
	0xb8, 0x0e, 0xdb, 0x72, 0x85, 0x68, 0x3f, 0xcd, 0xc8, 0x84, 0x44, 0xd3, 0xf2, 0x46, 0xb1, 0xc8,
	0xc9, 0xf1, 0xa7, 0xa3, 0xa9, 0x2b, 0x66, 0xbe, 0x4d, 0x26, 0x6c, 0xd1, 0x59, 0x30, 0xee, 0x5f,
	0x59, 0x1d, 0x7b, 0x6e, 0x71, 0xd1, 0xc9, 0xf9, 0xa0, 0xda, 0xdb, 0x61, 0xf3, 0xd9, 0xef, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xd2, 0x53, 0x25, 0x64, 0x6e, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DistributeClient is the client API for Distribute service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DistributeClient interface {
	NodeHealthCheck(ctx context.Context, in *NodeHealthCheckRequest, opts ...grpc.CallOption) (*NodeHealthCheckResponse, error)
	GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error)
	IndexDocument(ctx context.Context, opts ...grpc.CallOption) (Distribute_IndexDocumentClient, error)
	DeleteDocument(ctx context.Context, opts ...grpc.CallOption) (Distribute_DeleteDocumentClient, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type distributeClient struct {
	cc *grpc.ClientConn
}

func NewDistributeClient(cc *grpc.ClientConn) DistributeClient {
	return &distributeClient{cc}
}

func (c *distributeClient) NodeHealthCheck(ctx context.Context, in *NodeHealthCheckRequest, opts ...grpc.CallOption) (*NodeHealthCheckResponse, error) {
	out := new(NodeHealthCheckResponse)
	err := c.cc.Invoke(ctx, "/distribute.Distribute/NodeHealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributeClient) GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error) {
	out := new(GetDocumentResponse)
	err := c.cc.Invoke(ctx, "/distribute.Distribute/GetDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributeClient) IndexDocument(ctx context.Context, opts ...grpc.CallOption) (Distribute_IndexDocumentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Distribute_serviceDesc.Streams[0], "/distribute.Distribute/IndexDocument", opts...)
	if err != nil {
		return nil, err
	}
	x := &distributeIndexDocumentClient{stream}
	return x, nil
}

type Distribute_IndexDocumentClient interface {
	Send(*IndexDocumentRequest) error
	CloseAndRecv() (*IndexDocumentResponse, error)
	grpc.ClientStream
}

type distributeIndexDocumentClient struct {
	grpc.ClientStream
}

func (x *distributeIndexDocumentClient) Send(m *IndexDocumentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *distributeIndexDocumentClient) CloseAndRecv() (*IndexDocumentResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(IndexDocumentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *distributeClient) DeleteDocument(ctx context.Context, opts ...grpc.CallOption) (Distribute_DeleteDocumentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Distribute_serviceDesc.Streams[1], "/distribute.Distribute/DeleteDocument", opts...)
	if err != nil {
		return nil, err
	}
	x := &distributeDeleteDocumentClient{stream}
	return x, nil
}

type Distribute_DeleteDocumentClient interface {
	Send(*DeleteDocumentRequest) error
	CloseAndRecv() (*DeleteDocumentResponse, error)
	grpc.ClientStream
}

type distributeDeleteDocumentClient struct {
	grpc.ClientStream
}

func (x *distributeDeleteDocumentClient) Send(m *DeleteDocumentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *distributeDeleteDocumentClient) CloseAndRecv() (*DeleteDocumentResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(DeleteDocumentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *distributeClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/distribute.Distribute/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DistributeServer is the server API for Distribute service.
type DistributeServer interface {
	NodeHealthCheck(context.Context, *NodeHealthCheckRequest) (*NodeHealthCheckResponse, error)
	GetDocument(context.Context, *GetDocumentRequest) (*GetDocumentResponse, error)
	IndexDocument(Distribute_IndexDocumentServer) error
	DeleteDocument(Distribute_DeleteDocumentServer) error
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
}

func RegisterDistributeServer(s *grpc.Server, srv DistributeServer) {
	s.RegisterService(&_Distribute_serviceDesc, srv)
}

func _Distribute_NodeHealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeHealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributeServer).NodeHealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/distribute.Distribute/NodeHealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributeServer).NodeHealthCheck(ctx, req.(*NodeHealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Distribute_GetDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributeServer).GetDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/distribute.Distribute/GetDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributeServer).GetDocument(ctx, req.(*GetDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Distribute_IndexDocument_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DistributeServer).IndexDocument(&distributeIndexDocumentServer{stream})
}

type Distribute_IndexDocumentServer interface {
	SendAndClose(*IndexDocumentResponse) error
	Recv() (*IndexDocumentRequest, error)
	grpc.ServerStream
}

type distributeIndexDocumentServer struct {
	grpc.ServerStream
}

func (x *distributeIndexDocumentServer) SendAndClose(m *IndexDocumentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *distributeIndexDocumentServer) Recv() (*IndexDocumentRequest, error) {
	m := new(IndexDocumentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Distribute_DeleteDocument_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DistributeServer).DeleteDocument(&distributeDeleteDocumentServer{stream})
}

type Distribute_DeleteDocumentServer interface {
	SendAndClose(*DeleteDocumentResponse) error
	Recv() (*DeleteDocumentRequest, error)
	grpc.ServerStream
}

type distributeDeleteDocumentServer struct {
	grpc.ServerStream
}

func (x *distributeDeleteDocumentServer) SendAndClose(m *DeleteDocumentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *distributeDeleteDocumentServer) Recv() (*DeleteDocumentRequest, error) {
	m := new(DeleteDocumentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Distribute_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributeServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/distribute.Distribute/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributeServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Distribute_serviceDesc = grpc.ServiceDesc{
	ServiceName: "distribute.Distribute",
	HandlerType: (*DistributeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NodeHealthCheck",
			Handler:    _Distribute_NodeHealthCheck_Handler,
		},
		{
			MethodName: "GetDocument",
			Handler:    _Distribute_GetDocument_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Distribute_Search_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "IndexDocument",
			Handler:       _Distribute_IndexDocument_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DeleteDocument",
			Handler:       _Distribute_DeleteDocument_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "protobuf/distribute/distribute.proto",
}
