// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/blast.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LivenessProbeResponse_State int32

const (
	LivenessProbeResponse_UNKNOWN LivenessProbeResponse_State = 0
	LivenessProbeResponse_ALIVE   LivenessProbeResponse_State = 1
	LivenessProbeResponse_DEAD    LivenessProbeResponse_State = 2
)

var LivenessProbeResponse_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "ALIVE",
	2: "DEAD",
}

var LivenessProbeResponse_State_value = map[string]int32{
	"UNKNOWN": 0,
	"ALIVE":   1,
	"DEAD":    2,
}

func (x LivenessProbeResponse_State) String() string {
	return proto.EnumName(LivenessProbeResponse_State_name, int32(x))
}

func (LivenessProbeResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{0, 0}
}

type ReadinessProbeResponse_State int32

const (
	ReadinessProbeResponse_UNKNOWN   ReadinessProbeResponse_State = 0
	ReadinessProbeResponse_READY     ReadinessProbeResponse_State = 1
	ReadinessProbeResponse_NOT_READY ReadinessProbeResponse_State = 2
)

var ReadinessProbeResponse_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "READY",
	2: "NOT_READY",
}

var ReadinessProbeResponse_State_value = map[string]int32{
	"UNKNOWN":   0,
	"READY":     1,
	"NOT_READY": 2,
}

func (x ReadinessProbeResponse_State) String() string {
	return proto.EnumName(ReadinessProbeResponse_State_name, int32(x))
}

func (ReadinessProbeResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{1, 0}
}

type WatchStateResponse_Command int32

const (
	WatchStateResponse_UNKNOWN WatchStateResponse_Command = 0
	WatchStateResponse_SET     WatchStateResponse_Command = 1
	WatchStateResponse_DELETE  WatchStateResponse_Command = 2
)

var WatchStateResponse_Command_name = map[int32]string{
	0: "UNKNOWN",
	1: "SET",
	2: "DELETE",
}

var WatchStateResponse_Command_value = map[string]int32{
	"UNKNOWN": 0,
	"SET":     1,
	"DELETE":  2,
}

func (x WatchStateResponse_Command) String() string {
	return proto.EnumName(WatchStateResponse_Command_name, int32(x))
}

func (WatchStateResponse_Command) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{12, 0}
}

// use for health check
type LivenessProbeResponse struct {
	State                LivenessProbeResponse_State `protobuf:"varint,1,opt,name=state,proto3,enum=index.LivenessProbeResponse_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *LivenessProbeResponse) Reset()         { *m = LivenessProbeResponse{} }
func (m *LivenessProbeResponse) String() string { return proto.CompactTextString(m) }
func (*LivenessProbeResponse) ProtoMessage()    {}
func (*LivenessProbeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{0}
}

func (m *LivenessProbeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LivenessProbeResponse.Unmarshal(m, b)
}
func (m *LivenessProbeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LivenessProbeResponse.Marshal(b, m, deterministic)
}
func (m *LivenessProbeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LivenessProbeResponse.Merge(m, src)
}
func (m *LivenessProbeResponse) XXX_Size() int {
	return xxx_messageInfo_LivenessProbeResponse.Size(m)
}
func (m *LivenessProbeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LivenessProbeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LivenessProbeResponse proto.InternalMessageInfo

func (m *LivenessProbeResponse) GetState() LivenessProbeResponse_State {
	if m != nil {
		return m.State
	}
	return LivenessProbeResponse_UNKNOWN
}

// use for health check
type ReadinessProbeResponse struct {
	State                ReadinessProbeResponse_State `protobuf:"varint,1,opt,name=state,proto3,enum=index.ReadinessProbeResponse_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ReadinessProbeResponse) Reset()         { *m = ReadinessProbeResponse{} }
func (m *ReadinessProbeResponse) String() string { return proto.CompactTextString(m) }
func (*ReadinessProbeResponse) ProtoMessage()    {}
func (*ReadinessProbeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{1}
}

func (m *ReadinessProbeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadinessProbeResponse.Unmarshal(m, b)
}
func (m *ReadinessProbeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadinessProbeResponse.Marshal(b, m, deterministic)
}
func (m *ReadinessProbeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadinessProbeResponse.Merge(m, src)
}
func (m *ReadinessProbeResponse) XXX_Size() int {
	return xxx_messageInfo_ReadinessProbeResponse.Size(m)
}
func (m *ReadinessProbeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadinessProbeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadinessProbeResponse proto.InternalMessageInfo

func (m *ReadinessProbeResponse) GetState() ReadinessProbeResponse_State {
	if m != nil {
		return m.State
	}
	return ReadinessProbeResponse_UNKNOWN
}

// use for raft cluster status
type GetNodeRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeRequest) Reset()         { *m = GetNodeRequest{} }
func (m *GetNodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeRequest) ProtoMessage()    {}
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{2}
}

func (m *GetNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeRequest.Unmarshal(m, b)
}
func (m *GetNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeRequest.Marshal(b, m, deterministic)
}
func (m *GetNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeRequest.Merge(m, src)
}
func (m *GetNodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeRequest.Size(m)
}
func (m *GetNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeRequest proto.InternalMessageInfo

func (m *GetNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// use for raft cluster status
type GetNodeResponse struct {
	Metadata             *any.Any `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeResponse) Reset()         { *m = GetNodeResponse{} }
func (m *GetNodeResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeResponse) ProtoMessage()    {}
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{3}
}

func (m *GetNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeResponse.Unmarshal(m, b)
}
func (m *GetNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeResponse.Merge(m, src)
}
func (m *GetNodeResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeResponse.Size(m)
}
func (m *GetNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeResponse proto.InternalMessageInfo

func (m *GetNodeResponse) GetMetadata() *any.Any {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *GetNodeResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

// use for raft cluster status
type SetNodeRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata             *any.Any `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetNodeRequest) Reset()         { *m = SetNodeRequest{} }
func (m *SetNodeRequest) String() string { return proto.CompactTextString(m) }
func (*SetNodeRequest) ProtoMessage()    {}
func (*SetNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{4}
}

func (m *SetNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNodeRequest.Unmarshal(m, b)
}
func (m *SetNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNodeRequest.Marshal(b, m, deterministic)
}
func (m *SetNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNodeRequest.Merge(m, src)
}
func (m *SetNodeRequest) XXX_Size() int {
	return xxx_messageInfo_SetNodeRequest.Size(m)
}
func (m *SetNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetNodeRequest proto.InternalMessageInfo

func (m *SetNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SetNodeRequest) GetMetadata() *any.Any {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// use for raft cluster status
type DeleteNodeRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNodeRequest) Reset()         { *m = DeleteNodeRequest{} }
func (m *DeleteNodeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeRequest) ProtoMessage()    {}
func (*DeleteNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{5}
}

func (m *DeleteNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeRequest.Unmarshal(m, b)
}
func (m *DeleteNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeRequest.Merge(m, src)
}
func (m *DeleteNodeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeRequest.Size(m)
}
func (m *DeleteNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeRequest proto.InternalMessageInfo

func (m *DeleteNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// use for raft cluster status
type GetClusterResponse struct {
	Cluster              *any.Any `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterResponse) Reset()         { *m = GetClusterResponse{} }
func (m *GetClusterResponse) String() string { return proto.CompactTextString(m) }
func (*GetClusterResponse) ProtoMessage()    {}
func (*GetClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{6}
}

func (m *GetClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterResponse.Unmarshal(m, b)
}
func (m *GetClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterResponse.Marshal(b, m, deterministic)
}
func (m *GetClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterResponse.Merge(m, src)
}
func (m *GetClusterResponse) XXX_Size() int {
	return xxx_messageInfo_GetClusterResponse.Size(m)
}
func (m *GetClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterResponse proto.InternalMessageInfo

func (m *GetClusterResponse) GetCluster() *any.Any {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type GetStateRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateRequest) Reset()         { *m = GetStateRequest{} }
func (m *GetStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetStateRequest) ProtoMessage()    {}
func (*GetStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{7}
}

func (m *GetStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateRequest.Unmarshal(m, b)
}
func (m *GetStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateRequest.Marshal(b, m, deterministic)
}
func (m *GetStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateRequest.Merge(m, src)
}
func (m *GetStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetStateRequest.Size(m)
}
func (m *GetStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateRequest proto.InternalMessageInfo

func (m *GetStateRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetStateResponse struct {
	Value                *any.Any `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateResponse) Reset()         { *m = GetStateResponse{} }
func (m *GetStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetStateResponse) ProtoMessage()    {}
func (*GetStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{8}
}

func (m *GetStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateResponse.Unmarshal(m, b)
}
func (m *GetStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateResponse.Marshal(b, m, deterministic)
}
func (m *GetStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateResponse.Merge(m, src)
}
func (m *GetStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetStateResponse.Size(m)
}
func (m *GetStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateResponse proto.InternalMessageInfo

func (m *GetStateResponse) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type SetStateRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                *any.Any `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetStateRequest) Reset()         { *m = SetStateRequest{} }
func (m *SetStateRequest) String() string { return proto.CompactTextString(m) }
func (*SetStateRequest) ProtoMessage()    {}
func (*SetStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{9}
}

func (m *SetStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetStateRequest.Unmarshal(m, b)
}
func (m *SetStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetStateRequest.Marshal(b, m, deterministic)
}
func (m *SetStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetStateRequest.Merge(m, src)
}
func (m *SetStateRequest) XXX_Size() int {
	return xxx_messageInfo_SetStateRequest.Size(m)
}
func (m *SetStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetStateRequest proto.InternalMessageInfo

func (m *SetStateRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SetStateRequest) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type DeleteStateRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteStateRequest) Reset()         { *m = DeleteStateRequest{} }
func (m *DeleteStateRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteStateRequest) ProtoMessage()    {}
func (*DeleteStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{10}
}

func (m *DeleteStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteStateRequest.Unmarshal(m, b)
}
func (m *DeleteStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteStateRequest.Marshal(b, m, deterministic)
}
func (m *DeleteStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteStateRequest.Merge(m, src)
}
func (m *DeleteStateRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteStateRequest.Size(m)
}
func (m *DeleteStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteStateRequest proto.InternalMessageInfo

func (m *DeleteStateRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type WatchStateRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchStateRequest) Reset()         { *m = WatchStateRequest{} }
func (m *WatchStateRequest) String() string { return proto.CompactTextString(m) }
func (*WatchStateRequest) ProtoMessage()    {}
func (*WatchStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{11}
}

func (m *WatchStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchStateRequest.Unmarshal(m, b)
}
func (m *WatchStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchStateRequest.Marshal(b, m, deterministic)
}
func (m *WatchStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchStateRequest.Merge(m, src)
}
func (m *WatchStateRequest) XXX_Size() int {
	return xxx_messageInfo_WatchStateRequest.Size(m)
}
func (m *WatchStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchStateRequest proto.InternalMessageInfo

func (m *WatchStateRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type WatchStateResponse struct {
	Command              WatchStateResponse_Command `protobuf:"varint,1,opt,name=command,proto3,enum=index.WatchStateResponse_Command" json:"command,omitempty"`
	Key                  string                     `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                *any.Any                   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *WatchStateResponse) Reset()         { *m = WatchStateResponse{} }
func (m *WatchStateResponse) String() string { return proto.CompactTextString(m) }
func (*WatchStateResponse) ProtoMessage()    {}
func (*WatchStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{12}
}

func (m *WatchStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchStateResponse.Unmarshal(m, b)
}
func (m *WatchStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchStateResponse.Marshal(b, m, deterministic)
}
func (m *WatchStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchStateResponse.Merge(m, src)
}
func (m *WatchStateResponse) XXX_Size() int {
	return xxx_messageInfo_WatchStateResponse.Size(m)
}
func (m *WatchStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchStateResponse proto.InternalMessageInfo

func (m *WatchStateResponse) GetCommand() WatchStateResponse_Command {
	if m != nil {
		return m.Command
	}
	return WatchStateResponse_UNKNOWN
}

func (m *WatchStateResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *WatchStateResponse) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type GetDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDocumentRequest) Reset()         { *m = GetDocumentRequest{} }
func (m *GetDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*GetDocumentRequest) ProtoMessage()    {}
func (*GetDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{13}
}

func (m *GetDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDocumentRequest.Unmarshal(m, b)
}
func (m *GetDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDocumentRequest.Marshal(b, m, deterministic)
}
func (m *GetDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDocumentRequest.Merge(m, src)
}
func (m *GetDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_GetDocumentRequest.Size(m)
}
func (m *GetDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDocumentRequest proto.InternalMessageInfo

func (m *GetDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetDocumentResponse struct {
	Fields               *any.Any `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDocumentResponse) Reset()         { *m = GetDocumentResponse{} }
func (m *GetDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*GetDocumentResponse) ProtoMessage()    {}
func (*GetDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{14}
}

func (m *GetDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDocumentResponse.Unmarshal(m, b)
}
func (m *GetDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDocumentResponse.Marshal(b, m, deterministic)
}
func (m *GetDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDocumentResponse.Merge(m, src)
}
func (m *GetDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_GetDocumentResponse.Size(m)
}
func (m *GetDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDocumentResponse proto.InternalMessageInfo

func (m *GetDocumentResponse) GetFields() *any.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type IndexDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields               *any.Any `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexDocumentRequest) Reset()         { *m = IndexDocumentRequest{} }
func (m *IndexDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*IndexDocumentRequest) ProtoMessage()    {}
func (*IndexDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{15}
}

func (m *IndexDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocumentRequest.Unmarshal(m, b)
}
func (m *IndexDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocumentRequest.Marshal(b, m, deterministic)
}
func (m *IndexDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocumentRequest.Merge(m, src)
}
func (m *IndexDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_IndexDocumentRequest.Size(m)
}
func (m *IndexDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocumentRequest proto.InternalMessageInfo

func (m *IndexDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *IndexDocumentRequest) GetFields() *any.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type IndexDocumentResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexDocumentResponse) Reset()         { *m = IndexDocumentResponse{} }
func (m *IndexDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*IndexDocumentResponse) ProtoMessage()    {}
func (*IndexDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{16}
}

func (m *IndexDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocumentResponse.Unmarshal(m, b)
}
func (m *IndexDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocumentResponse.Marshal(b, m, deterministic)
}
func (m *IndexDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocumentResponse.Merge(m, src)
}
func (m *IndexDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_IndexDocumentResponse.Size(m)
}
func (m *IndexDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocumentResponse proto.InternalMessageInfo

func (m *IndexDocumentResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DeleteDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDocumentRequest) Reset()         { *m = DeleteDocumentRequest{} }
func (m *DeleteDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDocumentRequest) ProtoMessage()    {}
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{17}
}

func (m *DeleteDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDocumentRequest.Unmarshal(m, b)
}
func (m *DeleteDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDocumentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDocumentRequest.Merge(m, src)
}
func (m *DeleteDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDocumentRequest.Size(m)
}
func (m *DeleteDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDocumentRequest proto.InternalMessageInfo

func (m *DeleteDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteDocumentResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDocumentResponse) Reset()         { *m = DeleteDocumentResponse{} }
func (m *DeleteDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDocumentResponse) ProtoMessage()    {}
func (*DeleteDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{18}
}

func (m *DeleteDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDocumentResponse.Unmarshal(m, b)
}
func (m *DeleteDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDocumentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDocumentResponse.Merge(m, src)
}
func (m *DeleteDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDocumentResponse.Size(m)
}
func (m *DeleteDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDocumentResponse proto.InternalMessageInfo

func (m *DeleteDocumentResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SearchRequest struct {
	SearchRequest        *any.Any `protobuf:"bytes,1,opt,name=search_request,json=searchRequest,proto3" json:"search_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{19}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetSearchRequest() *any.Any {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

type SearchResponse struct {
	SearchResult         *any.Any `protobuf:"bytes,1,opt,name=search_result,json=searchResult,proto3" json:"search_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{20}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetSearchResult() *any.Any {
	if m != nil {
		return m.SearchResult
	}
	return nil
}

type GetIndexConfigResponse struct {
	IndexConfig          *any.Any `protobuf:"bytes,1,opt,name=index_config,json=indexConfig,proto3" json:"index_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIndexConfigResponse) Reset()         { *m = GetIndexConfigResponse{} }
func (m *GetIndexConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetIndexConfigResponse) ProtoMessage()    {}
func (*GetIndexConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{21}
}

func (m *GetIndexConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIndexConfigResponse.Unmarshal(m, b)
}
func (m *GetIndexConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIndexConfigResponse.Marshal(b, m, deterministic)
}
func (m *GetIndexConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIndexConfigResponse.Merge(m, src)
}
func (m *GetIndexConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetIndexConfigResponse.Size(m)
}
func (m *GetIndexConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIndexConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIndexConfigResponse proto.InternalMessageInfo

func (m *GetIndexConfigResponse) GetIndexConfig() *any.Any {
	if m != nil {
		return m.IndexConfig
	}
	return nil
}

type GetIndexStatsResponse struct {
	IndexStats           *any.Any `protobuf:"bytes,1,opt,name=index_stats,json=indexStats,proto3" json:"index_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIndexStatsResponse) Reset()         { *m = GetIndexStatsResponse{} }
func (m *GetIndexStatsResponse) String() string { return proto.CompactTextString(m) }
func (*GetIndexStatsResponse) ProtoMessage()    {}
func (*GetIndexStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{22}
}

func (m *GetIndexStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIndexStatsResponse.Unmarshal(m, b)
}
func (m *GetIndexStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIndexStatsResponse.Marshal(b, m, deterministic)
}
func (m *GetIndexStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIndexStatsResponse.Merge(m, src)
}
func (m *GetIndexStatsResponse) XXX_Size() int {
	return xxx_messageInfo_GetIndexStatsResponse.Size(m)
}
func (m *GetIndexStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIndexStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIndexStatsResponse proto.InternalMessageInfo

func (m *GetIndexStatsResponse) GetIndexStats() *any.Any {
	if m != nil {
		return m.IndexStats
	}
	return nil
}

// use for creating snapshot
type Document struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields               *any.Any `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ca165ef12c7d5, []int{23}
}

func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (m *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(m, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Document) GetFields() *any.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

func init() {
	proto.RegisterEnum("index.LivenessProbeResponse_State", LivenessProbeResponse_State_name, LivenessProbeResponse_State_value)
	proto.RegisterEnum("index.ReadinessProbeResponse_State", ReadinessProbeResponse_State_name, ReadinessProbeResponse_State_value)
	proto.RegisterEnum("index.WatchStateResponse_Command", WatchStateResponse_Command_name, WatchStateResponse_Command_value)
	proto.RegisterType((*LivenessProbeResponse)(nil), "index.LivenessProbeResponse")
	proto.RegisterType((*ReadinessProbeResponse)(nil), "index.ReadinessProbeResponse")
	proto.RegisterType((*GetNodeRequest)(nil), "index.GetNodeRequest")
	proto.RegisterType((*GetNodeResponse)(nil), "index.GetNodeResponse")
	proto.RegisterType((*SetNodeRequest)(nil), "index.SetNodeRequest")
	proto.RegisterType((*DeleteNodeRequest)(nil), "index.DeleteNodeRequest")
	proto.RegisterType((*GetClusterResponse)(nil), "index.GetClusterResponse")
	proto.RegisterType((*GetStateRequest)(nil), "index.GetStateRequest")
	proto.RegisterType((*GetStateResponse)(nil), "index.GetStateResponse")
	proto.RegisterType((*SetStateRequest)(nil), "index.SetStateRequest")
	proto.RegisterType((*DeleteStateRequest)(nil), "index.DeleteStateRequest")
	proto.RegisterType((*WatchStateRequest)(nil), "index.WatchStateRequest")
	proto.RegisterType((*WatchStateResponse)(nil), "index.WatchStateResponse")
	proto.RegisterType((*GetDocumentRequest)(nil), "index.GetDocumentRequest")
	proto.RegisterType((*GetDocumentResponse)(nil), "index.GetDocumentResponse")
	proto.RegisterType((*IndexDocumentRequest)(nil), "index.IndexDocumentRequest")
	proto.RegisterType((*IndexDocumentResponse)(nil), "index.IndexDocumentResponse")
	proto.RegisterType((*DeleteDocumentRequest)(nil), "index.DeleteDocumentRequest")
	proto.RegisterType((*DeleteDocumentResponse)(nil), "index.DeleteDocumentResponse")
	proto.RegisterType((*SearchRequest)(nil), "index.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "index.SearchResponse")
	proto.RegisterType((*GetIndexConfigResponse)(nil), "index.GetIndexConfigResponse")
	proto.RegisterType((*GetIndexStatsResponse)(nil), "index.GetIndexStatsResponse")
	proto.RegisterType((*Document)(nil), "index.Document")
}

func init() { proto.RegisterFile("protobuf/blast.proto", fileDescriptor_406ca165ef12c7d5) }

var fileDescriptor_406ca165ef12c7d5 = []byte{
	// 936 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xed, 0x6e, 0xdb, 0x36,
	0x14, 0xb5, 0x94, 0x39, 0x76, 0xae, 0x63, 0xd7, 0xe5, 0x6c, 0xaf, 0x51, 0x5b, 0x20, 0x63, 0xf6,
	0xd1, 0x7d, 0x29, 0x45, 0x86, 0xa1, 0xdb, 0xba, 0x0d, 0x73, 0x62, 0x2d, 0x0b, 0x1a, 0x38, 0xab,
	0x94, 0xad, 0xe8, 0xfe, 0x04, 0xb2, 0xc4, 0x24, 0x42, 0x6d, 0xc9, 0xb3, 0xa8, 0x62, 0x01, 0xf6,
	0x6f, 0xaf, 0xb5, 0x57, 0xd9, 0xbb, 0x14, 0x22, 0x29, 0x5a, 0x92, 0x65, 0x29, 0x40, 0xfe, 0x59,
	0xd4, 0xb9, 0xe7, 0xf0, 0x5e, 0x52, 0xe7, 0x24, 0xd0, 0x9b, 0x2f, 0x02, 0x1a, 0x4c, 0xa2, 0xcb,
	0xfd, 0xc9, 0xd4, 0x0e, 0xa9, 0xce, 0x1e, 0x51, 0xdd, 0xf3, 0x5d, 0xf2, 0xb7, 0xb6, 0x73, 0x15,
	0x04, 0x57, 0x53, 0xb2, 0x2f, 0x31, 0xb6, 0x7f, 0xc3, 0x11, 0xda, 0xc3, 0xfc, 0x2b, 0x32, 0x9b,
	0x53, 0xf1, 0x12, 0xff, 0x03, 0xfd, 0x53, 0xef, 0x2d, 0xf1, 0x49, 0x18, 0xfe, 0xb6, 0x08, 0x26,
	0xc4, 0x24, 0xe1, 0x3c, 0xf0, 0x43, 0x82, 0xbe, 0x85, 0x7a, 0x48, 0x6d, 0x4a, 0x1e, 0x28, 0xbb,
	0xca, 0x93, 0xce, 0x01, 0xd6, 0x99, 0x8e, 0x5e, 0x08, 0xd6, 0xad, 0x18, 0x69, 0xf2, 0x02, 0xfc,
	0x19, 0xd4, 0xd9, 0x33, 0x6a, 0x41, 0xe3, 0xf7, 0xf1, 0x8b, 0xf1, 0xd9, 0xab, 0x71, 0xb7, 0x86,
	0xb6, 0xa0, 0x3e, 0x3c, 0x3d, 0xf9, 0xc3, 0xe8, 0x2a, 0xa8, 0x09, 0xef, 0x8d, 0x8c, 0xe1, 0xa8,
	0xab, 0xe2, 0x7f, 0x15, 0x18, 0x98, 0xc4, 0x76, 0xbd, 0x55, 0xfd, 0xef, 0xb2, 0xfa, 0x7b, 0x42,
	0xbf, 0x18, 0x9d, 0xdd, 0x80, 0xbe, 0x6e, 0x03, 0xa6, 0x31, 0x1c, 0xbd, 0xee, 0x2a, 0xa8, 0x0d,
	0x5b, 0xe3, 0xb3, 0xf3, 0x0b, 0xfe, 0xa8, 0xe2, 0x5d, 0xe8, 0x1c, 0x13, 0x3a, 0x0e, 0x5c, 0x62,
	0x92, 0xbf, 0x22, 0x12, 0x52, 0xd4, 0x01, 0xd5, 0x73, 0x99, 0xf2, 0x96, 0xa9, 0x7a, 0x2e, 0x7e,
	0x0d, 0xf7, 0x24, 0x42, 0xec, 0xef, 0x29, 0x34, 0x67, 0x84, 0xda, 0xae, 0x4d, 0x6d, 0x06, 0x6c,
	0x1d, 0xf4, 0x74, 0x3e, 0x68, 0x3d, 0x19, 0xb4, 0x3e, 0xf4, 0x6f, 0x4c, 0x89, 0x42, 0xbd, 0xa4,
	0x23, 0x95, 0xf1, 0x8a, 0xcd, 0x9a, 0xd0, 0xb1, 0x4a, 0xc5, 0x33, 0x4a, 0xea, 0x6d, 0x94, 0xf0,
	0x1e, 0xdc, 0x1f, 0x91, 0x29, 0xa1, 0xa4, 0xac, 0xa7, 0x11, 0xa0, 0x63, 0x42, 0x8f, 0xa6, 0x51,
	0x48, 0xc9, 0x42, 0xb6, 0xa5, 0x43, 0xc3, 0xe1, 0x4b, 0xa5, 0x5d, 0x25, 0x20, 0xbc, 0xc7, 0x26,
	0xc3, 0xc7, 0x2f, 0x84, 0xba, 0xb0, 0xf1, 0x86, 0xdc, 0x08, 0xa5, 0xf8, 0x27, 0xfe, 0x09, 0xba,
	0x4b, 0x90, 0x10, 0xfa, 0x1c, 0xea, 0x6f, 0xed, 0x69, 0x44, 0x4a, 0x65, 0x38, 0x04, 0x9f, 0xc1,
	0x3d, 0xab, 0x4a, 0x64, 0x49, 0xa8, 0x56, 0x13, 0x7e, 0x02, 0x88, 0x0f, 0xa8, 0x62, 0xe3, 0x1f,
	0xc3, 0xfd, 0x57, 0x36, 0x75, 0xae, 0x2b, 0x60, 0xff, 0x29, 0x80, 0xd2, 0x38, 0xd1, 0xe2, 0x73,
	0x68, 0x38, 0xc1, 0x6c, 0x66, 0xfb, 0xae, 0xb8, 0xc4, 0x1f, 0x8a, 0x4b, 0xbc, 0x8a, 0xd5, 0x8f,
	0x38, 0xd0, 0x4c, 0x2a, 0x12, 0x15, 0xb5, 0xa0, 0xc1, 0x8d, 0xea, 0x06, 0xbf, 0x80, 0x86, 0x60,
	0xcc, 0x7e, 0x04, 0x0d, 0xd8, 0xb0, 0x8c, 0xf3, 0xae, 0x82, 0x00, 0x36, 0x47, 0xc6, 0xa9, 0x71,
	0x6e, 0x74, 0x55, 0xfc, 0x11, 0xbb, 0x09, 0xa3, 0xc0, 0x89, 0x66, 0xc4, 0xa7, 0xeb, 0xee, 0xcb,
	0x11, 0xbc, 0x9f, 0x41, 0x89, 0x26, 0xbf, 0x84, 0xcd, 0x4b, 0x8f, 0x4c, 0xdd, 0xb0, 0xf4, 0x20,
	0x05, 0x06, 0x9f, 0x43, 0xef, 0x24, 0x1e, 0x41, 0x85, 0x58, 0x8a, 0x55, 0xbd, 0x05, 0xeb, 0x57,
	0xd0, 0xcf, 0xb1, 0x8a, 0xcd, 0xf5, 0xa0, 0xee, 0x04, 0x91, 0x4f, 0x19, 0x73, 0xdd, 0xe4, 0x0f,
	0xf8, 0x53, 0xe8, 0xf3, 0xd3, 0xaf, 0x6a, 0x59, 0x87, 0x41, 0x1e, 0x58, 0x4a, 0x7c, 0x0a, 0x6d,
	0x8b, 0xd8, 0x0b, 0xe7, 0x3a, 0x21, 0x7c, 0x0e, 0x9d, 0x90, 0x2d, 0x5c, 0x2c, 0xf8, 0x4a, 0xe9,
	0x90, 0xda, 0x61, 0xba, 0x18, 0xbf, 0x88, 0x9d, 0x81, 0x2f, 0x48, 0x4f, 0x6c, 0x4b, 0xba, 0x30,
	0x9a, 0x96, 0xb3, 0x6d, 0x27, 0x6c, 0x31, 0x12, 0xbf, 0x84, 0xc1, 0x31, 0xa1, 0x6c, 0x4a, 0x47,
	0x81, 0x7f, 0xe9, 0x5d, 0x49, 0xd2, 0x67, 0xb0, 0xcd, 0x6e, 0xe5, 0x85, 0xc3, 0xd6, 0x4b, 0x39,
	0x5b, 0xde, 0x92, 0x00, 0x8f, 0xa1, 0x9f, 0x50, 0xc6, 0x77, 0x39, 0x94, 0x8c, 0xdf, 0x00, 0xc7,
	0x5d, 0xc4, 0x0e, 0x57, 0x7e, 0x2f, 0xc0, 0x93, 0xe5, 0xf8, 0x57, 0x68, 0x26, 0x73, 0xbe, 0xdb,
	0x7d, 0x38, 0xf8, 0x7f, 0x0b, 0xea, 0x87, 0x71, 0x46, 0xa2, 0x63, 0x68, 0x67, 0x12, 0x0b, 0x0d,
	0x56, 0x0a, 0x8d, 0x38, 0x0d, 0xb5, 0x47, 0x65, 0xf9, 0x86, 0x6b, 0xe8, 0x04, 0x3a, 0xd9, 0xe8,
	0x59, 0xcb, 0xf4, 0xb8, 0x34, 0xa9, 0x70, 0x0d, 0x7d, 0x0f, 0x0d, 0x11, 0x26, 0xa8, 0x2f, 0xb0,
	0xd9, 0xf8, 0xd1, 0x06, 0xf9, 0xe5, 0x74, 0xad, 0x95, 0xab, 0xb5, 0xf2, 0xb5, 0x85, 0xdb, 0xc2,
	0x35, 0xf4, 0x33, 0xc0, 0x32, 0x15, 0xd0, 0x03, 0x51, 0xbe, 0x12, 0x14, 0x25, 0x0c, 0x43, 0x80,
	0x65, 0x64, 0xac, 0x1d, 0xc0, 0xce, 0x72, 0xf7, 0xb9, 0x74, 0xc1, 0x35, 0x64, 0xc0, 0x36, 0x73,
	0xbf, 0xbb, 0x90, 0x3c, 0x55, 0xd0, 0x0f, 0xd0, 0xb4, 0x7c, 0x7b, 0x1e, 0x5e, 0x07, 0x74, 0x2d,
	0xc5, 0xfa, 0x3e, 0x7e, 0x84, 0x66, 0x92, 0x47, 0x28, 0x35, 0xeb, 0xb4, 0xcb, 0x6b, 0x1f, 0xac,
	0xac, 0xcb, 0x1e, 0x62, 0xf1, 0x7c, 0x79, 0x2e, 0x9f, 0x4a, 0xc4, 0x0f, 0xa1, 0x95, 0xca, 0x1e,
	0xb4, 0x93, 0x39, 0x87, 0x5b, 0x72, 0x18, 0x00, 0xcb, 0x0c, 0x91, 0x47, 0xb9, 0x12, 0x55, 0x72,
	0x8a, 0xab, 0x81, 0xc3, 0xa6, 0xf8, 0x0b, 0xb4, 0x52, 0x96, 0x8e, 0x52, 0x33, 0xcf, 0x39, 0xa3,
	0xa6, 0x15, 0xbd, 0x92, 0x03, 0x19, 0x43, 0x3b, 0xe3, 0xbf, 0xe8, 0xa1, 0x80, 0x17, 0x79, 0xbd,
	0xfc, 0xd4, 0x0a, 0x2d, 0x1b, 0xd7, 0x9e, 0x28, 0xe8, 0x25, 0x74, 0xb2, 0xbe, 0x8b, 0x1e, 0x65,
	0xa6, 0x94, 0x67, 0x7c, 0xbc, 0xe6, 0x6d, 0x8a, 0xf2, 0x19, 0x6c, 0x72, 0x33, 0x45, 0x3d, 0x79,
	0x62, 0x29, 0xb3, 0xd5, 0xfa, 0xb9, 0xd5, 0xf4, 0x87, 0x9f, 0x35, 0xce, 0xca, 0x0f, 0xbf, 0xd8,
	0x67, 0x71, 0x2d, 0x36, 0xa3, 0x8c, 0x61, 0x56, 0x9a, 0x51, 0xa1, 0xbd, 0xe2, 0xda, 0x21, 0xfe,
	0x73, 0xf7, 0xca, 0xa3, 0xd7, 0xd1, 0x44, 0x77, 0x82, 0xd9, 0xfe, 0x2c, 0x08, 0xa3, 0x37, 0x36,
	0xff, 0xa7, 0x40, 0xfe, 0x91, 0x3f, 0xd9, 0x64, 0xbf, 0xbe, 0x7e, 0x17, 0x00, 0x00, 0xff, 0xff,
	0xbf, 0x28, 0x7e, 0x79, 0x36, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlastClient is the client API for Blast service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlastClient interface {
	LivenessProbe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LivenessProbeResponse, error)
	ReadinessProbe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReadinessProbeResponse, error)
	GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error)
	SetNode(ctx context.Context, in *SetNodeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetCluster(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetClusterResponse, error)
	WatchCluster(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Blast_WatchClusterClient, error)
	Snapshot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	GetState(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*GetStateResponse, error)
	SetState(ctx context.Context, in *SetStateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteState(ctx context.Context, in *DeleteStateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	WatchState(ctx context.Context, in *WatchStateRequest, opts ...grpc.CallOption) (Blast_WatchStateClient, error)
	GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error)
	IndexDocument(ctx context.Context, opts ...grpc.CallOption) (Blast_IndexDocumentClient, error)
	DeleteDocument(ctx context.Context, opts ...grpc.CallOption) (Blast_DeleteDocumentClient, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	GetIndexConfig(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIndexConfigResponse, error)
	GetIndexStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIndexStatsResponse, error)
}

type blastClient struct {
	cc *grpc.ClientConn
}

func NewBlastClient(cc *grpc.ClientConn) BlastClient {
	return &blastClient{cc}
}

func (c *blastClient) LivenessProbe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LivenessProbeResponse, error) {
	out := new(LivenessProbeResponse)
	err := c.cc.Invoke(ctx, "/index.Blast/LivenessProbe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) ReadinessProbe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReadinessProbeResponse, error) {
	out := new(ReadinessProbeResponse)
	err := c.cc.Invoke(ctx, "/index.Blast/ReadinessProbe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error) {
	out := new(GetNodeResponse)
	err := c.cc.Invoke(ctx, "/index.Blast/GetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) SetNode(ctx context.Context, in *SetNodeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Blast/SetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Blast/DeleteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) GetCluster(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetClusterResponse, error) {
	out := new(GetClusterResponse)
	err := c.cc.Invoke(ctx, "/index.Blast/GetCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) WatchCluster(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Blast_WatchClusterClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Blast_serviceDesc.Streams[0], "/index.Blast/WatchCluster", opts...)
	if err != nil {
		return nil, err
	}
	x := &blastWatchClusterClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Blast_WatchClusterClient interface {
	Recv() (*GetClusterResponse, error)
	grpc.ClientStream
}

type blastWatchClusterClient struct {
	grpc.ClientStream
}

func (x *blastWatchClusterClient) Recv() (*GetClusterResponse, error) {
	m := new(GetClusterResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *blastClient) Snapshot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Blast/Snapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) GetState(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*GetStateResponse, error) {
	out := new(GetStateResponse)
	err := c.cc.Invoke(ctx, "/index.Blast/GetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) SetState(ctx context.Context, in *SetStateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Blast/SetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) DeleteState(ctx context.Context, in *DeleteStateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Blast/DeleteState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) WatchState(ctx context.Context, in *WatchStateRequest, opts ...grpc.CallOption) (Blast_WatchStateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Blast_serviceDesc.Streams[1], "/index.Blast/WatchState", opts...)
	if err != nil {
		return nil, err
	}
	x := &blastWatchStateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Blast_WatchStateClient interface {
	Recv() (*WatchStateResponse, error)
	grpc.ClientStream
}

type blastWatchStateClient struct {
	grpc.ClientStream
}

func (x *blastWatchStateClient) Recv() (*WatchStateResponse, error) {
	m := new(WatchStateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *blastClient) GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error) {
	out := new(GetDocumentResponse)
	err := c.cc.Invoke(ctx, "/index.Blast/GetDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) IndexDocument(ctx context.Context, opts ...grpc.CallOption) (Blast_IndexDocumentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Blast_serviceDesc.Streams[2], "/index.Blast/IndexDocument", opts...)
	if err != nil {
		return nil, err
	}
	x := &blastIndexDocumentClient{stream}
	return x, nil
}

type Blast_IndexDocumentClient interface {
	Send(*IndexDocumentRequest) error
	CloseAndRecv() (*IndexDocumentResponse, error)
	grpc.ClientStream
}

type blastIndexDocumentClient struct {
	grpc.ClientStream
}

func (x *blastIndexDocumentClient) Send(m *IndexDocumentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *blastIndexDocumentClient) CloseAndRecv() (*IndexDocumentResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(IndexDocumentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *blastClient) DeleteDocument(ctx context.Context, opts ...grpc.CallOption) (Blast_DeleteDocumentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Blast_serviceDesc.Streams[3], "/index.Blast/DeleteDocument", opts...)
	if err != nil {
		return nil, err
	}
	x := &blastDeleteDocumentClient{stream}
	return x, nil
}

type Blast_DeleteDocumentClient interface {
	Send(*DeleteDocumentRequest) error
	CloseAndRecv() (*DeleteDocumentResponse, error)
	grpc.ClientStream
}

type blastDeleteDocumentClient struct {
	grpc.ClientStream
}

func (x *blastDeleteDocumentClient) Send(m *DeleteDocumentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *blastDeleteDocumentClient) CloseAndRecv() (*DeleteDocumentResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(DeleteDocumentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *blastClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/index.Blast/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) GetIndexConfig(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIndexConfigResponse, error) {
	out := new(GetIndexConfigResponse)
	err := c.cc.Invoke(ctx, "/index.Blast/GetIndexConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blastClient) GetIndexStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIndexStatsResponse, error) {
	out := new(GetIndexStatsResponse)
	err := c.cc.Invoke(ctx, "/index.Blast/GetIndexStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlastServer is the server API for Blast service.
type BlastServer interface {
	LivenessProbe(context.Context, *empty.Empty) (*LivenessProbeResponse, error)
	ReadinessProbe(context.Context, *empty.Empty) (*ReadinessProbeResponse, error)
	GetNode(context.Context, *GetNodeRequest) (*GetNodeResponse, error)
	SetNode(context.Context, *SetNodeRequest) (*empty.Empty, error)
	DeleteNode(context.Context, *DeleteNodeRequest) (*empty.Empty, error)
	GetCluster(context.Context, *empty.Empty) (*GetClusterResponse, error)
	WatchCluster(*empty.Empty, Blast_WatchClusterServer) error
	Snapshot(context.Context, *empty.Empty) (*empty.Empty, error)
	GetState(context.Context, *GetStateRequest) (*GetStateResponse, error)
	SetState(context.Context, *SetStateRequest) (*empty.Empty, error)
	DeleteState(context.Context, *DeleteStateRequest) (*empty.Empty, error)
	WatchState(*WatchStateRequest, Blast_WatchStateServer) error
	GetDocument(context.Context, *GetDocumentRequest) (*GetDocumentResponse, error)
	IndexDocument(Blast_IndexDocumentServer) error
	DeleteDocument(Blast_DeleteDocumentServer) error
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	GetIndexConfig(context.Context, *empty.Empty) (*GetIndexConfigResponse, error)
	GetIndexStats(context.Context, *empty.Empty) (*GetIndexStatsResponse, error)
}

func RegisterBlastServer(s *grpc.Server, srv BlastServer) {
	s.RegisterService(&_Blast_serviceDesc, srv)
}

func _Blast_LivenessProbe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).LivenessProbe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/LivenessProbe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).LivenessProbe(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_ReadinessProbe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).ReadinessProbe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/ReadinessProbe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).ReadinessProbe(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).GetNode(ctx, req.(*GetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_SetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).SetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/SetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).SetNode(ctx, req.(*SetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_DeleteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).DeleteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/DeleteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).DeleteNode(ctx, req.(*DeleteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_GetCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).GetCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/GetCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).GetCluster(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_WatchCluster_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BlastServer).WatchCluster(m, &blastWatchClusterServer{stream})
}

type Blast_WatchClusterServer interface {
	Send(*GetClusterResponse) error
	grpc.ServerStream
}

type blastWatchClusterServer struct {
	grpc.ServerStream
}

func (x *blastWatchClusterServer) Send(m *GetClusterResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Blast_Snapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).Snapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/Snapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).Snapshot(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_GetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).GetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/GetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).GetState(ctx, req.(*GetStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_SetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).SetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/SetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).SetState(ctx, req.(*SetStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_DeleteState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).DeleteState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/DeleteState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).DeleteState(ctx, req.(*DeleteStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_WatchState_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchStateRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BlastServer).WatchState(m, &blastWatchStateServer{stream})
}

type Blast_WatchStateServer interface {
	Send(*WatchStateResponse) error
	grpc.ServerStream
}

type blastWatchStateServer struct {
	grpc.ServerStream
}

func (x *blastWatchStateServer) Send(m *WatchStateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Blast_GetDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).GetDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/GetDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).GetDocument(ctx, req.(*GetDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_IndexDocument_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BlastServer).IndexDocument(&blastIndexDocumentServer{stream})
}

type Blast_IndexDocumentServer interface {
	SendAndClose(*IndexDocumentResponse) error
	Recv() (*IndexDocumentRequest, error)
	grpc.ServerStream
}

type blastIndexDocumentServer struct {
	grpc.ServerStream
}

func (x *blastIndexDocumentServer) SendAndClose(m *IndexDocumentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *blastIndexDocumentServer) Recv() (*IndexDocumentRequest, error) {
	m := new(IndexDocumentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Blast_DeleteDocument_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BlastServer).DeleteDocument(&blastDeleteDocumentServer{stream})
}

type Blast_DeleteDocumentServer interface {
	SendAndClose(*DeleteDocumentResponse) error
	Recv() (*DeleteDocumentRequest, error)
	grpc.ServerStream
}

type blastDeleteDocumentServer struct {
	grpc.ServerStream
}

func (x *blastDeleteDocumentServer) SendAndClose(m *DeleteDocumentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *blastDeleteDocumentServer) Recv() (*DeleteDocumentRequest, error) {
	m := new(DeleteDocumentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Blast_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_GetIndexConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).GetIndexConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/GetIndexConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).GetIndexConfig(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blast_GetIndexStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlastServer).GetIndexStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Blast/GetIndexStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlastServer).GetIndexStats(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Blast_serviceDesc = grpc.ServiceDesc{
	ServiceName: "index.Blast",
	HandlerType: (*BlastServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LivenessProbe",
			Handler:    _Blast_LivenessProbe_Handler,
		},
		{
			MethodName: "ReadinessProbe",
			Handler:    _Blast_ReadinessProbe_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _Blast_GetNode_Handler,
		},
		{
			MethodName: "SetNode",
			Handler:    _Blast_SetNode_Handler,
		},
		{
			MethodName: "DeleteNode",
			Handler:    _Blast_DeleteNode_Handler,
		},
		{
			MethodName: "GetCluster",
			Handler:    _Blast_GetCluster_Handler,
		},
		{
			MethodName: "Snapshot",
			Handler:    _Blast_Snapshot_Handler,
		},
		{
			MethodName: "GetState",
			Handler:    _Blast_GetState_Handler,
		},
		{
			MethodName: "SetState",
			Handler:    _Blast_SetState_Handler,
		},
		{
			MethodName: "DeleteState",
			Handler:    _Blast_DeleteState_Handler,
		},
		{
			MethodName: "GetDocument",
			Handler:    _Blast_GetDocument_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Blast_Search_Handler,
		},
		{
			MethodName: "GetIndexConfig",
			Handler:    _Blast_GetIndexConfig_Handler,
		},
		{
			MethodName: "GetIndexStats",
			Handler:    _Blast_GetIndexStats_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchCluster",
			Handler:       _Blast_WatchCluster_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "WatchState",
			Handler:       _Blast_WatchState_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "IndexDocument",
			Handler:       _Blast_IndexDocument_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DeleteDocument",
			Handler:       _Blast_DeleteDocument_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "protobuf/blast.proto",
}
