// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/index.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event_Type int32

const (
	Event_Unknown    Event_Type = 0
	Event_Join       Event_Type = 1
	Event_Leave      Event_Type = 2
	Event_Set        Event_Type = 3
	Event_Delete     Event_Type = 4
	Event_BulkIndex  Event_Type = 5
	Event_BulkDelete Event_Type = 6
)

var Event_Type_name = map[int32]string{
	0: "Unknown",
	1: "Join",
	2: "Leave",
	3: "Set",
	4: "Delete",
	5: "BulkIndex",
	6: "BulkDelete",
}

var Event_Type_value = map[string]int32{
	"Unknown":    0,
	"Join":       1,
	"Leave":      2,
	"Set":        3,
	"Delete":     4,
	"BulkIndex":  5,
	"BulkDelete": 6,
}

func (x Event_Type) String() string {
	return proto.EnumName(Event_Type_name, int32(x))
}

func (Event_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{23, 0}
}

type LivenessCheckResponse struct {
	Alive                bool     `protobuf:"varint,1,opt,name=alive,proto3" json:"alive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LivenessCheckResponse) Reset()         { *m = LivenessCheckResponse{} }
func (m *LivenessCheckResponse) String() string { return proto.CompactTextString(m) }
func (*LivenessCheckResponse) ProtoMessage()    {}
func (*LivenessCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{0}
}

func (m *LivenessCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LivenessCheckResponse.Unmarshal(m, b)
}
func (m *LivenessCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LivenessCheckResponse.Marshal(b, m, deterministic)
}
func (m *LivenessCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LivenessCheckResponse.Merge(m, src)
}
func (m *LivenessCheckResponse) XXX_Size() int {
	return xxx_messageInfo_LivenessCheckResponse.Size(m)
}
func (m *LivenessCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LivenessCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LivenessCheckResponse proto.InternalMessageInfo

func (m *LivenessCheckResponse) GetAlive() bool {
	if m != nil {
		return m.Alive
	}
	return false
}

type ReadinessCheckResponse struct {
	Ready                bool     `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadinessCheckResponse) Reset()         { *m = ReadinessCheckResponse{} }
func (m *ReadinessCheckResponse) String() string { return proto.CompactTextString(m) }
func (*ReadinessCheckResponse) ProtoMessage()    {}
func (*ReadinessCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{1}
}

func (m *ReadinessCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadinessCheckResponse.Unmarshal(m, b)
}
func (m *ReadinessCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadinessCheckResponse.Marshal(b, m, deterministic)
}
func (m *ReadinessCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadinessCheckResponse.Merge(m, src)
}
func (m *ReadinessCheckResponse) XXX_Size() int {
	return xxx_messageInfo_ReadinessCheckResponse.Size(m)
}
func (m *ReadinessCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadinessCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadinessCheckResponse proto.InternalMessageInfo

func (m *ReadinessCheckResponse) GetReady() bool {
	if m != nil {
		return m.Ready
	}
	return false
}

type Metadata struct {
	GrpcAddress          string   `protobuf:"bytes,1,opt,name=grpc_address,json=grpcAddress,proto3" json:"grpc_address,omitempty"`
	HttpAddress          string   `protobuf:"bytes,2,opt,name=http_address,json=httpAddress,proto3" json:"http_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{2}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetGrpcAddress() string {
	if m != nil {
		return m.GrpcAddress
	}
	return ""
}

func (m *Metadata) GetHttpAddress() string {
	if m != nil {
		return m.HttpAddress
	}
	return ""
}

type Node struct {
	RaftAddress          string    `protobuf:"bytes,1,opt,name=raft_address,json=raftAddress,proto3" json:"raft_address,omitempty"`
	Metadata             *Metadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	State                string    `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{3}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetRaftAddress() string {
	if m != nil {
		return m.RaftAddress
	}
	return ""
}

func (m *Node) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Node) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type Cluster struct {
	Nodes                map[string]*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Leader               string           `protobuf:"bytes,2,opt,name=leader,proto3" json:"leader,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{4}
}

func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetNodes() map[string]*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Cluster) GetLeader() string {
	if m != nil {
		return m.Leader
	}
	return ""
}

type JoinRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Node                 *Node    `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{5}
}

func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (m *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(m, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

func (m *JoinRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *JoinRequest) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type LeaveRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaveRequest) Reset()         { *m = LeaveRequest{} }
func (m *LeaveRequest) String() string { return proto.CompactTextString(m) }
func (*LeaveRequest) ProtoMessage()    {}
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{6}
}

func (m *LeaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveRequest.Unmarshal(m, b)
}
func (m *LeaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveRequest.Marshal(b, m, deterministic)
}
func (m *LeaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveRequest.Merge(m, src)
}
func (m *LeaveRequest) XXX_Size() int {
	return xxx_messageInfo_LeaveRequest.Size(m)
}
func (m *LeaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveRequest proto.InternalMessageInfo

func (m *LeaveRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type NodeResponse struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeResponse) Reset()         { *m = NodeResponse{} }
func (m *NodeResponse) String() string { return proto.CompactTextString(m) }
func (*NodeResponse) ProtoMessage()    {}
func (*NodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{7}
}

func (m *NodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeResponse.Unmarshal(m, b)
}
func (m *NodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeResponse.Marshal(b, m, deterministic)
}
func (m *NodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeResponse.Merge(m, src)
}
func (m *NodeResponse) XXX_Size() int {
	return xxx_messageInfo_NodeResponse.Size(m)
}
func (m *NodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeResponse proto.InternalMessageInfo

func (m *NodeResponse) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type ClusterResponse struct {
	Cluster              *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterResponse) Reset()         { *m = ClusterResponse{} }
func (m *ClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterResponse) ProtoMessage()    {}
func (*ClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{8}
}

func (m *ClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterResponse.Unmarshal(m, b)
}
func (m *ClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterResponse.Marshal(b, m, deterministic)
}
func (m *ClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterResponse.Merge(m, src)
}
func (m *ClusterResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterResponse.Size(m)
}
func (m *ClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterResponse proto.InternalMessageInfo

func (m *ClusterResponse) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type Document struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields               []byte   `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{9}
}

func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (m *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(m, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Document) GetFields() []byte {
	if m != nil {
		return m.Fields
	}
	return nil
}

type GetRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{10}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetResponse struct {
	Fields               []byte   `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{11}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetFields() []byte {
	if m != nil {
		return m.Fields
	}
	return nil
}

type SetRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields               []byte   `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRequest) Reset()         { *m = SetRequest{} }
func (m *SetRequest) String() string { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()    {}
func (*SetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{12}
}

func (m *SetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRequest.Unmarshal(m, b)
}
func (m *SetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRequest.Marshal(b, m, deterministic)
}
func (m *SetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRequest.Merge(m, src)
}
func (m *SetRequest) XXX_Size() int {
	return xxx_messageInfo_SetRequest.Size(m)
}
func (m *SetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRequest proto.InternalMessageInfo

func (m *SetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SetRequest) GetFields() []byte {
	if m != nil {
		return m.Fields
	}
	return nil
}

type DeleteRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{13}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type BulkIndexRequest struct {
	Requests             []*SetRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BulkIndexRequest) Reset()         { *m = BulkIndexRequest{} }
func (m *BulkIndexRequest) String() string { return proto.CompactTextString(m) }
func (*BulkIndexRequest) ProtoMessage()    {}
func (*BulkIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{14}
}

func (m *BulkIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BulkIndexRequest.Unmarshal(m, b)
}
func (m *BulkIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BulkIndexRequest.Marshal(b, m, deterministic)
}
func (m *BulkIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BulkIndexRequest.Merge(m, src)
}
func (m *BulkIndexRequest) XXX_Size() int {
	return xxx_messageInfo_BulkIndexRequest.Size(m)
}
func (m *BulkIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BulkIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BulkIndexRequest proto.InternalMessageInfo

func (m *BulkIndexRequest) GetRequests() []*SetRequest {
	if m != nil {
		return m.Requests
	}
	return nil
}

type BulkIndexResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BulkIndexResponse) Reset()         { *m = BulkIndexResponse{} }
func (m *BulkIndexResponse) String() string { return proto.CompactTextString(m) }
func (*BulkIndexResponse) ProtoMessage()    {}
func (*BulkIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{15}
}

func (m *BulkIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BulkIndexResponse.Unmarshal(m, b)
}
func (m *BulkIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BulkIndexResponse.Marshal(b, m, deterministic)
}
func (m *BulkIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BulkIndexResponse.Merge(m, src)
}
func (m *BulkIndexResponse) XXX_Size() int {
	return xxx_messageInfo_BulkIndexResponse.Size(m)
}
func (m *BulkIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BulkIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BulkIndexResponse proto.InternalMessageInfo

func (m *BulkIndexResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type BulkDeleteRequest struct {
	Requests             []*DeleteRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BulkDeleteRequest) Reset()         { *m = BulkDeleteRequest{} }
func (m *BulkDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*BulkDeleteRequest) ProtoMessage()    {}
func (*BulkDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{16}
}

func (m *BulkDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BulkDeleteRequest.Unmarshal(m, b)
}
func (m *BulkDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BulkDeleteRequest.Marshal(b, m, deterministic)
}
func (m *BulkDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BulkDeleteRequest.Merge(m, src)
}
func (m *BulkDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_BulkDeleteRequest.Size(m)
}
func (m *BulkDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BulkDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BulkDeleteRequest proto.InternalMessageInfo

func (m *BulkDeleteRequest) GetRequests() []*DeleteRequest {
	if m != nil {
		return m.Requests
	}
	return nil
}

type BulkDeleteResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BulkDeleteResponse) Reset()         { *m = BulkDeleteResponse{} }
func (m *BulkDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*BulkDeleteResponse) ProtoMessage()    {}
func (*BulkDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{17}
}

func (m *BulkDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BulkDeleteResponse.Unmarshal(m, b)
}
func (m *BulkDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BulkDeleteResponse.Marshal(b, m, deterministic)
}
func (m *BulkDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BulkDeleteResponse.Merge(m, src)
}
func (m *BulkDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_BulkDeleteResponse.Size(m)
}
func (m *BulkDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BulkDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BulkDeleteResponse proto.InternalMessageInfo

func (m *BulkDeleteResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SetMetadataRequest struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata             *Metadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SetMetadataRequest) Reset()         { *m = SetMetadataRequest{} }
func (m *SetMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*SetMetadataRequest) ProtoMessage()    {}
func (*SetMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{18}
}

func (m *SetMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetMetadataRequest.Unmarshal(m, b)
}
func (m *SetMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetMetadataRequest.Marshal(b, m, deterministic)
}
func (m *SetMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetMetadataRequest.Merge(m, src)
}
func (m *SetMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_SetMetadataRequest.Size(m)
}
func (m *SetMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetMetadataRequest proto.InternalMessageInfo

func (m *SetMetadataRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SetMetadataRequest) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type DeleteMetadataRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMetadataRequest) Reset()         { *m = DeleteMetadataRequest{} }
func (m *DeleteMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteMetadataRequest) ProtoMessage()    {}
func (*DeleteMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{19}
}

func (m *DeleteMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMetadataRequest.Unmarshal(m, b)
}
func (m *DeleteMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMetadataRequest.Marshal(b, m, deterministic)
}
func (m *DeleteMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMetadataRequest.Merge(m, src)
}
func (m *DeleteMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteMetadataRequest.Size(m)
}
func (m *DeleteMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMetadataRequest proto.InternalMessageInfo

func (m *DeleteMetadataRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SearchRequest struct {
	SearchRequest        []byte   `protobuf:"bytes,1,opt,name=search_request,json=searchRequest,proto3" json:"search_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{20}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetSearchRequest() []byte {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

type SearchResponse struct {
	SearchResult         []byte   `protobuf:"bytes,1,opt,name=search_result,json=searchResult,proto3" json:"search_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{21}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetSearchResult() []byte {
	if m != nil {
		return m.SearchResult
	}
	return nil
}

type MappingResponse struct {
	Mapping              []byte   `protobuf:"bytes,1,opt,name=mapping,proto3" json:"mapping,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MappingResponse) Reset()         { *m = MappingResponse{} }
func (m *MappingResponse) String() string { return proto.CompactTextString(m) }
func (*MappingResponse) ProtoMessage()    {}
func (*MappingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{22}
}

func (m *MappingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MappingResponse.Unmarshal(m, b)
}
func (m *MappingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MappingResponse.Marshal(b, m, deterministic)
}
func (m *MappingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MappingResponse.Merge(m, src)
}
func (m *MappingResponse) XXX_Size() int {
	return xxx_messageInfo_MappingResponse.Size(m)
}
func (m *MappingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MappingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MappingResponse proto.InternalMessageInfo

func (m *MappingResponse) GetMapping() []byte {
	if m != nil {
		return m.Mapping
	}
	return nil
}

type Event struct {
	Type                 Event_Type `protobuf:"varint,1,opt,name=type,proto3,enum=index.Event_Type" json:"type,omitempty"`
	Data                 *any.Any   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{23}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetType() Event_Type {
	if m != nil {
		return m.Type
	}
	return Event_Unknown
}

func (m *Event) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type WatchResponse struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchResponse) Reset()         { *m = WatchResponse{} }
func (m *WatchResponse) String() string { return proto.CompactTextString(m) }
func (*WatchResponse) ProtoMessage()    {}
func (*WatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{24}
}

func (m *WatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchResponse.Unmarshal(m, b)
}
func (m *WatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchResponse.Marshal(b, m, deterministic)
}
func (m *WatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchResponse.Merge(m, src)
}
func (m *WatchResponse) XXX_Size() int {
	return xxx_messageInfo_WatchResponse.Size(m)
}
func (m *WatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchResponse proto.InternalMessageInfo

func (m *WatchResponse) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type MetricsResponse struct {
	Metrics              []byte   `protobuf:"bytes,1,opt,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsResponse) Reset()         { *m = MetricsResponse{} }
func (m *MetricsResponse) String() string { return proto.CompactTextString(m) }
func (*MetricsResponse) ProtoMessage()    {}
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_28043ab4bd817113, []int{25}
}

func (m *MetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsResponse.Unmarshal(m, b)
}
func (m *MetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsResponse.Marshal(b, m, deterministic)
}
func (m *MetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsResponse.Merge(m, src)
}
func (m *MetricsResponse) XXX_Size() int {
	return xxx_messageInfo_MetricsResponse.Size(m)
}
func (m *MetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsResponse proto.InternalMessageInfo

func (m *MetricsResponse) GetMetrics() []byte {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func init() {
	proto.RegisterEnum("index.Event_Type", Event_Type_name, Event_Type_value)
	proto.RegisterType((*LivenessCheckResponse)(nil), "index.LivenessCheckResponse")
	proto.RegisterType((*ReadinessCheckResponse)(nil), "index.ReadinessCheckResponse")
	proto.RegisterType((*Metadata)(nil), "index.Metadata")
	proto.RegisterType((*Node)(nil), "index.Node")
	proto.RegisterType((*Cluster)(nil), "index.Cluster")
	proto.RegisterMapType((map[string]*Node)(nil), "index.Cluster.NodesEntry")
	proto.RegisterType((*JoinRequest)(nil), "index.JoinRequest")
	proto.RegisterType((*LeaveRequest)(nil), "index.LeaveRequest")
	proto.RegisterType((*NodeResponse)(nil), "index.NodeResponse")
	proto.RegisterType((*ClusterResponse)(nil), "index.ClusterResponse")
	proto.RegisterType((*Document)(nil), "index.Document")
	proto.RegisterType((*GetRequest)(nil), "index.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "index.GetResponse")
	proto.RegisterType((*SetRequest)(nil), "index.SetRequest")
	proto.RegisterType((*DeleteRequest)(nil), "index.DeleteRequest")
	proto.RegisterType((*BulkIndexRequest)(nil), "index.BulkIndexRequest")
	proto.RegisterType((*BulkIndexResponse)(nil), "index.BulkIndexResponse")
	proto.RegisterType((*BulkDeleteRequest)(nil), "index.BulkDeleteRequest")
	proto.RegisterType((*BulkDeleteResponse)(nil), "index.BulkDeleteResponse")
	proto.RegisterType((*SetMetadataRequest)(nil), "index.SetMetadataRequest")
	proto.RegisterType((*DeleteMetadataRequest)(nil), "index.DeleteMetadataRequest")
	proto.RegisterType((*SearchRequest)(nil), "index.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "index.SearchResponse")
	proto.RegisterType((*MappingResponse)(nil), "index.MappingResponse")
	proto.RegisterType((*Event)(nil), "index.Event")
	proto.RegisterType((*WatchResponse)(nil), "index.WatchResponse")
	proto.RegisterType((*MetricsResponse)(nil), "index.MetricsResponse")
}

func init() { proto.RegisterFile("protobuf/index.proto", fileDescriptor_28043ab4bd817113) }

var fileDescriptor_28043ab4bd817113 = []byte{
	// 1166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xed, 0x6e, 0x1b, 0x45,
	0x17, 0xae, 0xbf, 0xdd, 0xe3, 0x8f, 0xb8, 0xa7, 0x76, 0xea, 0x6c, 0xd3, 0x36, 0x9d, 0x57, 0xd1,
	0x1b, 0x5c, 0x62, 0x97, 0x14, 0x10, 0x04, 0x81, 0x94, 0xb6, 0x56, 0x05, 0xa4, 0x51, 0xd9, 0x50,
	0x81, 0x00, 0x29, 0x9a, 0x78, 0x27, 0xce, 0x2a, 0xeb, 0xdd, 0x65, 0x77, 0xec, 0x62, 0xa1, 0xfe,
	0xe1, 0x16, 0xf8, 0xc5, 0x85, 0xc0, 0x8d, 0x70, 0x0b, 0x5c, 0x08, 0x9a, 0x8f, 0x5d, 0xef, 0xda,
	0xde, 0x46, 0xfc, 0xf2, 0xce, 0x9c, 0x67, 0x9e, 0xf3, 0xcc, 0x99, 0x99, 0xe7, 0xc8, 0xd0, 0xf6,
	0x03, 0x8f, 0x7b, 0xe7, 0xd3, 0x8b, 0x81, 0xed, 0x5a, 0xec, 0x97, 0xbe, 0x1c, 0x62, 0x49, 0x0e,
	0x8c, 0xad, 0xb1, 0xe7, 0x8d, 0x1d, 0x36, 0x88, 0x31, 0xd4, 0x9d, 0x2b, 0x84, 0x71, 0x77, 0x39,
	0xc4, 0x26, 0x3e, 0x8f, 0x82, 0xdb, 0x3a, 0x48, 0x7d, 0x7b, 0x40, 0x5d, 0xd7, 0xe3, 0x94, 0xdb,
	0x9e, 0x1b, 0xea, 0xe8, 0xfb, 0xf2, 0x67, 0xb4, 0x3f, 0x66, 0xee, 0x7e, 0xf8, 0x86, 0x8e, 0xc7,
	0x2c, 0x18, 0x78, 0xbe, 0x44, 0xac, 0xa2, 0xc9, 0x3e, 0x74, 0x8e, 0xed, 0x19, 0x73, 0x59, 0x18,
	0x3e, 0xbb, 0x64, 0xa3, 0x2b, 0x93, 0x85, 0xbe, 0xe7, 0x86, 0x0c, 0xdb, 0x50, 0xa2, 0x8e, 0x3d,
	0x63, 0xdd, 0xdc, 0x4e, 0x6e, 0xaf, 0x6a, 0xaa, 0x01, 0xe9, 0xc3, 0xa6, 0xc9, 0xa8, 0x65, 0xaf,
	0xc5, 0x07, 0x8c, 0x5a, 0xf3, 0x08, 0x2f, 0x07, 0xe4, 0x15, 0x54, 0x5f, 0x32, 0x4e, 0x2d, 0xca,
	0x29, 0x3e, 0x84, 0xfa, 0x38, 0xf0, 0x47, 0x67, 0xd4, 0xb2, 0x02, 0x16, 0x86, 0x12, 0x78, 0xd3,
	0xac, 0x89, 0xb9, 0x23, 0x35, 0x25, 0x20, 0x97, 0x9c, 0xfb, 0x31, 0x24, 0xaf, 0x20, 0x62, 0x4e,
	0x43, 0x88, 0x03, 0xc5, 0x13, 0xcf, 0x62, 0x02, 0x1a, 0xd0, 0x0b, 0xbe, 0xcc, 0x26, 0xe6, 0x22,
	0xb6, 0x47, 0x50, 0x9d, 0xe8, 0xe4, 0x92, 0xa9, 0x76, 0xb0, 0xd1, 0x57, 0xc7, 0x10, 0x69, 0x32,
	0x63, 0x80, 0xd0, 0x1f, 0x72, 0xca, 0x59, 0xb7, 0x20, 0x89, 0xd4, 0x80, 0xfc, 0x91, 0x83, 0xca,
	0x33, 0x67, 0x1a, 0x72, 0x16, 0xe0, 0x00, 0x4a, 0xae, 0x67, 0x31, 0x91, 0xaa, 0xb0, 0x57, 0x3b,
	0xd8, 0xd2, 0x5c, 0x3a, 0xdc, 0x17, 0xaa, 0xc2, 0xa1, 0xcb, 0x83, 0xb9, 0xa9, 0x70, 0xb8, 0x09,
	0x65, 0x87, 0x51, 0x8b, 0x05, 0x7a, 0x1f, 0x7a, 0x64, 0x0c, 0x01, 0x16, 0x60, 0x6c, 0x41, 0xe1,
	0x8a, 0xcd, 0xb5, 0x7e, 0xf1, 0x89, 0x0f, 0xa1, 0x34, 0xa3, 0xce, 0x94, 0x69, 0xd1, 0x35, 0x9d,
	0x48, 0xac, 0x31, 0x55, 0xe4, 0x30, 0xff, 0x49, 0x8e, 0x7c, 0x01, 0xb5, 0xaf, 0x3c, 0xdb, 0x35,
	0xd9, 0xcf, 0x53, 0x16, 0x72, 0x6c, 0x42, 0xde, 0xb6, 0x34, 0x4d, 0xde, 0xb6, 0xf0, 0x01, 0x14,
	0x85, 0x8c, 0x75, 0x24, 0x32, 0x40, 0xee, 0x43, 0xfd, 0x98, 0xd1, 0x19, 0xcb, 0x20, 0x20, 0x03,
	0xa8, 0x4b, 0x74, 0x74, 0xc2, 0x11, 0x61, 0x2e, 0x8b, 0xf0, 0x33, 0xd8, 0xd0, 0xc5, 0x88, 0xd7,
	0xec, 0x41, 0x65, 0xa4, 0xa6, 0xf4, 0xb2, 0x66, 0xba, 0x6a, 0x66, 0x14, 0x26, 0x07, 0x50, 0x7d,
	0xee, 0x8d, 0xa6, 0x13, 0xe6, 0xae, 0x6e, 0x65, 0x13, 0xca, 0x17, 0x36, 0x73, 0x2c, 0x75, 0x21,
	0xea, 0xa6, 0x1e, 0x91, 0x6d, 0x80, 0x17, 0x8c, 0x67, 0xe9, 0xdf, 0x85, 0x9a, 0x8c, 0x6a, 0x29,
	0x0b, 0x92, 0x5c, 0x8a, 0xe4, 0x43, 0x80, 0xd3, 0x4c, 0x92, 0xcc, 0xd4, 0x0f, 0xa0, 0xf1, 0x9c,
	0x39, 0x8c, 0x67, 0x56, 0xef, 0x08, 0x5a, 0x4f, 0xa7, 0xce, 0xd5, 0x97, 0x62, 0xb7, 0x11, 0x66,
	0x1f, 0xaa, 0x81, 0xfa, 0x8c, 0x2e, 0xd1, 0x2d, 0x5d, 0x8e, 0x85, 0x02, 0x33, 0x86, 0x90, 0xf7,
	0xe0, 0x56, 0x82, 0x62, 0xf1, 0xce, 0x46, 0xde, 0xd4, 0xe5, 0x32, 0x55, 0xc9, 0x54, 0x03, 0x32,
	0x54, 0xd0, 0xb4, 0xa4, 0xc7, 0x2b, 0xe9, 0xda, 0x3a, 0x5d, 0x0a, 0x97, 0xc8, 0xd8, 0x03, 0x4c,
	0xd2, 0xbc, 0x33, 0xe5, 0x37, 0x80, 0xa7, 0x8c, 0xc7, 0x2f, 0x29, 0xa3, 0x7e, 0xff, 0xe5, 0x0d,
	0x92, 0xff, 0x43, 0x47, 0xa5, 0xbe, 0x86, 0x95, 0x7c, 0x0c, 0x8d, 0x53, 0x46, 0x83, 0xd1, 0x65,
	0x04, 0xd8, 0x85, 0x66, 0x28, 0x27, 0xce, 0xf4, 0x5e, 0xf4, 0x21, 0x37, 0xc2, 0x24, 0x8c, 0x7c,
	0x04, 0xcd, 0x68, 0x9d, 0xde, 0xdb, 0xff, 0xa0, 0x11, 0x2f, 0x0c, 0xa7, 0x4e, 0xb4, 0xae, 0x1e,
	0xad, 0x13, 0x73, 0xe4, 0x11, 0x6c, 0xbc, 0xa4, 0xbe, 0x6f, 0xbb, 0xe3, 0x78, 0x5d, 0x17, 0x2a,
	0x13, 0x35, 0xa5, 0x57, 0x44, 0x43, 0xf2, 0x57, 0x0e, 0x4a, 0xc3, 0x99, 0xb8, 0xc6, 0xbb, 0x50,
	0xe4, 0x73, 0x5f, 0x3d, 0x98, 0x66, 0x7c, 0xd4, 0x32, 0xd6, 0xff, 0x76, 0xee, 0x33, 0x53, 0x86,
	0x71, 0x0f, 0x8a, 0x89, 0xf2, 0xb4, 0xfb, 0xca, 0xdd, 0xfb, 0x91, 0xf5, 0xf7, 0x8f, 0xdc, 0xb9,
	0x29, 0x11, 0xe4, 0x27, 0x28, 0x8a, 0x75, 0x58, 0x83, 0xca, 0x6b, 0xf7, 0xca, 0xf5, 0xde, 0xb8,
	0xad, 0x1b, 0x58, 0x85, 0xa2, 0xb0, 0x81, 0x56, 0x0e, 0x6f, 0x42, 0x49, 0x3e, 0xe8, 0x56, 0x1e,
	0x2b, 0x50, 0x38, 0x65, 0xbc, 0x55, 0x40, 0x80, 0xb2, 0x2a, 0x69, 0xab, 0x88, 0x0d, 0xb8, 0x19,
	0xdf, 0xa7, 0x56, 0x09, 0x9b, 0x00, 0x8b, 0xc3, 0x6e, 0x95, 0xc9, 0x13, 0x68, 0x7c, 0x47, 0x79,
	0xa2, 0x36, 0x04, 0x4a, 0x4c, 0x88, 0xd5, 0x4f, 0xb7, 0x9e, 0xdc, 0x80, 0xa9, 0x42, 0xb2, 0x34,
	0x8c, 0x07, 0xf6, 0x28, 0x4c, 0x95, 0x46, 0x4d, 0xc5, 0xa5, 0x51, 0xc3, 0x83, 0x3f, 0x01, 0x4a,
	0x32, 0x3b, 0x52, 0x68, 0xa4, 0xda, 0x0e, 0x6e, 0xae, 0x6c, 0x7b, 0x28, 0x3a, 0x9e, 0xb1, 0xad,
	0x93, 0xae, 0x6d, 0x52, 0xc4, 0xf8, 0xed, 0xef, 0x7f, 0x7e, 0xcf, 0xb7, 0x11, 0x07, 0xb3, 0x0f,
	0x06, 0x8e, 0x86, 0x9c, 0x8d, 0x24, 0xa3, 0x05, 0xcd, 0x74, 0xab, 0xca, 0xcc, 0x71, 0x4f, 0xe7,
	0x58, 0xdf, 0xd9, 0xc8, 0x5d, 0x99, 0xa4, 0x83, 0xb7, 0x45, 0x92, 0x20, 0xc2, 0xe8, 0x2c, 0x43,
	0xdd, 0x8e, 0xb2, 0xb8, 0x6f, 0x27, 0x6d, 0x32, 0x62, 0x6c, 0x49, 0x46, 0xc0, 0xaa, 0x60, 0x14,
	0xd6, 0x89, 0xa6, 0x3a, 0x44, 0x44, 0x0d, 0x4f, 0x18, 0xbb, 0x91, 0x41, 0x4d, 0xee, 0x4b, 0x96,
	0xae, 0xd1, 0x12, 0x2c, 0xda, 0x46, 0x07, 0xbf, 0xda, 0xd6, 0xdb, 0x43, 0x69, 0xc7, 0x78, 0xb2,
	0x68, 0x5d, 0x59, 0xea, 0x36, 0x97, 0xdc, 0x38, 0x12, 0x78, 0x5b, 0x52, 0x37, 0xb0, 0x96, 0xa0,
	0xc6, 0x13, 0x7d, 0xbd, 0x30, 0xda, 0x53, 0xb2, 0x7b, 0x64, 0xaa, 0xec, 0x4a, 0x2a, 0xec, 0xad,
	0xa8, 0xc4, 0x57, 0x50, 0x3d, 0x75, 0xa9, 0x1f, 0x5e, 0x7a, 0xfc, 0x1d, 0x02, 0xd7, 0xb3, 0xb6,
	0x25, 0x6b, 0x13, 0xeb, 0x82, 0x35, 0x8c, 0x58, 0xbe, 0x4f, 0x5c, 0x70, 0xbc, 0xa3, 0x55, 0x2e,
	0xbb, 0xb0, 0xd1, 0x5d, 0x0d, 0xe8, 0x6d, 0x6b, 0xad, 0x46, 0x43, 0xb0, 0x5a, 0xba, 0x1b, 0x85,
	0x87, 0xb9, 0x1e, 0xfe, 0x98, 0x7c, 0x2b, 0x98, 0x64, 0x48, 0x59, 0xa9, 0xb1, 0xb5, 0x26, 0x92,
	0x26, 0xef, 0xad, 0x92, 0x7f, 0x0d, 0x85, 0x17, 0x8c, 0x63, 0x64, 0x10, 0x8b, 0x96, 0x66, 0x60,
	0x72, 0x4a, 0xf3, 0xdc, 0x93, 0x3c, 0x77, 0xb0, 0x93, 0xe2, 0x11, 0x25, 0xfd, 0xbc, 0xd7, 0x7b,
	0x8b, 0xa6, 0x7c, 0xf9, 0xb8, 0xda, 0x58, 0x32, 0x6b, 0xb9, 0x23, 0x09, 0x0d, 0x63, 0x3d, 0xa1,
	0x10, 0xf8, 0x3a, 0x32, 0x11, 0x5c, 0xdb, 0x40, 0x32, 0x99, 0xb5, 0xd4, 0x5e, 0x86, 0xd4, 0x63,
	0x28, 0x2b, 0x37, 0x8e, 0x69, 0x53, 0xa6, 0x6e, 0x74, 0x96, 0x66, 0x75, 0x01, 0x3a, 0x92, 0x75,
	0x83, 0x80, 0x3c, 0x7b, 0x19, 0x13, 0x22, 0x4f, 0xa0, 0xa2, 0x4d, 0xfa, 0xda, 0xeb, 0xbe, 0x64,
	0xe6, 0xe9, 0xeb, 0xae, 0x7d, 0x1c, 0x3f, 0x85, 0x92, 0xb4, 0xc3, 0x4c, 0xb6, 0x48, 0x74, 0xca,
	0x34, 0xc9, 0x8d, 0xc7, 0x39, 0x29, 0x45, 0x59, 0xde, 0xf5, 0x52, 0xd2, 0xe6, 0xb9, 0x24, 0x45,
	0x05, 0x9f, 0x92, 0x1f, 0x76, 0xc6, 0x36, 0xbf, 0x9c, 0x9e, 0xf7, 0x47, 0xde, 0x64, 0x30, 0xf1,
	0xc2, 0xe9, 0x15, 0x1d, 0x9c, 0x3b, 0x34, 0xe4, 0xf1, 0x1f, 0x84, 0xf3, 0xb2, 0xfc, 0x7a, 0xf2,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xd3, 0x19, 0x60, 0x72, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IndexClient is the client API for Index service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IndexClient interface {
	LivenessCheck(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LivenessCheckResponse, error)
	ReadinessCheck(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReadinessCheckResponse, error)
	Node(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NodeResponse, error)
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Cluster(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ClusterResponse, error)
	Leave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Snapshot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	BulkIndex(ctx context.Context, in *BulkIndexRequest, opts ...grpc.CallOption) (*BulkIndexResponse, error)
	BulkDelete(ctx context.Context, in *BulkDeleteRequest, opts ...grpc.CallOption) (*BulkDeleteResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	Mapping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MappingResponse, error)
	Watch(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Index_WatchClient, error)
	Metrics(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MetricsResponse, error)
}

type indexClient struct {
	cc *grpc.ClientConn
}

func NewIndexClient(cc *grpc.ClientConn) IndexClient {
	return &indexClient{cc}
}

func (c *indexClient) LivenessCheck(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LivenessCheckResponse, error) {
	out := new(LivenessCheckResponse)
	err := c.cc.Invoke(ctx, "/index.Index/LivenessCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) ReadinessCheck(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReadinessCheckResponse, error) {
	out := new(ReadinessCheckResponse)
	err := c.cc.Invoke(ctx, "/index.Index/ReadinessCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Node(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NodeResponse, error) {
	out := new(NodeResponse)
	err := c.cc.Invoke(ctx, "/index.Index/Node", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Cluster(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ClusterResponse, error) {
	out := new(ClusterResponse)
	err := c.cc.Invoke(ctx, "/index.Index/Cluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Leave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/Leave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Snapshot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/Snapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) BulkIndex(ctx context.Context, in *BulkIndexRequest, opts ...grpc.CallOption) (*BulkIndexResponse, error) {
	out := new(BulkIndexResponse)
	err := c.cc.Invoke(ctx, "/index.Index/BulkIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) BulkDelete(ctx context.Context, in *BulkDeleteRequest, opts ...grpc.CallOption) (*BulkDeleteResponse, error) {
	out := new(BulkDeleteResponse)
	err := c.cc.Invoke(ctx, "/index.Index/BulkDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/index.Index/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/index.Index/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Mapping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MappingResponse, error) {
	out := new(MappingResponse)
	err := c.cc.Invoke(ctx, "/index.Index/Mapping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Watch(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Index_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Index_serviceDesc.Streams[0], "/index.Index/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &indexWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Index_WatchClient interface {
	Recv() (*WatchResponse, error)
	grpc.ClientStream
}

type indexWatchClient struct {
	grpc.ClientStream
}

func (x *indexWatchClient) Recv() (*WatchResponse, error) {
	m := new(WatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *indexClient) Metrics(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/index.Index/Metrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IndexServer is the server API for Index service.
type IndexServer interface {
	LivenessCheck(context.Context, *empty.Empty) (*LivenessCheckResponse, error)
	ReadinessCheck(context.Context, *empty.Empty) (*ReadinessCheckResponse, error)
	Node(context.Context, *empty.Empty) (*NodeResponse, error)
	Join(context.Context, *JoinRequest) (*empty.Empty, error)
	Cluster(context.Context, *empty.Empty) (*ClusterResponse, error)
	Leave(context.Context, *LeaveRequest) (*empty.Empty, error)
	Snapshot(context.Context, *empty.Empty) (*empty.Empty, error)
	BulkIndex(context.Context, *BulkIndexRequest) (*BulkIndexResponse, error)
	BulkDelete(context.Context, *BulkDeleteRequest) (*BulkDeleteResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Set(context.Context, *SetRequest) (*empty.Empty, error)
	Delete(context.Context, *DeleteRequest) (*empty.Empty, error)
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	Mapping(context.Context, *empty.Empty) (*MappingResponse, error)
	Watch(*empty.Empty, Index_WatchServer) error
	Metrics(context.Context, *empty.Empty) (*MetricsResponse, error)
}

// UnimplementedIndexServer can be embedded to have forward compatible implementations.
type UnimplementedIndexServer struct {
}

func (*UnimplementedIndexServer) LivenessCheck(ctx context.Context, req *empty.Empty) (*LivenessCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LivenessCheck not implemented")
}
func (*UnimplementedIndexServer) ReadinessCheck(ctx context.Context, req *empty.Empty) (*ReadinessCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadinessCheck not implemented")
}
func (*UnimplementedIndexServer) Node(ctx context.Context, req *empty.Empty) (*NodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Node not implemented")
}
func (*UnimplementedIndexServer) Join(ctx context.Context, req *JoinRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedIndexServer) Cluster(ctx context.Context, req *empty.Empty) (*ClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cluster not implemented")
}
func (*UnimplementedIndexServer) Leave(ctx context.Context, req *LeaveRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Leave not implemented")
}
func (*UnimplementedIndexServer) Snapshot(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Snapshot not implemented")
}
func (*UnimplementedIndexServer) BulkIndex(ctx context.Context, req *BulkIndexRequest) (*BulkIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BulkIndex not implemented")
}
func (*UnimplementedIndexServer) BulkDelete(ctx context.Context, req *BulkDeleteRequest) (*BulkDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BulkDelete not implemented")
}
func (*UnimplementedIndexServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedIndexServer) Set(ctx context.Context, req *SetRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedIndexServer) Delete(ctx context.Context, req *DeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedIndexServer) Search(ctx context.Context, req *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedIndexServer) Mapping(ctx context.Context, req *empty.Empty) (*MappingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mapping not implemented")
}
func (*UnimplementedIndexServer) Watch(req *empty.Empty, srv Index_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}
func (*UnimplementedIndexServer) Metrics(ctx context.Context, req *empty.Empty) (*MetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Metrics not implemented")
}

func RegisterIndexServer(s *grpc.Server, srv IndexServer) {
	s.RegisterService(&_Index_serviceDesc, srv)
}

func _Index_LivenessCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).LivenessCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/LivenessCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).LivenessCheck(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_ReadinessCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).ReadinessCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/ReadinessCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).ReadinessCheck(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Node_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Node(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Node",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Node(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Cluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Cluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Cluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Cluster(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Leave(ctx, req.(*LeaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Snapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Snapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Snapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Snapshot(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_BulkIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).BulkIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/BulkIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).BulkIndex(ctx, req.(*BulkIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_BulkDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).BulkDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/BulkDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).BulkDelete(ctx, req.(*BulkDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Mapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Mapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Mapping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Mapping(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(IndexServer).Watch(m, &indexWatchServer{stream})
}

type Index_WatchServer interface {
	Send(*WatchResponse) error
	grpc.ServerStream
}

type indexWatchServer struct {
	grpc.ServerStream
}

func (x *indexWatchServer) Send(m *WatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Index_Metrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Metrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Metrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Metrics(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Index_serviceDesc = grpc.ServiceDesc{
	ServiceName: "index.Index",
	HandlerType: (*IndexServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LivenessCheck",
			Handler:    _Index_LivenessCheck_Handler,
		},
		{
			MethodName: "ReadinessCheck",
			Handler:    _Index_ReadinessCheck_Handler,
		},
		{
			MethodName: "Node",
			Handler:    _Index_Node_Handler,
		},
		{
			MethodName: "Join",
			Handler:    _Index_Join_Handler,
		},
		{
			MethodName: "Cluster",
			Handler:    _Index_Cluster_Handler,
		},
		{
			MethodName: "Leave",
			Handler:    _Index_Leave_Handler,
		},
		{
			MethodName: "Snapshot",
			Handler:    _Index_Snapshot_Handler,
		},
		{
			MethodName: "BulkIndex",
			Handler:    _Index_BulkIndex_Handler,
		},
		{
			MethodName: "BulkDelete",
			Handler:    _Index_BulkDelete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Index_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _Index_Set_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Index_Delete_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Index_Search_Handler,
		},
		{
			MethodName: "Mapping",
			Handler:    _Index_Mapping_Handler,
		},
		{
			MethodName: "Metrics",
			Handler:    _Index_Metrics_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _Index_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf/index.proto",
}
