// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/index/index.proto

package index

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeHealthCheckRequest_Probe int32

const (
	NodeHealthCheckRequest_HEALTHINESS NodeHealthCheckRequest_Probe = 0
	NodeHealthCheckRequest_LIVENESS    NodeHealthCheckRequest_Probe = 1
	NodeHealthCheckRequest_READINESS   NodeHealthCheckRequest_Probe = 2
)

var NodeHealthCheckRequest_Probe_name = map[int32]string{
	0: "HEALTHINESS",
	1: "LIVENESS",
	2: "READINESS",
}

var NodeHealthCheckRequest_Probe_value = map[string]int32{
	"HEALTHINESS": 0,
	"LIVENESS":    1,
	"READINESS":   2,
}

func (x NodeHealthCheckRequest_Probe) String() string {
	return proto.EnumName(NodeHealthCheckRequest_Probe_name, int32(x))
}

func (NodeHealthCheckRequest_Probe) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{0, 0}
}

type NodeHealthCheckResponse_State int32

const (
	NodeHealthCheckResponse_HEALTHY   NodeHealthCheckResponse_State = 0
	NodeHealthCheckResponse_UNHEALTHY NodeHealthCheckResponse_State = 1
	NodeHealthCheckResponse_ALIVE     NodeHealthCheckResponse_State = 2
	NodeHealthCheckResponse_DEAD      NodeHealthCheckResponse_State = 3
	NodeHealthCheckResponse_READY     NodeHealthCheckResponse_State = 4
	NodeHealthCheckResponse_NOT_READY NodeHealthCheckResponse_State = 5
)

var NodeHealthCheckResponse_State_name = map[int32]string{
	0: "HEALTHY",
	1: "UNHEALTHY",
	2: "ALIVE",
	3: "DEAD",
	4: "READY",
	5: "NOT_READY",
}

var NodeHealthCheckResponse_State_value = map[string]int32{
	"HEALTHY":   0,
	"UNHEALTHY": 1,
	"ALIVE":     2,
	"DEAD":      3,
	"READY":     4,
	"NOT_READY": 5,
}

func (x NodeHealthCheckResponse_State) String() string {
	return proto.EnumName(NodeHealthCheckResponse_State_name, int32(x))
}

func (NodeHealthCheckResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{1, 0}
}

type Node_State int32

const (
	Node_UNKNOWN   Node_State = 0
	Node_FOLLOWER  Node_State = 1
	Node_CANDIDATE Node_State = 2
	Node_LEADER    Node_State = 3
	Node_SHUTDOWN  Node_State = 4
)

var Node_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "FOLLOWER",
	2: "CANDIDATE",
	3: "LEADER",
	4: "SHUTDOWN",
}

var Node_State_value = map[string]int32{
	"UNKNOWN":   0,
	"FOLLOWER":  1,
	"CANDIDATE": 2,
	"LEADER":    3,
	"SHUTDOWN":  4,
}

func (x Node_State) String() string {
	return proto.EnumName(Node_State_name, int32(x))
}

func (Node_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{3, 0}
}

type ClusterWatchResponse_Event int32

const (
	ClusterWatchResponse_UNKNOWN ClusterWatchResponse_Event = 0
	ClusterWatchResponse_JOIN    ClusterWatchResponse_Event = 1
	ClusterWatchResponse_LEAVE   ClusterWatchResponse_Event = 2
	ClusterWatchResponse_UPDATE  ClusterWatchResponse_Event = 3
)

var ClusterWatchResponse_Event_name = map[int32]string{
	0: "UNKNOWN",
	1: "JOIN",
	2: "LEAVE",
	3: "UPDATE",
}

var ClusterWatchResponse_Event_value = map[string]int32{
	"UNKNOWN": 0,
	"JOIN":    1,
	"LEAVE":   2,
	"UPDATE":  3,
}

func (x ClusterWatchResponse_Event) String() string {
	return proto.EnumName(ClusterWatchResponse_Event_name, int32(x))
}

func (ClusterWatchResponse_Event) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{9, 0}
}

type NodeHealthCheckRequest struct {
	Probe                NodeHealthCheckRequest_Probe `protobuf:"varint,1,opt,name=probe,proto3,enum=index.NodeHealthCheckRequest_Probe" json:"probe,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *NodeHealthCheckRequest) Reset()         { *m = NodeHealthCheckRequest{} }
func (m *NodeHealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*NodeHealthCheckRequest) ProtoMessage()    {}
func (*NodeHealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{0}
}

func (m *NodeHealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeHealthCheckRequest.Unmarshal(m, b)
}
func (m *NodeHealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeHealthCheckRequest.Marshal(b, m, deterministic)
}
func (m *NodeHealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeHealthCheckRequest.Merge(m, src)
}
func (m *NodeHealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_NodeHealthCheckRequest.Size(m)
}
func (m *NodeHealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeHealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeHealthCheckRequest proto.InternalMessageInfo

func (m *NodeHealthCheckRequest) GetProbe() NodeHealthCheckRequest_Probe {
	if m != nil {
		return m.Probe
	}
	return NodeHealthCheckRequest_HEALTHINESS
}

type NodeHealthCheckResponse struct {
	State                NodeHealthCheckResponse_State `protobuf:"varint,1,opt,name=state,proto3,enum=index.NodeHealthCheckResponse_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *NodeHealthCheckResponse) Reset()         { *m = NodeHealthCheckResponse{} }
func (m *NodeHealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*NodeHealthCheckResponse) ProtoMessage()    {}
func (*NodeHealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{1}
}

func (m *NodeHealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeHealthCheckResponse.Unmarshal(m, b)
}
func (m *NodeHealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeHealthCheckResponse.Marshal(b, m, deterministic)
}
func (m *NodeHealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeHealthCheckResponse.Merge(m, src)
}
func (m *NodeHealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_NodeHealthCheckResponse.Size(m)
}
func (m *NodeHealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeHealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeHealthCheckResponse proto.InternalMessageInfo

func (m *NodeHealthCheckResponse) GetState() NodeHealthCheckResponse_State {
	if m != nil {
		return m.State
	}
	return NodeHealthCheckResponse_HEALTHY
}

type Metadata struct {
	GrpcAddress          string   `protobuf:"bytes,1,opt,name=grpc_address,json=grpcAddress,proto3" json:"grpc_address,omitempty"`
	HttpAddress          string   `protobuf:"bytes,2,opt,name=http_address,json=httpAddress,proto3" json:"http_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{2}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetGrpcAddress() string {
	if m != nil {
		return m.GrpcAddress
	}
	return ""
}

func (m *Metadata) GetHttpAddress() string {
	if m != nil {
		return m.HttpAddress
	}
	return ""
}

type Node struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BindAddress          string     `protobuf:"bytes,2,opt,name=bind_address,json=bindAddress,proto3" json:"bind_address,omitempty"`
	State                Node_State `protobuf:"varint,3,opt,name=state,proto3,enum=index.Node_State" json:"state,omitempty"`
	Metadata             *Metadata  `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{3}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetBindAddress() string {
	if m != nil {
		return m.BindAddress
	}
	return ""
}

func (m *Node) GetState() Node_State {
	if m != nil {
		return m.State
	}
	return Node_UNKNOWN
}

func (m *Node) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Cluster struct {
	Nodes                map[string]*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{4}
}

func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetNodes() map[string]*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type NodeInfoResponse struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfoResponse) Reset()         { *m = NodeInfoResponse{} }
func (m *NodeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*NodeInfoResponse) ProtoMessage()    {}
func (*NodeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{5}
}

func (m *NodeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfoResponse.Unmarshal(m, b)
}
func (m *NodeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfoResponse.Marshal(b, m, deterministic)
}
func (m *NodeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfoResponse.Merge(m, src)
}
func (m *NodeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_NodeInfoResponse.Size(m)
}
func (m *NodeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfoResponse proto.InternalMessageInfo

func (m *NodeInfoResponse) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type ClusterJoinRequest struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterJoinRequest) Reset()         { *m = ClusterJoinRequest{} }
func (m *ClusterJoinRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterJoinRequest) ProtoMessage()    {}
func (*ClusterJoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{6}
}

func (m *ClusterJoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterJoinRequest.Unmarshal(m, b)
}
func (m *ClusterJoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterJoinRequest.Marshal(b, m, deterministic)
}
func (m *ClusterJoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterJoinRequest.Merge(m, src)
}
func (m *ClusterJoinRequest) XXX_Size() int {
	return xxx_messageInfo_ClusterJoinRequest.Size(m)
}
func (m *ClusterJoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterJoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterJoinRequest proto.InternalMessageInfo

func (m *ClusterJoinRequest) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type ClusterLeaveRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterLeaveRequest) Reset()         { *m = ClusterLeaveRequest{} }
func (m *ClusterLeaveRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterLeaveRequest) ProtoMessage()    {}
func (*ClusterLeaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{7}
}

func (m *ClusterLeaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterLeaveRequest.Unmarshal(m, b)
}
func (m *ClusterLeaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterLeaveRequest.Marshal(b, m, deterministic)
}
func (m *ClusterLeaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterLeaveRequest.Merge(m, src)
}
func (m *ClusterLeaveRequest) XXX_Size() int {
	return xxx_messageInfo_ClusterLeaveRequest.Size(m)
}
func (m *ClusterLeaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterLeaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterLeaveRequest proto.InternalMessageInfo

func (m *ClusterLeaveRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ClusterInfoResponse struct {
	Cluster              *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterInfoResponse) Reset()         { *m = ClusterInfoResponse{} }
func (m *ClusterInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterInfoResponse) ProtoMessage()    {}
func (*ClusterInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{8}
}

func (m *ClusterInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterInfoResponse.Unmarshal(m, b)
}
func (m *ClusterInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterInfoResponse.Marshal(b, m, deterministic)
}
func (m *ClusterInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterInfoResponse.Merge(m, src)
}
func (m *ClusterInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterInfoResponse.Size(m)
}
func (m *ClusterInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterInfoResponse proto.InternalMessageInfo

func (m *ClusterInfoResponse) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type ClusterWatchResponse struct {
	Event                ClusterWatchResponse_Event `protobuf:"varint,1,opt,name=event,proto3,enum=index.ClusterWatchResponse_Event" json:"event,omitempty"`
	Node                 *Node                      `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Cluster              *Cluster                   `protobuf:"bytes,3,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ClusterWatchResponse) Reset()         { *m = ClusterWatchResponse{} }
func (m *ClusterWatchResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterWatchResponse) ProtoMessage()    {}
func (*ClusterWatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{9}
}

func (m *ClusterWatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterWatchResponse.Unmarshal(m, b)
}
func (m *ClusterWatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterWatchResponse.Marshal(b, m, deterministic)
}
func (m *ClusterWatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterWatchResponse.Merge(m, src)
}
func (m *ClusterWatchResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterWatchResponse.Size(m)
}
func (m *ClusterWatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterWatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterWatchResponse proto.InternalMessageInfo

func (m *ClusterWatchResponse) GetEvent() ClusterWatchResponse_Event {
	if m != nil {
		return m.Event
	}
	return ClusterWatchResponse_UNKNOWN
}

func (m *ClusterWatchResponse) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *ClusterWatchResponse) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type GetDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDocumentRequest) Reset()         { *m = GetDocumentRequest{} }
func (m *GetDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*GetDocumentRequest) ProtoMessage()    {}
func (*GetDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{10}
}

func (m *GetDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDocumentRequest.Unmarshal(m, b)
}
func (m *GetDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDocumentRequest.Marshal(b, m, deterministic)
}
func (m *GetDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDocumentRequest.Merge(m, src)
}
func (m *GetDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_GetDocumentRequest.Size(m)
}
func (m *GetDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDocumentRequest proto.InternalMessageInfo

func (m *GetDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetDocumentResponse struct {
	Fields               *any.Any `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDocumentResponse) Reset()         { *m = GetDocumentResponse{} }
func (m *GetDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*GetDocumentResponse) ProtoMessage()    {}
func (*GetDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{11}
}

func (m *GetDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDocumentResponse.Unmarshal(m, b)
}
func (m *GetDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDocumentResponse.Marshal(b, m, deterministic)
}
func (m *GetDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDocumentResponse.Merge(m, src)
}
func (m *GetDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_GetDocumentResponse.Size(m)
}
func (m *GetDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDocumentResponse proto.InternalMessageInfo

func (m *GetDocumentResponse) GetFields() *any.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type IndexDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields               *any.Any `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexDocumentRequest) Reset()         { *m = IndexDocumentRequest{} }
func (m *IndexDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*IndexDocumentRequest) ProtoMessage()    {}
func (*IndexDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{12}
}

func (m *IndexDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocumentRequest.Unmarshal(m, b)
}
func (m *IndexDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocumentRequest.Marshal(b, m, deterministic)
}
func (m *IndexDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocumentRequest.Merge(m, src)
}
func (m *IndexDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_IndexDocumentRequest.Size(m)
}
func (m *IndexDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocumentRequest proto.InternalMessageInfo

func (m *IndexDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *IndexDocumentRequest) GetFields() *any.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type IndexDocumentResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexDocumentResponse) Reset()         { *m = IndexDocumentResponse{} }
func (m *IndexDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*IndexDocumentResponse) ProtoMessage()    {}
func (*IndexDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{13}
}

func (m *IndexDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocumentResponse.Unmarshal(m, b)
}
func (m *IndexDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocumentResponse.Marshal(b, m, deterministic)
}
func (m *IndexDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocumentResponse.Merge(m, src)
}
func (m *IndexDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_IndexDocumentResponse.Size(m)
}
func (m *IndexDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocumentResponse proto.InternalMessageInfo

func (m *IndexDocumentResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DeleteDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDocumentRequest) Reset()         { *m = DeleteDocumentRequest{} }
func (m *DeleteDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDocumentRequest) ProtoMessage()    {}
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{14}
}

func (m *DeleteDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDocumentRequest.Unmarshal(m, b)
}
func (m *DeleteDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDocumentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDocumentRequest.Merge(m, src)
}
func (m *DeleteDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDocumentRequest.Size(m)
}
func (m *DeleteDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDocumentRequest proto.InternalMessageInfo

func (m *DeleteDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteDocumentResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDocumentResponse) Reset()         { *m = DeleteDocumentResponse{} }
func (m *DeleteDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDocumentResponse) ProtoMessage()    {}
func (*DeleteDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{15}
}

func (m *DeleteDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDocumentResponse.Unmarshal(m, b)
}
func (m *DeleteDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDocumentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDocumentResponse.Merge(m, src)
}
func (m *DeleteDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDocumentResponse.Size(m)
}
func (m *DeleteDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDocumentResponse proto.InternalMessageInfo

func (m *DeleteDocumentResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SearchRequest struct {
	SearchRequest        *any.Any `protobuf:"bytes,1,opt,name=search_request,json=searchRequest,proto3" json:"search_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{16}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetSearchRequest() *any.Any {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

type SearchResponse struct {
	SearchResult         *any.Any `protobuf:"bytes,1,opt,name=search_result,json=searchResult,proto3" json:"search_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{17}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetSearchResult() *any.Any {
	if m != nil {
		return m.SearchResult
	}
	return nil
}

type GetIndexConfigResponse struct {
	IndexConfig          *any.Any `protobuf:"bytes,1,opt,name=index_config,json=indexConfig,proto3" json:"index_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIndexConfigResponse) Reset()         { *m = GetIndexConfigResponse{} }
func (m *GetIndexConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetIndexConfigResponse) ProtoMessage()    {}
func (*GetIndexConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{18}
}

func (m *GetIndexConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIndexConfigResponse.Unmarshal(m, b)
}
func (m *GetIndexConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIndexConfigResponse.Marshal(b, m, deterministic)
}
func (m *GetIndexConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIndexConfigResponse.Merge(m, src)
}
func (m *GetIndexConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetIndexConfigResponse.Size(m)
}
func (m *GetIndexConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIndexConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIndexConfigResponse proto.InternalMessageInfo

func (m *GetIndexConfigResponse) GetIndexConfig() *any.Any {
	if m != nil {
		return m.IndexConfig
	}
	return nil
}

type GetIndexStatsResponse struct {
	IndexStats           *any.Any `protobuf:"bytes,1,opt,name=index_stats,json=indexStats,proto3" json:"index_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIndexStatsResponse) Reset()         { *m = GetIndexStatsResponse{} }
func (m *GetIndexStatsResponse) String() string { return proto.CompactTextString(m) }
func (*GetIndexStatsResponse) ProtoMessage()    {}
func (*GetIndexStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{19}
}

func (m *GetIndexStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIndexStatsResponse.Unmarshal(m, b)
}
func (m *GetIndexStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIndexStatsResponse.Marshal(b, m, deterministic)
}
func (m *GetIndexStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIndexStatsResponse.Merge(m, src)
}
func (m *GetIndexStatsResponse) XXX_Size() int {
	return xxx_messageInfo_GetIndexStatsResponse.Size(m)
}
func (m *GetIndexStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIndexStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIndexStatsResponse proto.InternalMessageInfo

func (m *GetIndexStatsResponse) GetIndexStats() *any.Any {
	if m != nil {
		return m.IndexStats
	}
	return nil
}

// use for creating snapshot
type Document struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields               *any.Any `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{20}
}

func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (m *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(m, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Document) GetFields() *any.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

func init() {
	proto.RegisterEnum("index.NodeHealthCheckRequest_Probe", NodeHealthCheckRequest_Probe_name, NodeHealthCheckRequest_Probe_value)
	proto.RegisterEnum("index.NodeHealthCheckResponse_State", NodeHealthCheckResponse_State_name, NodeHealthCheckResponse_State_value)
	proto.RegisterEnum("index.Node_State", Node_State_name, Node_State_value)
	proto.RegisterEnum("index.ClusterWatchResponse_Event", ClusterWatchResponse_Event_name, ClusterWatchResponse_Event_value)
	proto.RegisterType((*NodeHealthCheckRequest)(nil), "index.NodeHealthCheckRequest")
	proto.RegisterType((*NodeHealthCheckResponse)(nil), "index.NodeHealthCheckResponse")
	proto.RegisterType((*Metadata)(nil), "index.Metadata")
	proto.RegisterType((*Node)(nil), "index.Node")
	proto.RegisterType((*Cluster)(nil), "index.Cluster")
	proto.RegisterMapType((map[string]*Node)(nil), "index.Cluster.NodesEntry")
	proto.RegisterType((*NodeInfoResponse)(nil), "index.NodeInfoResponse")
	proto.RegisterType((*ClusterJoinRequest)(nil), "index.ClusterJoinRequest")
	proto.RegisterType((*ClusterLeaveRequest)(nil), "index.ClusterLeaveRequest")
	proto.RegisterType((*ClusterInfoResponse)(nil), "index.ClusterInfoResponse")
	proto.RegisterType((*ClusterWatchResponse)(nil), "index.ClusterWatchResponse")
	proto.RegisterType((*GetDocumentRequest)(nil), "index.GetDocumentRequest")
	proto.RegisterType((*GetDocumentResponse)(nil), "index.GetDocumentResponse")
	proto.RegisterType((*IndexDocumentRequest)(nil), "index.IndexDocumentRequest")
	proto.RegisterType((*IndexDocumentResponse)(nil), "index.IndexDocumentResponse")
	proto.RegisterType((*DeleteDocumentRequest)(nil), "index.DeleteDocumentRequest")
	proto.RegisterType((*DeleteDocumentResponse)(nil), "index.DeleteDocumentResponse")
	proto.RegisterType((*SearchRequest)(nil), "index.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "index.SearchResponse")
	proto.RegisterType((*GetIndexConfigResponse)(nil), "index.GetIndexConfigResponse")
	proto.RegisterType((*GetIndexStatsResponse)(nil), "index.GetIndexStatsResponse")
	proto.RegisterType((*Document)(nil), "index.Document")
}

func init() { proto.RegisterFile("protobuf/index/index.proto", fileDescriptor_7b2daf652facb3ae) }

var fileDescriptor_7b2daf652facb3ae = []byte{
	// 1067 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x5d, 0x53, 0xdb, 0x46,
	0x14, 0xb5, 0x6c, 0x0b, 0x9c, 0x6b, 0x6c, 0xdc, 0x0d, 0x90, 0x44, 0x09, 0x6d, 0xd8, 0xa6, 0x8d,
	0x67, 0xda, 0xda, 0x1d, 0x32, 0x4c, 0x9a, 0xb4, 0x9d, 0x8e, 0x63, 0x29, 0xe0, 0xe0, 0x0a, 0x22,
	0x43, 0x98, 0xf4, 0x85, 0x91, 0xad, 0x05, 0x6b, 0x30, 0x92, 0x6b, 0xad, 0x99, 0xf2, 0xd8, 0xd7,
	0xfe, 0x92, 0xf6, 0xe7, 0xf4, 0xbd, 0x3f, 0xa6, 0xb3, 0x1f, 0x12, 0x92, 0xb0, 0x44, 0x67, 0xfa,
	0xc2, 0xb0, 0x77, 0xcf, 0x3d, 0x7b, 0xee, 0xdd, 0xbb, 0x47, 0x06, 0x6d, 0x3a, 0xf3, 0xa9, 0x3f,
	0x9c, 0x9f, 0xb5, 0x5d, 0xcf, 0x21, 0xbf, 0x89, 0xbf, 0x2d, 0x1e, 0x44, 0x2a, 0x5f, 0x68, 0x8f,
	0xce, 0x7d, 0xff, 0x7c, 0x42, 0xda, 0x11, 0xd2, 0xf6, 0xae, 0x05, 0x42, 0x7b, 0x9c, 0xde, 0x22,
	0x97, 0x53, 0x2a, 0x37, 0xf1, 0x1f, 0x0a, 0x6c, 0x98, 0xbe, 0x43, 0xf6, 0x88, 0x3d, 0xa1, 0xe3,
	0xee, 0x98, 0x8c, 0x2e, 0x2c, 0xf2, 0xeb, 0x9c, 0x04, 0x14, 0xbd, 0x02, 0x75, 0x3a, 0xf3, 0x87,
	0xe4, 0xa1, 0xf2, 0x54, 0x69, 0xd6, 0xb7, 0x3f, 0x6f, 0x89, 0x63, 0x17, 0xa3, 0x5b, 0x87, 0x0c,
	0x6a, 0x89, 0x0c, 0xbc, 0x03, 0x2a, 0x5f, 0xa3, 0x55, 0xa8, 0xee, 0x19, 0x9d, 0xfe, 0xd1, 0x5e,
	0xcf, 0x34, 0x06, 0x83, 0x46, 0x01, 0xad, 0x40, 0xa5, 0xdf, 0xfb, 0x60, 0xf0, 0x95, 0x82, 0x6a,
	0x70, 0xcf, 0x32, 0x3a, 0xba, 0xd8, 0x2c, 0xe2, 0xbf, 0x14, 0x78, 0x70, 0x8b, 0x3e, 0x98, 0xfa,
	0x5e, 0x40, 0xd0, 0x6b, 0x50, 0x03, 0x6a, 0xd3, 0x50, 0xcd, 0xb3, 0x2c, 0x35, 0x02, 0xde, 0x1a,
	0x30, 0xac, 0x25, 0x52, 0xb0, 0x05, 0x2a, 0x5f, 0xa3, 0x2a, 0x2c, 0x0b, 0x39, 0x1f, 0x1b, 0x05,
	0x76, 0xf8, 0xb1, 0x19, 0x2e, 0x15, 0x74, 0x0f, 0xd4, 0x0e, 0x93, 0xd6, 0x28, 0xa2, 0x0a, 0x94,
	0x75, 0xa3, 0xa3, 0x37, 0x4a, 0x2c, 0xc8, 0x04, 0x7e, 0x6c, 0x94, 0x19, 0xdc, 0x3c, 0x38, 0x3a,
	0x15, 0x4b, 0x15, 0x1f, 0x42, 0xe5, 0x67, 0x42, 0x6d, 0xc7, 0xa6, 0x36, 0xda, 0x82, 0x95, 0xf3,
	0xd9, 0x74, 0x74, 0x6a, 0x3b, 0xce, 0x8c, 0x04, 0x01, 0x97, 0x78, 0xcf, 0xaa, 0xb2, 0x58, 0x47,
	0x84, 0x18, 0x64, 0x4c, 0xe9, 0x34, 0x82, 0x14, 0x05, 0x84, 0xc5, 0x24, 0x04, 0xff, 0xa3, 0x40,
	0x99, 0x95, 0x83, 0xea, 0x50, 0x74, 0x1d, 0x49, 0x52, 0x74, 0x1d, 0x96, 0x3b, 0x74, 0x3d, 0x27,
	0x9d, 0xcb, 0x62, 0x21, 0xfd, 0xf3, 0xb0, 0x3b, 0x25, 0xde, 0x9d, 0x4f, 0x62, 0xdd, 0x49, 0xb4,
	0x02, 0x7d, 0x05, 0x95, 0x4b, 0x29, 0xfb, 0x61, 0xf9, 0xa9, 0xd2, 0xac, 0x6e, 0xaf, 0x4a, 0x6c,
	0x58, 0x8d, 0x15, 0x01, 0xf0, 0x7e, 0xac, 0x6f, 0xc7, 0xe6, 0xbe, 0x79, 0x70, 0x62, 0x8a, 0x2b,
	0x7c, 0x7b, 0xd0, 0xef, 0x1f, 0x9c, 0x18, 0x96, 0xb8, 0xc2, 0x6e, 0xc7, 0xd4, 0x7b, 0x7a, 0xe7,
	0x88, 0xb5, 0x0e, 0x60, 0xa9, 0x6f, 0x74, 0x74, 0xc3, 0x6a, 0x94, 0x18, 0x70, 0xb0, 0x77, 0x7c,
	0xa4, 0xb3, 0xb4, 0x32, 0xfe, 0x5d, 0x81, 0xe5, 0xee, 0x64, 0x1e, 0x50, 0x32, 0x43, 0x6d, 0x50,
	0x3d, 0xdf, 0x21, 0xac, 0x53, 0xa5, 0x66, 0x75, 0xfb, 0x91, 0x94, 0x20, 0xb7, 0xb9, 0xec, 0xc0,
	0xf0, 0xe8, 0xec, 0xda, 0x12, 0x38, 0xcd, 0x00, 0xb8, 0x09, 0xa2, 0x06, 0x94, 0x2e, 0xc8, 0xb5,
	0xec, 0x10, 0xfb, 0x17, 0x6d, 0x81, 0x7a, 0x65, 0x4f, 0xe6, 0x84, 0xf7, 0xa6, 0xba, 0x5d, 0x8d,
	0xd5, 0x6f, 0x89, 0x9d, 0xd7, 0xc5, 0xef, 0x14, 0xfc, 0x02, 0x1a, 0x2c, 0xd4, 0xf3, 0xce, 0xfc,
	0x68, 0xb0, 0x3e, 0x83, 0x32, 0x3b, 0x83, 0xb3, 0xa5, 0x32, 0xf9, 0x06, 0xde, 0x01, 0x24, 0x85,
	0xbd, 0xf3, 0x5d, 0x2f, 0x7c, 0x1d, 0x77, 0xa6, 0x7d, 0x01, 0xf7, 0x65, 0x5a, 0x9f, 0xd8, 0x57,
	0x24, 0xcc, 0x4b, 0x5d, 0x2e, 0xfe, 0x29, 0x82, 0x25, 0x54, 0x35, 0x61, 0x79, 0x24, 0xc2, 0xf2,
	0x84, 0x7a, 0xb2, 0x47, 0x56, 0xb8, 0x8d, 0xff, 0x56, 0x60, 0x4d, 0x06, 0x4f, 0x6c, 0x3a, 0x1a,
	0x47, 0x14, 0x2f, 0x41, 0x25, 0x57, 0xc4, 0xa3, 0xf2, 0xc5, 0x6c, 0x25, 0x09, 0x12, 0xd8, 0x96,
	0xc1, 0x80, 0x96, 0xc0, 0x47, 0xa5, 0x15, 0x33, 0x4a, 0x8b, 0x8b, 0x2b, 0xe5, 0x8b, 0xdb, 0x01,
	0x95, 0x53, 0x27, 0x27, 0xa8, 0x02, 0xe5, 0x77, 0x07, 0x3d, 0x53, 0x3c, 0xba, 0xbe, 0xd1, 0xf9,
	0x20, 0x27, 0xe7, 0xf8, 0x90, 0x4f, 0x51, 0x09, 0x3f, 0x03, 0xb4, 0x4b, 0xa8, 0xee, 0x8f, 0xe6,
	0x97, 0x4c, 0x57, 0x46, 0xeb, 0xba, 0x70, 0x3f, 0x81, 0x92, 0x75, 0x7f, 0x0d, 0x4b, 0x67, 0x2e,
	0x99, 0x38, 0x81, 0xec, 0xdc, 0x5a, 0x4b, 0x18, 0x60, 0x2b, 0x34, 0xc0, 0x56, 0xc7, 0xbb, 0xb6,
	0x24, 0x06, 0x1f, 0xc1, 0x5a, 0x8f, 0x69, 0xbf, 0xe3, 0xb0, 0x18, 0x6b, 0xf1, 0x3f, 0xb0, 0x7e,
	0x03, 0xeb, 0x29, 0x56, 0x29, 0x6e, 0x0d, 0xd4, 0x91, 0x3f, 0x97, 0x97, 0xa2, 0x5a, 0x62, 0x81,
	0x9f, 0xc3, 0xba, 0x4e, 0x26, 0x84, 0x92, 0xbb, 0x4a, 0x6e, 0xc1, 0x46, 0x1a, 0x98, 0x4b, 0xdc,
	0x87, 0xda, 0x80, 0xd8, 0x33, 0x76, 0xd3, 0x82, 0xf0, 0x7b, 0xa8, 0x07, 0x3c, 0x70, 0x3a, 0x13,
	0x91, 0xdc, 0x26, 0xd5, 0x82, 0x78, 0x32, 0xde, 0x87, 0x7a, 0xc8, 0x26, 0x4f, 0x7d, 0x05, 0xb5,
	0x88, 0x2e, 0x98, 0x4f, 0xf2, 0xd9, 0x56, 0x42, 0x36, 0x86, 0xc4, 0xef, 0x61, 0x63, 0x97, 0x50,
	0xde, 0xa5, 0xae, 0xef, 0x9d, 0xb9, 0xe7, 0xb1, 0xc1, 0x5d, 0xe1, 0xe3, 0x74, 0x3a, 0xe2, 0xf1,
	0x5c, 0xce, 0xaa, 0x7b, 0x43, 0x80, 0x4d, 0x58, 0x0f, 0x29, 0x99, 0x6f, 0x05, 0x11, 0xe3, 0x0e,
	0x08, 0xdc, 0x29, 0x33, 0xc1, 0xfc, 0xb9, 0x00, 0x37, 0x4a, 0xc7, 0x7b, 0x50, 0x09, 0xfb, 0xfc,
	0xff, 0xe6, 0x61, 0xfb, 0xcf, 0x65, 0x50, 0xb9, 0x2e, 0x64, 0xc1, 0x6a, 0xea, 0x9b, 0x85, 0x36,
	0x73, 0xbf, 0xac, 0xda, 0xa7, 0xf9, 0x9f, 0x3a, 0x5c, 0x40, 0x3f, 0x42, 0x25, 0xb4, 0x35, 0xb4,
	0x71, 0x4b, 0x87, 0xc1, 0x3e, 0xf7, 0xda, 0x83, 0x18, 0x4b, 0xdc, 0x69, 0x70, 0x01, 0xbd, 0x81,
	0x6a, 0xcc, 0xe0, 0x50, 0xca, 0x8d, 0x63, 0xa6, 0xa7, 0x65, 0x90, 0xe3, 0x02, 0xd2, 0x61, 0x25,
	0xee, 0x76, 0x48, 0x4b, 0x92, 0xc4, 0x2d, 0x30, 0x87, 0xa5, 0x1b, 0x29, 0xc9, 0xad, 0x25, 0x45,
	0x9e, 0x2a, 0x67, 0x37, 0x92, 0xc2, 0x3d, 0x2e, 0x93, 0xe5, 0x71, 0x8e, 0x21, 0xe2, 0xc2, 0xb7,
	0x0a, 0x7a, 0x0b, 0xd5, 0x98, 0xbf, 0x44, 0x7d, 0xb9, 0xed, 0x4c, 0x91, 0xa0, 0x05, 0x76, 0x84,
	0x0b, 0xc8, 0x84, 0x5a, 0xc2, 0x0c, 0x50, 0x78, 0xf2, 0x22, 0xe3, 0xd1, 0x9e, 0x2c, 0xde, 0x0c,
	0xd9, 0x9a, 0x0a, 0x7a, 0x0f, 0xf5, 0xa4, 0x09, 0xa0, 0x30, 0x67, 0xa1, 0x89, 0x68, 0x9b, 0x19,
	0xbb, 0x31, 0xca, 0x97, 0xb0, 0x24, 0x5e, 0x36, 0x5a, 0x93, 0xe0, 0x84, 0x6d, 0x68, 0xeb, 0xa9,
	0x68, 0x54, 0x5b, 0x0f, 0xea, 0xc9, 0x57, 0x9c, 0xd9, 0xee, 0xcd, 0x9b, 0x1e, 0x2d, 0x78, 0xf4,
	0xfc, 0xde, 0x6a, 0x89, 0xd7, 0x9b, 0xc9, 0xf4, 0x24, 0xc5, 0x94, 0x78, 0xeb, 0xb8, 0x80, 0x7e,
	0x80, 0xca, 0xc0, 0xb3, 0xa7, 0xc1, 0xd8, 0xa7, 0x99, 0x1c, 0x99, 0x33, 0xf8, 0xa6, 0xf9, 0xcb,
	0x97, 0xe7, 0x2e, 0x1d, 0xcf, 0x87, 0xad, 0x91, 0x7f, 0xd9, 0xbe, 0xf4, 0x83, 0xf9, 0x85, 0xdd,
	0x1e, 0x4e, 0xec, 0x80, 0xb6, 0x93, 0x3f, 0xc3, 0x87, 0x4b, 0x7c, 0xfd, 0xe2, 0xdf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x05, 0xe3, 0xab, 0x2e, 0x9f, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IndexClient is the client API for Index service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IndexClient interface {
	NodeHealthCheck(ctx context.Context, in *NodeHealthCheckRequest, opts ...grpc.CallOption) (*NodeHealthCheckResponse, error)
	NodeInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NodeInfoResponse, error)
	ClusterJoin(ctx context.Context, in *ClusterJoinRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ClusterLeave(ctx context.Context, in *ClusterLeaveRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ClusterInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ClusterInfoResponse, error)
	ClusterWatch(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Index_ClusterWatchClient, error)
	GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error)
	IndexDocument(ctx context.Context, opts ...grpc.CallOption) (Index_IndexDocumentClient, error)
	DeleteDocument(ctx context.Context, opts ...grpc.CallOption) (Index_DeleteDocumentClient, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	GetIndexConfig(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIndexConfigResponse, error)
	GetIndexStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIndexStatsResponse, error)
	Snapshot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type indexClient struct {
	cc *grpc.ClientConn
}

func NewIndexClient(cc *grpc.ClientConn) IndexClient {
	return &indexClient{cc}
}

func (c *indexClient) NodeHealthCheck(ctx context.Context, in *NodeHealthCheckRequest, opts ...grpc.CallOption) (*NodeHealthCheckResponse, error) {
	out := new(NodeHealthCheckResponse)
	err := c.cc.Invoke(ctx, "/index.Index/NodeHealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) NodeInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NodeInfoResponse, error) {
	out := new(NodeInfoResponse)
	err := c.cc.Invoke(ctx, "/index.Index/NodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) ClusterJoin(ctx context.Context, in *ClusterJoinRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/ClusterJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) ClusterLeave(ctx context.Context, in *ClusterLeaveRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/ClusterLeave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) ClusterInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ClusterInfoResponse, error) {
	out := new(ClusterInfoResponse)
	err := c.cc.Invoke(ctx, "/index.Index/ClusterInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) ClusterWatch(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Index_ClusterWatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Index_serviceDesc.Streams[0], "/index.Index/ClusterWatch", opts...)
	if err != nil {
		return nil, err
	}
	x := &indexClusterWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Index_ClusterWatchClient interface {
	Recv() (*ClusterWatchResponse, error)
	grpc.ClientStream
}

type indexClusterWatchClient struct {
	grpc.ClientStream
}

func (x *indexClusterWatchClient) Recv() (*ClusterWatchResponse, error) {
	m := new(ClusterWatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *indexClient) GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error) {
	out := new(GetDocumentResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) IndexDocument(ctx context.Context, opts ...grpc.CallOption) (Index_IndexDocumentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Index_serviceDesc.Streams[1], "/index.Index/IndexDocument", opts...)
	if err != nil {
		return nil, err
	}
	x := &indexIndexDocumentClient{stream}
	return x, nil
}

type Index_IndexDocumentClient interface {
	Send(*IndexDocumentRequest) error
	CloseAndRecv() (*IndexDocumentResponse, error)
	grpc.ClientStream
}

type indexIndexDocumentClient struct {
	grpc.ClientStream
}

func (x *indexIndexDocumentClient) Send(m *IndexDocumentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *indexIndexDocumentClient) CloseAndRecv() (*IndexDocumentResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(IndexDocumentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *indexClient) DeleteDocument(ctx context.Context, opts ...grpc.CallOption) (Index_DeleteDocumentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Index_serviceDesc.Streams[2], "/index.Index/DeleteDocument", opts...)
	if err != nil {
		return nil, err
	}
	x := &indexDeleteDocumentClient{stream}
	return x, nil
}

type Index_DeleteDocumentClient interface {
	Send(*DeleteDocumentRequest) error
	CloseAndRecv() (*DeleteDocumentResponse, error)
	grpc.ClientStream
}

type indexDeleteDocumentClient struct {
	grpc.ClientStream
}

func (x *indexDeleteDocumentClient) Send(m *DeleteDocumentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *indexDeleteDocumentClient) CloseAndRecv() (*DeleteDocumentResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(DeleteDocumentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *indexClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/index.Index/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetIndexConfig(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIndexConfigResponse, error) {
	out := new(GetIndexConfigResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetIndexConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetIndexStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIndexStatsResponse, error) {
	out := new(GetIndexStatsResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetIndexStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Snapshot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/Snapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IndexServer is the server API for Index service.
type IndexServer interface {
	NodeHealthCheck(context.Context, *NodeHealthCheckRequest) (*NodeHealthCheckResponse, error)
	NodeInfo(context.Context, *empty.Empty) (*NodeInfoResponse, error)
	ClusterJoin(context.Context, *ClusterJoinRequest) (*empty.Empty, error)
	ClusterLeave(context.Context, *ClusterLeaveRequest) (*empty.Empty, error)
	ClusterInfo(context.Context, *empty.Empty) (*ClusterInfoResponse, error)
	ClusterWatch(*empty.Empty, Index_ClusterWatchServer) error
	GetDocument(context.Context, *GetDocumentRequest) (*GetDocumentResponse, error)
	IndexDocument(Index_IndexDocumentServer) error
	DeleteDocument(Index_DeleteDocumentServer) error
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	GetIndexConfig(context.Context, *empty.Empty) (*GetIndexConfigResponse, error)
	GetIndexStats(context.Context, *empty.Empty) (*GetIndexStatsResponse, error)
	Snapshot(context.Context, *empty.Empty) (*empty.Empty, error)
}

func RegisterIndexServer(s *grpc.Server, srv IndexServer) {
	s.RegisterService(&_Index_serviceDesc, srv)
}

func _Index_NodeHealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeHealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).NodeHealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/NodeHealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).NodeHealthCheck(ctx, req.(*NodeHealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_NodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).NodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/NodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).NodeInfo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_ClusterJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterJoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).ClusterJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/ClusterJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).ClusterJoin(ctx, req.(*ClusterJoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_ClusterLeave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterLeaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).ClusterLeave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/ClusterLeave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).ClusterLeave(ctx, req.(*ClusterLeaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_ClusterInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).ClusterInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/ClusterInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).ClusterInfo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_ClusterWatch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(IndexServer).ClusterWatch(m, &indexClusterWatchServer{stream})
}

type Index_ClusterWatchServer interface {
	Send(*ClusterWatchResponse) error
	grpc.ServerStream
}

type indexClusterWatchServer struct {
	grpc.ServerStream
}

func (x *indexClusterWatchServer) Send(m *ClusterWatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Index_GetDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetDocument(ctx, req.(*GetDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_IndexDocument_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(IndexServer).IndexDocument(&indexIndexDocumentServer{stream})
}

type Index_IndexDocumentServer interface {
	SendAndClose(*IndexDocumentResponse) error
	Recv() (*IndexDocumentRequest, error)
	grpc.ServerStream
}

type indexIndexDocumentServer struct {
	grpc.ServerStream
}

func (x *indexIndexDocumentServer) SendAndClose(m *IndexDocumentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *indexIndexDocumentServer) Recv() (*IndexDocumentRequest, error) {
	m := new(IndexDocumentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Index_DeleteDocument_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(IndexServer).DeleteDocument(&indexDeleteDocumentServer{stream})
}

type Index_DeleteDocumentServer interface {
	SendAndClose(*DeleteDocumentResponse) error
	Recv() (*DeleteDocumentRequest, error)
	grpc.ServerStream
}

type indexDeleteDocumentServer struct {
	grpc.ServerStream
}

func (x *indexDeleteDocumentServer) SendAndClose(m *DeleteDocumentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *indexDeleteDocumentServer) Recv() (*DeleteDocumentRequest, error) {
	m := new(DeleteDocumentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Index_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetIndexConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetIndexConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetIndexConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetIndexConfig(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetIndexStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetIndexStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetIndexStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetIndexStats(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Snapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Snapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Snapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Snapshot(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Index_serviceDesc = grpc.ServiceDesc{
	ServiceName: "index.Index",
	HandlerType: (*IndexServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NodeHealthCheck",
			Handler:    _Index_NodeHealthCheck_Handler,
		},
		{
			MethodName: "NodeInfo",
			Handler:    _Index_NodeInfo_Handler,
		},
		{
			MethodName: "ClusterJoin",
			Handler:    _Index_ClusterJoin_Handler,
		},
		{
			MethodName: "ClusterLeave",
			Handler:    _Index_ClusterLeave_Handler,
		},
		{
			MethodName: "ClusterInfo",
			Handler:    _Index_ClusterInfo_Handler,
		},
		{
			MethodName: "GetDocument",
			Handler:    _Index_GetDocument_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Index_Search_Handler,
		},
		{
			MethodName: "GetIndexConfig",
			Handler:    _Index_GetIndexConfig_Handler,
		},
		{
			MethodName: "GetIndexStats",
			Handler:    _Index_GetIndexStats_Handler,
		},
		{
			MethodName: "Snapshot",
			Handler:    _Index_Snapshot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ClusterWatch",
			Handler:       _Index_ClusterWatch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "IndexDocument",
			Handler:       _Index_IndexDocument_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DeleteDocument",
			Handler:       _Index_DeleteDocument_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "protobuf/index/index.proto",
}
