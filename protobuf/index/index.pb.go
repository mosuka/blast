// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/index/index.proto

package index

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	raft "github.com/mosuka/blast/protobuf/raft"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IndexCommand_Type int32

const (
	IndexCommand_UNKNOWN_COMMAND IndexCommand_Type = 0
	IndexCommand_SET_METADATA    IndexCommand_Type = 1
	IndexCommand_DELETE_METADATA IndexCommand_Type = 2
	IndexCommand_INDEX_DOCUMENT  IndexCommand_Type = 3
	IndexCommand_DELETE_DOCUMENT IndexCommand_Type = 4
)

var IndexCommand_Type_name = map[int32]string{
	0: "UNKNOWN_COMMAND",
	1: "SET_METADATA",
	2: "DELETE_METADATA",
	3: "INDEX_DOCUMENT",
	4: "DELETE_DOCUMENT",
}

var IndexCommand_Type_value = map[string]int32{
	"UNKNOWN_COMMAND": 0,
	"SET_METADATA":    1,
	"DELETE_METADATA": 2,
	"INDEX_DOCUMENT":  3,
	"DELETE_DOCUMENT": 4,
}

func (x IndexCommand_Type) String() string {
	return proto.EnumName(IndexCommand_Type_name, int32(x))
}

func (IndexCommand_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{9, 0}
}

type Document struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields               *any.Any `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{0}
}

func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (m *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(m, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Document) GetFields() *any.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type Stats struct {
	Stats                *any.Any `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{1}
}

func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (m *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(m, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

func (m *Stats) GetStats() *any.Any {
	if m != nil {
		return m.Stats
	}
	return nil
}

type GetRequest struct {
	Document             *Document `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{2}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type GetResponse struct {
	Document             *Document `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{3}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type SearchRequest struct {
	SearchRequest        *any.Any `protobuf:"bytes,1,opt,name=search_request,json=searchRequest,proto3" json:"search_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{4}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetSearchRequest() *any.Any {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

type SearchResponse struct {
	SearchResult         *any.Any `protobuf:"bytes,1,opt,name=search_result,json=searchResult,proto3" json:"search_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{5}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetSearchResult() *any.Any {
	if m != nil {
		return m.SearchResult
	}
	return nil
}

type IndexRequest struct {
	Document             *Document `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *IndexRequest) Reset()         { *m = IndexRequest{} }
func (m *IndexRequest) String() string { return proto.CompactTextString(m) }
func (*IndexRequest) ProtoMessage()    {}
func (*IndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{6}
}

func (m *IndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexRequest.Unmarshal(m, b)
}
func (m *IndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexRequest.Marshal(b, m, deterministic)
}
func (m *IndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexRequest.Merge(m, src)
}
func (m *IndexRequest) XXX_Size() int {
	return xxx_messageInfo_IndexRequest.Size(m)
}
func (m *IndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexRequest proto.InternalMessageInfo

func (m *IndexRequest) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type DeleteRequest struct {
	Document             *Document `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{7}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type GetStatsResponse struct {
	Stats                *Stats   `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatsResponse) Reset()         { *m = GetStatsResponse{} }
func (m *GetStatsResponse) String() string { return proto.CompactTextString(m) }
func (*GetStatsResponse) ProtoMessage()    {}
func (*GetStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{8}
}

func (m *GetStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatsResponse.Unmarshal(m, b)
}
func (m *GetStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatsResponse.Marshal(b, m, deterministic)
}
func (m *GetStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatsResponse.Merge(m, src)
}
func (m *GetStatsResponse) XXX_Size() int {
	return xxx_messageInfo_GetStatsResponse.Size(m)
}
func (m *GetStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatsResponse proto.InternalMessageInfo

func (m *GetStatsResponse) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type IndexCommand struct {
	Type                 IndexCommand_Type `protobuf:"varint,1,opt,name=type,proto3,enum=index.IndexCommand_Type" json:"type,omitempty"`
	Data                 *any.Any          `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *IndexCommand) Reset()         { *m = IndexCommand{} }
func (m *IndexCommand) String() string { return proto.CompactTextString(m) }
func (*IndexCommand) ProtoMessage()    {}
func (*IndexCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{9}
}

func (m *IndexCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexCommand.Unmarshal(m, b)
}
func (m *IndexCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexCommand.Marshal(b, m, deterministic)
}
func (m *IndexCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexCommand.Merge(m, src)
}
func (m *IndexCommand) XXX_Size() int {
	return xxx_messageInfo_IndexCommand.Size(m)
}
func (m *IndexCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexCommand.DiscardUnknown(m)
}

var xxx_messageInfo_IndexCommand proto.InternalMessageInfo

func (m *IndexCommand) GetType() IndexCommand_Type {
	if m != nil {
		return m.Type
	}
	return IndexCommand_UNKNOWN_COMMAND
}

func (m *IndexCommand) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("index.IndexCommand_Type", IndexCommand_Type_name, IndexCommand_Type_value)
	proto.RegisterType((*Document)(nil), "index.Document")
	proto.RegisterType((*Stats)(nil), "index.Stats")
	proto.RegisterType((*GetRequest)(nil), "index.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "index.GetResponse")
	proto.RegisterType((*SearchRequest)(nil), "index.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "index.SearchResponse")
	proto.RegisterType((*IndexRequest)(nil), "index.IndexRequest")
	proto.RegisterType((*DeleteRequest)(nil), "index.DeleteRequest")
	proto.RegisterType((*GetStatsResponse)(nil), "index.GetStatsResponse")
	proto.RegisterType((*IndexCommand)(nil), "index.IndexCommand")
}

func init() { proto.RegisterFile("protobuf/index/index.proto", fileDescriptor_7b2daf652facb3ae) }

var fileDescriptor_7b2daf652facb3ae = []byte{
	// 617 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0x5f, 0x6f, 0xd3, 0x3c,
	0x14, 0xc6, 0xdb, 0xae, 0xed, 0xdb, 0xf7, 0xac, 0xed, 0x3a, 0x6f, 0x83, 0x12, 0x6e, 0xa6, 0x5c,
	0xa0, 0x0a, 0x50, 0x2a, 0x6d, 0x62, 0xb0, 0x3f, 0x48, 0x94, 0x26, 0x2a, 0x63, 0x6b, 0x26, 0xb5,
	0x99, 0x40, 0xdc, 0x54, 0xe9, 0xe2, 0x6d, 0xd1, 0x92, 0x38, 0xd4, 0x0e, 0xa2, 0x1f, 0x91, 0x6b,
	0xbe, 0x10, 0x8a, 0xed, 0xa4, 0xe9, 0x50, 0x3a, 0xb1, 0x9b, 0x28, 0x3e, 0x7e, 0x7e, 0xc7, 0x27,
	0xe7, 0xf8, 0x09, 0x28, 0xe1, 0x8c, 0x30, 0x32, 0x8d, 0xae, 0xbb, 0x6e, 0xe0, 0xe0, 0x9f, 0xe2,
	0xa9, 0xf1, 0x20, 0xaa, 0xf0, 0x85, 0xf2, 0xec, 0x86, 0x90, 0x1b, 0x0f, 0x77, 0x53, 0xa5, 0x1d,
	0xcc, 0x85, 0x42, 0x79, 0x7e, 0x7f, 0x0b, 0xfb, 0x21, 0x4b, 0x36, 0xdb, 0x69, 0x74, 0x66, 0x5f,
	0x33, 0xfe, 0x10, 0x3b, 0xea, 0x27, 0xa8, 0xe9, 0xe4, 0x2a, 0xf2, 0x71, 0xc0, 0x50, 0x13, 0x4a,
	0xae, 0xd3, 0x2e, 0xee, 0x16, 0x3b, 0xff, 0x8f, 0x4a, 0xae, 0x83, 0x5e, 0x43, 0xf5, 0xda, 0xc5,
	0x9e, 0x43, 0xdb, 0xa5, 0xdd, 0x62, 0x67, 0x7d, 0x6f, 0x5b, 0x13, 0x67, 0x68, 0x49, 0x36, 0xad,
	0x17, 0xcc, 0x47, 0x52, 0xa3, 0xee, 0x43, 0x65, 0xcc, 0x6c, 0x46, 0xd1, 0x4b, 0xa8, 0xd0, 0xf8,
	0x85, 0x67, 0xca, 0xa3, 0x84, 0x44, 0x3d, 0x04, 0x18, 0x60, 0x36, 0xc2, 0xdf, 0x23, 0x4c, 0x19,
	0x7a, 0x05, 0x35, 0x47, 0x16, 0x23, 0xe1, 0x0d, 0x4d, 0x74, 0x21, 0xa9, 0x71, 0x94, 0x0a, 0xd4,
	0x23, 0x58, 0xe7, 0x28, 0x0d, 0x49, 0x40, 0xf1, 0xbf, 0xb1, 0xe7, 0xd0, 0x18, 0x63, 0x7b, 0x76,
	0x75, 0x9b, 0x9c, 0x7c, 0x0c, 0x4d, 0xca, 0x03, 0x93, 0x99, 0x88, 0xac, 0x2c, 0xbe, 0x41, 0xb3,
	0xb0, 0x7a, 0x06, 0xcd, 0x24, 0x9b, 0x2c, 0xe6, 0x10, 0x1a, 0x69, 0x3a, 0x1a, 0x79, 0xab, 0xb3,
	0xd5, 0x93, 0x6c, 0xb1, 0x52, 0x3d, 0x86, 0xfa, 0x69, 0x5c, 0xf6, 0xa3, 0x7a, 0x72, 0x02, 0x0d,
	0x1d, 0x7b, 0x98, 0xe1, 0x47, 0xd1, 0x07, 0xd0, 0x1a, 0x60, 0xc6, 0x87, 0x98, 0x7e, 0x89, 0xba,
	0x3c, 0xcc, 0xba, 0xa4, 0x85, 0x48, 0x0e, 0xf1, 0x77, 0x51, 0xd6, 0xdc, 0x27, 0xbe, 0x6f, 0x07,
	0xf1, 0xc5, 0x29, 0xb3, 0x79, 0x88, 0x39, 0xd3, 0xdc, 0x6b, 0x4b, 0x26, 0x2b, 0xd1, 0xac, 0x79,
	0x88, 0x47, 0x5c, 0x85, 0x3a, 0x50, 0x76, 0x6c, 0x66, 0xaf, 0xbc, 0x64, 0x5c, 0xa1, 0xde, 0x41,
	0x39, 0xe6, 0xd0, 0x16, 0x6c, 0x5c, 0x9a, 0x67, 0xe6, 0xc5, 0x17, 0x73, 0xd2, 0xbf, 0x18, 0x0e,
	0x7b, 0xa6, 0xde, 0x2a, 0xa0, 0x16, 0xd4, 0xc7, 0x86, 0x35, 0x19, 0x1a, 0x56, 0x4f, 0xef, 0x59,
	0xbd, 0x56, 0x31, 0x96, 0xe9, 0xc6, 0xb9, 0x61, 0x19, 0x8b, 0x60, 0x09, 0x21, 0x68, 0x9e, 0x9a,
	0xba, 0xf1, 0x75, 0xa2, 0x5f, 0xf4, 0x2f, 0x87, 0x86, 0x69, 0xb5, 0xd6, 0x32, 0xc2, 0x34, 0x58,
	0xde, 0xfb, 0x55, 0x86, 0x0a, 0x2f, 0x19, 0xed, 0x43, 0xf9, 0x33, 0x71, 0x03, 0xb4, 0xa9, 0x71,
	0xe3, 0xc4, 0xef, 0xb2, 0xbf, 0xca, 0x93, 0xbf, 0xaa, 0x35, 0x62, 0xdb, 0xa9, 0x05, 0xf4, 0x06,
	0x2a, 0xe7, 0xd8, 0xfe, 0x81, 0x11, 0x12, 0x14, 0x5f, 0x3c, 0x8c, 0x1d, 0xc1, 0x7f, 0x03, 0xcc,
	0x4c, 0xe2, 0x60, 0x94, 0x23, 0x52, 0x76, 0x44, 0x42, 0x29, 0x4b, 0x26, 0xa5, 0x16, 0xd0, 0x07,
	0x6e, 0xa6, 0xbe, 0x17, 0x51, 0x86, 0x67, 0xb9, 0x78, 0x3b, 0xc5, 0xa5, 0x32, 0x93, 0xe1, 0x04,
	0x6a, 0xe3, 0xc0, 0x0e, 0xe9, 0x2d, 0x61, 0xb9, 0x7c, 0x7e, 0xed, 0x1a, 0xac, 0x0d, 0x30, 0x43,
	0x9b, 0x72, 0xde, 0x0b, 0x63, 0x2b, 0x28, 0x1b, 0x4a, 0x4f, 0x7b, 0x0b, 0x55, 0xe1, 0x1b, 0xb4,
	0x9d, 0x5c, 0xab, 0xac, 0xaf, 0x94, 0x9d, 0x7b, 0xd1, 0x14, 0x3c, 0x48, 0x26, 0xb3, 0x95, 0xbd,
	0x5a, 0x0f, 0x37, 0xf7, 0x1d, 0x54, 0x85, 0x3d, 0xd2, 0x03, 0x97, 0xdc, 0xb2, 0x82, 0x7c, 0x0f,
	0xb5, 0xc4, 0x1a, 0xb9, 0x8d, 0x79, 0xba, 0xf8, 0xc8, 0x25, 0x0f, 0xa9, 0x85, 0x8f, 0x9d, 0x6f,
	0x2f, 0x6e, 0x5c, 0x76, 0x1b, 0x4d, 0xb5, 0x2b, 0xe2, 0x77, 0x7d, 0x42, 0xa3, 0x3b, 0xbb, 0x3b,
	0xf5, 0x6c, 0xca, 0xba, 0xcb, 0x3f, 0xfd, 0x69, 0x95, 0xaf, 0xf7, 0xff, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x31, 0x3b, 0xb6, 0x38, 0x0d, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IndexClient is the client API for Index service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IndexClient interface {
	Join(ctx context.Context, in *raft.JoinRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Leave(ctx context.Context, in *raft.LeaveRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetNode(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*raft.GetNodeResponse, error)
	GetCluster(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*raft.GetClusterResponse, error)
	Snapshot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	Index(ctx context.Context, in *IndexRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetStatsResponse, error)
}

type indexClient struct {
	cc *grpc.ClientConn
}

func NewIndexClient(cc *grpc.ClientConn) IndexClient {
	return &indexClient{cc}
}

func (c *indexClient) Join(ctx context.Context, in *raft.JoinRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Leave(ctx context.Context, in *raft.LeaveRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/Leave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetNode(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*raft.GetNodeResponse, error) {
	out := new(raft.GetNodeResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetCluster(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*raft.GetClusterResponse, error) {
	out := new(raft.GetClusterResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Snapshot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/Snapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/index.Index/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/index.Index/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Index(ctx context.Context, in *IndexRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/Index", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetStatsResponse, error) {
	out := new(GetStatsResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IndexServer is the server API for Index service.
type IndexServer interface {
	Join(context.Context, *raft.JoinRequest) (*empty.Empty, error)
	Leave(context.Context, *raft.LeaveRequest) (*empty.Empty, error)
	GetNode(context.Context, *empty.Empty) (*raft.GetNodeResponse, error)
	GetCluster(context.Context, *empty.Empty) (*raft.GetClusterResponse, error)
	Snapshot(context.Context, *empty.Empty) (*empty.Empty, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	Index(context.Context, *IndexRequest) (*empty.Empty, error)
	Delete(context.Context, *DeleteRequest) (*empty.Empty, error)
	GetStats(context.Context, *empty.Empty) (*GetStatsResponse, error)
}

func RegisterIndexServer(s *grpc.Server, srv IndexServer) {
	s.RegisterService(&_Index_serviceDesc, srv)
}

func _Index_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(raft.JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Join(ctx, req.(*raft.JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(raft.LeaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Leave(ctx, req.(*raft.LeaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetNode(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetCluster(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Snapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Snapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Snapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Snapshot(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Index_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Index(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Index",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Index(ctx, req.(*IndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetStats(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Index_serviceDesc = grpc.ServiceDesc{
	ServiceName: "index.Index",
	HandlerType: (*IndexServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _Index_Join_Handler,
		},
		{
			MethodName: "Leave",
			Handler:    _Index_Leave_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _Index_GetNode_Handler,
		},
		{
			MethodName: "GetCluster",
			Handler:    _Index_GetCluster_Handler,
		},
		{
			MethodName: "Snapshot",
			Handler:    _Index_Snapshot_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Index_Get_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Index_Search_Handler,
		},
		{
			MethodName: "Index",
			Handler:    _Index_Index_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Index_Delete_Handler,
		},
		{
			MethodName: "GetStats",
			Handler:    _Index_GetStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/index/index.proto",
}
