// Copyright (c) 2019 Minoru Osuka
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 		http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

package management;

option go_package = "github.com/mosuka/blast/protobuf/management";

service Management {
    rpc NodeHealthCheck (NodeHealthCheckRequest) returns (NodeHealthCheckResponse) {
        option (google.api.http) = {
            get: "/v1/node/healthcheck"
        };
    }
    rpc NodeInfo (google.protobuf.Empty) returns (NodeInfoResponse) {
        option (google.api.http) = {
            get: "/v1/node/status"
        };
    }

    rpc ClusterJoin (ClusterJoinRequest) returns (google.protobuf.Empty) {}
    rpc ClusterLeave (ClusterLeaveRequest) returns (google.protobuf.Empty) {}
    rpc ClusterInfo (google.protobuf.Empty) returns (ClusterInfoResponse) {
        option (google.api.http) = {
            get: "/v1/cluster/status"
        };
    }
    rpc ClusterWatch (google.protobuf.Empty) returns (stream ClusterWatchResponse) {}

    rpc Get (GetRequest) returns (GetResponse) {
        option (google.api.http) = {
            get: "/v1/data/{key=**}"
        };
    }
    rpc Set (SetRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/data/{key=**}"
            body: "*"
        };
    }
    rpc Delete (DeleteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/data/{key=**}"
        };
    }
    rpc Watch (WatchRequest) returns (stream WatchResponse) {}
    rpc Snapshot (google.protobuf.Empty) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/v1/snapshot"
        };
    }
}

message NodeHealthCheckRequest {
    enum Probe {
        UNKNOWN = 0;
        HEALTHINESS = 1;
        LIVENESS = 2;
        READINESS = 3;
    }
    Probe probe = 1;
}

message NodeHealthCheckResponse {
    enum State {
        UNKNOWN = 0;
        HEALTHY = 1;
        UNHEALTHY = 2;
        ALIVE = 3;
        DEAD = 4;
        READY = 5;
        NOT_READY = 6;
    }
    State state = 1;
}

message Metadata {
    string grpc_address = 1;
    string grpc_gateway_address = 2;
    string http_address = 3;
}

message Node {
    enum State {
        UNKNOWN = 0;
        FOLLOWER = 1;
        CANDIDATE = 2;
        LEADER = 3;
        SHUTDOWN = 4;
    }
    string id = 1;
    string bind_address = 2;
    State state = 3;
    Metadata metadata = 4;
}

message Cluster {
    map<string, Node> nodes = 1;
}

message NodeInfoResponse {
    Node node = 1;
}

message ClusterJoinRequest {
    Node node = 1;
}

message ClusterLeaveRequest {
    string id = 1;
}

message ClusterInfoResponse {
    Cluster cluster = 1;
}

message ClusterWatchResponse {
    enum Event {
        UNKNOWN = 0;
        JOIN = 1;
        LEAVE = 2;
        UPDATE = 3;
    }
    Event event = 1;
    Node node = 2;
    Cluster cluster = 3;
}

message KeyValue {
    string key = 1;
    google.protobuf.Any value = 2;
}

message GetRequest {
    string key = 1;
}

message GetResponse {
//    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
//        json_schema: {
//            required: ["value"]
//        },
//        example: {
//            value: '{ "fields": { "field1": "Get Example", "field2": "This is an example Get response." } }'
//        }
//    };
//    google.protobuf.Any value = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {type: 6}];
    google.protobuf.Any value = 1;
}

message SetRequest {
    string key = 1;
    google.protobuf.Any value = 2;
}

message DeleteRequest {
    string key = 1;
}

message WatchRequest {
    string key = 1;
}

message WatchResponse {
    enum Command {
        UNKNOWN = 0;
        SET = 1;
        DELETE = 2;
    }
    Command command = 1;
    string key = 2;
    google.protobuf.Any value = 3;
}

message Proposal {
    enum Event {
        UNKNOWN = 0;
        SET_NODE = 1;
        DELETE_NODE = 2;
        SET_VALUE = 3;
        DELETE_VALUE = 4;
    }
    Event event = 1;
    Node node = 2;
    KeyValue key_value = 3;
}
