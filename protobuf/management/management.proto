// Copyright (c) 2019 Minoru Osuka
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 		http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

package management;

option go_package = "github.com/mosuka/blast/protobuf/management";

service Management {
    rpc LivenessProbe (google.protobuf.Empty) returns (LivenessProbeResponse) {}
    rpc ReadinessProbe (google.protobuf.Empty) returns (ReadinessProbeResponse) {}

    rpc GetNode (GetNodeRequest) returns (GetNodeResponse) {}
    rpc SetNode (SetNodeRequest) returns (google.protobuf.Empty) {}
    rpc DeleteNode (DeleteNodeRequest) returns (google.protobuf.Empty) {}
    rpc GetCluster (google.protobuf.Empty) returns (GetClusterResponse) {}
    rpc WatchCluster (google.protobuf.Empty) returns (stream GetClusterResponse) {}

    rpc GetValue (GetValueRequest) returns (GetValueResponse) {}
    rpc SetValue (SetValueRequest) returns (google.protobuf.Empty) {}
    rpc DeleteValue (DeleteValueRequest) returns (google.protobuf.Empty) {}
    rpc WatchStore (WatchStoreRequest) returns (stream WatchStoreResponse) {}
    rpc Snapshot (google.protobuf.Empty) returns (google.protobuf.Empty) {}
}

// use for health check
message LivenessProbeResponse {
    enum State {
        UNKNOWN = 0;
        ALIVE = 1;
        DEAD = 2;
    }
    State state = 1;
}

// use for health check
message ReadinessProbeResponse {
    enum State {
        UNKNOWN = 0;
        READY = 1;
        NOT_READY = 2;
    }
    State state = 1;
}

// use for raft cluster status
message GetNodeRequest {
    string id = 1;
}

// use for raft cluster status
message GetNodeResponse {
    google.protobuf.Any nodeConfig = 1;
    string state = 2;
}

// use for raft cluster status
message SetNodeRequest {
    string id = 1;
    google.protobuf.Any nodeConfig = 2;
}

// use for raft cluster status
message DeleteNodeRequest {
    string id = 1;
}

// use for raft cluster status
message GetClusterResponse {
    google.protobuf.Any cluster = 1;
}

message GetValueRequest {
    string key = 1;
}

message GetValueResponse {
    google.protobuf.Any value = 1;
}

message SetValueRequest {
    string key = 1;
    google.protobuf.Any value = 2;
}

message DeleteValueRequest {
    string key = 1;
}

message WatchStoreRequest {
    string key = 1;
}

message WatchStoreResponse {
    enum Command {
        UNKNOWN = 0;
        SET = 1;
        DELETE = 2;
    }
    Command command = 1;
    string key = 2;
    google.protobuf.Any value = 3;
}
