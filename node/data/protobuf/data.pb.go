// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data.proto

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	data.proto

It has these top-level messages:
	Metadata
	Node
	Cluster
	PutNodeRequest
	GetNodeRequest
	GetNodeResponse
	DeleteNodeRequest
	GetClusterResponse
	Document
	PutDocumentRequest
	GetDocumentRequest
	GetDocumentResponse
	DeleteDocumentRequest
	BulkUpdateRequest
	BulkUpdateResponse
	SearchDocumentsRequest
	SearchDocumentsResponse
	Proposal
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Node_Activity int32

const (
	Node_UNKNOWN_ACTIVITY Node_Activity = 0
	Node_ACTIVE           Node_Activity = 1
	Node_INACTIVE         Node_Activity = 2
)

var Node_Activity_name = map[int32]string{
	0: "UNKNOWN_ACTIVITY",
	1: "ACTIVE",
	2: "INACTIVE",
}
var Node_Activity_value = map[string]int32{
	"UNKNOWN_ACTIVITY": 0,
	"ACTIVE":           1,
	"INACTIVE":         2,
}

func (x Node_Activity) String() string {
	return proto.EnumName(Node_Activity_name, int32(x))
}
func (Node_Activity) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Node_Health int32

const (
	Node_UNKNOWN_HEALTH Node_Health = 0
	Node_HEALTHY        Node_Health = 1
	Node_UNHEALTHY      Node_Health = 2
)

var Node_Health_name = map[int32]string{
	0: "UNKNOWN_HEALTH",
	1: "HEALTHY",
	2: "UNHEALTHY",
}
var Node_Health_value = map[string]int32{
	"UNKNOWN_HEALTH": 0,
	"HEALTHY":        1,
	"UNHEALTHY":      2,
}

func (x Node_Health) String() string {
	return proto.EnumName(Node_Health_name, int32(x))
}
func (Node_Health) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

type Cluster_Health int32

const (
	Cluster_UNKNOWN_HEALTH Cluster_Health = 0
	Cluster_HEALTHY        Cluster_Health = 1
	Cluster_UNHEALTHY      Cluster_Health = 2
)

var Cluster_Health_name = map[int32]string{
	0: "UNKNOWN_HEALTH",
	1: "HEALTHY",
	2: "UNHEALTHY",
}
var Cluster_Health_value = map[string]int32{
	"UNKNOWN_HEALTH": 0,
	"HEALTHY":        1,
	"UNHEALTHY":      2,
}

func (x Cluster_Health) String() string {
	return proto.EnumName(Cluster_Health_name, int32(x))
}
func (Cluster_Health) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type BulkUpdateRequest_Update_Command int32

const (
	BulkUpdateRequest_Update_UNKNOWN BulkUpdateRequest_Update_Command = 0
	BulkUpdateRequest_Update_PUT     BulkUpdateRequest_Update_Command = 1
	BulkUpdateRequest_Update_DELETE  BulkUpdateRequest_Update_Command = 2
)

var BulkUpdateRequest_Update_Command_name = map[int32]string{
	0: "UNKNOWN",
	1: "PUT",
	2: "DELETE",
}
var BulkUpdateRequest_Update_Command_value = map[string]int32{
	"UNKNOWN": 0,
	"PUT":     1,
	"DELETE":  2,
}

func (x BulkUpdateRequest_Update_Command) String() string {
	return proto.EnumName(BulkUpdateRequest_Update_Command_name, int32(x))
}
func (BulkUpdateRequest_Update_Command) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{13, 0, 0}
}

type Proposal_Type int32

const (
	Proposal_UNKNOWN_PROPOSAL Proposal_Type = 0
	Proposal_PUT_METADATA     Proposal_Type = 1
	Proposal_DELETE_METADATA  Proposal_Type = 2
	Proposal_PUT_DOCUMENT     Proposal_Type = 3
	Proposal_DELETE_DOCUMENT  Proposal_Type = 4
	Proposal_BULK_UPDATE      Proposal_Type = 5
)

var Proposal_Type_name = map[int32]string{
	0: "UNKNOWN_PROPOSAL",
	1: "PUT_METADATA",
	2: "DELETE_METADATA",
	3: "PUT_DOCUMENT",
	4: "DELETE_DOCUMENT",
	5: "BULK_UPDATE",
}
var Proposal_Type_value = map[string]int32{
	"UNKNOWN_PROPOSAL": 0,
	"PUT_METADATA":     1,
	"DELETE_METADATA":  2,
	"PUT_DOCUMENT":     3,
	"DELETE_DOCUMENT":  4,
	"BULK_UPDATE":      5,
}

func (x Proposal_Type) String() string {
	return proto.EnumName(Proposal_Type_name, int32(x))
}
func (Proposal_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{17, 0} }

type Metadata struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	RaftAddr string `protobuf:"bytes,2,opt,name=raft_addr,json=raftAddr" json:"raft_addr,omitempty"`
	GrpcAddr string `protobuf:"bytes,3,opt,name=grpc_addr,json=grpcAddr" json:"grpc_addr,omitempty"`
	HttpAddr string `protobuf:"bytes,4,opt,name=http_addr,json=httpAddr" json:"http_addr,omitempty"`
}

func (m *Metadata) Reset()                    { *m = Metadata{} }
func (m *Metadata) String() string            { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()               {}
func (*Metadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Metadata) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Metadata) GetRaftAddr() string {
	if m != nil {
		return m.RaftAddr
	}
	return ""
}

func (m *Metadata) GetGrpcAddr() string {
	if m != nil {
		return m.GrpcAddr
	}
	return ""
}

func (m *Metadata) GetHttpAddr() string {
	if m != nil {
		return m.HttpAddr
	}
	return ""
}

type Node struct {
	Id       string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	RaftAddr string        `protobuf:"bytes,2,opt,name=raft_addr,json=raftAddr" json:"raft_addr,omitempty"`
	GrpcAddr string        `protobuf:"bytes,3,opt,name=grpc_addr,json=grpcAddr" json:"grpc_addr,omitempty"`
	HttpAddr string        `protobuf:"bytes,4,opt,name=http_addr,json=httpAddr" json:"http_addr,omitempty"`
	Leader   bool          `protobuf:"varint,5,opt,name=leader" json:"leader,omitempty"`
	Activity Node_Activity `protobuf:"varint,6,opt,name=activity,enum=protobuf.Node_Activity" json:"activity,omitempty"`
	Health   Node_Health   `protobuf:"varint,7,opt,name=health,enum=protobuf.Node_Health" json:"health,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetRaftAddr() string {
	if m != nil {
		return m.RaftAddr
	}
	return ""
}

func (m *Node) GetGrpcAddr() string {
	if m != nil {
		return m.GrpcAddr
	}
	return ""
}

func (m *Node) GetHttpAddr() string {
	if m != nil {
		return m.HttpAddr
	}
	return ""
}

func (m *Node) GetLeader() bool {
	if m != nil {
		return m.Leader
	}
	return false
}

func (m *Node) GetActivity() Node_Activity {
	if m != nil {
		return m.Activity
	}
	return Node_UNKNOWN_ACTIVITY
}

func (m *Node) GetHealth() Node_Health {
	if m != nil {
		return m.Health
	}
	return Node_UNKNOWN_HEALTH
}

type Cluster struct {
	Nodes  []*Node        `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	Health Cluster_Health `protobuf:"varint,2,opt,name=health,enum=protobuf.Cluster_Health" json:"health,omitempty"`
}

func (m *Cluster) Reset()                    { *m = Cluster{} }
func (m *Cluster) String() string            { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()               {}
func (*Cluster) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Cluster) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Cluster) GetHealth() Cluster_Health {
	if m != nil {
		return m.Health
	}
	return Cluster_UNKNOWN_HEALTH
}

type PutNodeRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	RaftAddr string `protobuf:"bytes,2,opt,name=raft_addr,json=raftAddr" json:"raft_addr,omitempty"`
	GrpcAddr string `protobuf:"bytes,3,opt,name=grpc_addr,json=grpcAddr" json:"grpc_addr,omitempty"`
	HttpAddr string `protobuf:"bytes,4,opt,name=http_addr,json=httpAddr" json:"http_addr,omitempty"`
}

func (m *PutNodeRequest) Reset()                    { *m = PutNodeRequest{} }
func (m *PutNodeRequest) String() string            { return proto.CompactTextString(m) }
func (*PutNodeRequest) ProtoMessage()               {}
func (*PutNodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PutNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutNodeRequest) GetRaftAddr() string {
	if m != nil {
		return m.RaftAddr
	}
	return ""
}

func (m *PutNodeRequest) GetGrpcAddr() string {
	if m != nil {
		return m.GrpcAddr
	}
	return ""
}

func (m *PutNodeRequest) GetHttpAddr() string {
	if m != nil {
		return m.HttpAddr
	}
	return ""
}

type GetNodeRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetNodeRequest) Reset()                    { *m = GetNodeRequest{} }
func (m *GetNodeRequest) String() string            { return proto.CompactTextString(m) }
func (*GetNodeRequest) ProtoMessage()               {}
func (*GetNodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetNodeResponse struct {
	Node *Node `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
}

func (m *GetNodeResponse) Reset()                    { *m = GetNodeResponse{} }
func (m *GetNodeResponse) String() string            { return proto.CompactTextString(m) }
func (*GetNodeResponse) ProtoMessage()               {}
func (*GetNodeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetNodeResponse) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type DeleteNodeRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	RaftAddr string `protobuf:"bytes,2,opt,name=raft_addr,json=raftAddr" json:"raft_addr,omitempty"`
}

func (m *DeleteNodeRequest) Reset()                    { *m = DeleteNodeRequest{} }
func (m *DeleteNodeRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteNodeRequest) ProtoMessage()               {}
func (*DeleteNodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteNodeRequest) GetRaftAddr() string {
	if m != nil {
		return m.RaftAddr
	}
	return ""
}

type GetClusterResponse struct {
	Cluster *Cluster `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
}

func (m *GetClusterResponse) Reset()                    { *m = GetClusterResponse{} }
func (m *GetClusterResponse) String() string            { return proto.CompactTextString(m) }
func (*GetClusterResponse) ProtoMessage()               {}
func (*GetClusterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetClusterResponse) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type Document struct {
	Id     string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Fields *google_protobuf.Any `protobuf:"bytes,2,opt,name=fields" json:"fields,omitempty"`
}

func (m *Document) Reset()                    { *m = Document{} }
func (m *Document) String() string            { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()               {}
func (*Document) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Document) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Document) GetFields() *google_protobuf.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type PutDocumentRequest struct {
	Id     string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Fields *google_protobuf.Any `protobuf:"bytes,2,opt,name=fields" json:"fields,omitempty"`
}

func (m *PutDocumentRequest) Reset()                    { *m = PutDocumentRequest{} }
func (m *PutDocumentRequest) String() string            { return proto.CompactTextString(m) }
func (*PutDocumentRequest) ProtoMessage()               {}
func (*PutDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PutDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutDocumentRequest) GetFields() *google_protobuf.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type GetDocumentRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetDocumentRequest) Reset()                    { *m = GetDocumentRequest{} }
func (m *GetDocumentRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDocumentRequest) ProtoMessage()               {}
func (*GetDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetDocumentResponse struct {
	Document *Document `protobuf:"bytes,1,opt,name=document" json:"document,omitempty"`
}

func (m *GetDocumentResponse) Reset()                    { *m = GetDocumentResponse{} }
func (m *GetDocumentResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDocumentResponse) ProtoMessage()               {}
func (*GetDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetDocumentResponse) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type DeleteDocumentRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteDocumentRequest) Reset()                    { *m = DeleteDocumentRequest{} }
func (m *DeleteDocumentRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteDocumentRequest) ProtoMessage()               {}
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *DeleteDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type BulkUpdateRequest struct {
	BatchSize int32                       `protobuf:"varint,1,opt,name=batch_size,json=batchSize" json:"batch_size,omitempty"`
	Updates   []*BulkUpdateRequest_Update `protobuf:"bytes,2,rep,name=updates" json:"updates,omitempty"`
}

func (m *BulkUpdateRequest) Reset()                    { *m = BulkUpdateRequest{} }
func (m *BulkUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*BulkUpdateRequest) ProtoMessage()               {}
func (*BulkUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *BulkUpdateRequest) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

func (m *BulkUpdateRequest) GetUpdates() []*BulkUpdateRequest_Update {
	if m != nil {
		return m.Updates
	}
	return nil
}

type BulkUpdateRequest_Update struct {
	Command  BulkUpdateRequest_Update_Command `protobuf:"varint,1,opt,name=command,enum=protobuf.BulkUpdateRequest_Update_Command" json:"command,omitempty"`
	Document *Document                        `protobuf:"bytes,2,opt,name=document" json:"document,omitempty"`
}

func (m *BulkUpdateRequest_Update) Reset()                    { *m = BulkUpdateRequest_Update{} }
func (m *BulkUpdateRequest_Update) String() string            { return proto.CompactTextString(m) }
func (*BulkUpdateRequest_Update) ProtoMessage()               {}
func (*BulkUpdateRequest_Update) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 0} }

func (m *BulkUpdateRequest_Update) GetCommand() BulkUpdateRequest_Update_Command {
	if m != nil {
		return m.Command
	}
	return BulkUpdateRequest_Update_UNKNOWN
}

func (m *BulkUpdateRequest_Update) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type BulkUpdateResponse struct {
	PutCount    int32 `protobuf:"varint,1,opt,name=put_count,json=putCount" json:"put_count,omitempty"`
	DeleteCount int32 `protobuf:"varint,2,opt,name=delete_count,json=deleteCount" json:"delete_count,omitempty"`
}

func (m *BulkUpdateResponse) Reset()                    { *m = BulkUpdateResponse{} }
func (m *BulkUpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*BulkUpdateResponse) ProtoMessage()               {}
func (*BulkUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *BulkUpdateResponse) GetPutCount() int32 {
	if m != nil {
		return m.PutCount
	}
	return 0
}

func (m *BulkUpdateResponse) GetDeleteCount() int32 {
	if m != nil {
		return m.DeleteCount
	}
	return 0
}

type SearchDocumentsRequest struct {
	SearchRequest *google_protobuf.Any `protobuf:"bytes,1,opt,name=search_request,json=searchRequest" json:"search_request,omitempty"`
}

func (m *SearchDocumentsRequest) Reset()                    { *m = SearchDocumentsRequest{} }
func (m *SearchDocumentsRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchDocumentsRequest) ProtoMessage()               {}
func (*SearchDocumentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SearchDocumentsRequest) GetSearchRequest() *google_protobuf.Any {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

type SearchDocumentsResponse struct {
	SearchResult *google_protobuf.Any `protobuf:"bytes,1,opt,name=search_result,json=searchResult" json:"search_result,omitempty"`
}

func (m *SearchDocumentsResponse) Reset()                    { *m = SearchDocumentsResponse{} }
func (m *SearchDocumentsResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchDocumentsResponse) ProtoMessage()               {}
func (*SearchDocumentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *SearchDocumentsResponse) GetSearchResult() *google_protobuf.Any {
	if m != nil {
		return m.SearchResult
	}
	return nil
}

type Proposal struct {
	Type Proposal_Type        `protobuf:"varint,1,opt,name=type,enum=protobuf.Proposal_Type" json:"type,omitempty"`
	Data *google_protobuf.Any `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *Proposal) Reset()                    { *m = Proposal{} }
func (m *Proposal) String() string            { return proto.CompactTextString(m) }
func (*Proposal) ProtoMessage()               {}
func (*Proposal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Proposal) GetType() Proposal_Type {
	if m != nil {
		return m.Type
	}
	return Proposal_UNKNOWN_PROPOSAL
}

func (m *Proposal) GetData() *google_protobuf.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Metadata)(nil), "protobuf.Metadata")
	proto.RegisterType((*Node)(nil), "protobuf.Node")
	proto.RegisterType((*Cluster)(nil), "protobuf.Cluster")
	proto.RegisterType((*PutNodeRequest)(nil), "protobuf.PutNodeRequest")
	proto.RegisterType((*GetNodeRequest)(nil), "protobuf.GetNodeRequest")
	proto.RegisterType((*GetNodeResponse)(nil), "protobuf.GetNodeResponse")
	proto.RegisterType((*DeleteNodeRequest)(nil), "protobuf.DeleteNodeRequest")
	proto.RegisterType((*GetClusterResponse)(nil), "protobuf.GetClusterResponse")
	proto.RegisterType((*Document)(nil), "protobuf.Document")
	proto.RegisterType((*PutDocumentRequest)(nil), "protobuf.PutDocumentRequest")
	proto.RegisterType((*GetDocumentRequest)(nil), "protobuf.GetDocumentRequest")
	proto.RegisterType((*GetDocumentResponse)(nil), "protobuf.GetDocumentResponse")
	proto.RegisterType((*DeleteDocumentRequest)(nil), "protobuf.DeleteDocumentRequest")
	proto.RegisterType((*BulkUpdateRequest)(nil), "protobuf.BulkUpdateRequest")
	proto.RegisterType((*BulkUpdateRequest_Update)(nil), "protobuf.BulkUpdateRequest.Update")
	proto.RegisterType((*BulkUpdateResponse)(nil), "protobuf.BulkUpdateResponse")
	proto.RegisterType((*SearchDocumentsRequest)(nil), "protobuf.SearchDocumentsRequest")
	proto.RegisterType((*SearchDocumentsResponse)(nil), "protobuf.SearchDocumentsResponse")
	proto.RegisterType((*Proposal)(nil), "protobuf.Proposal")
	proto.RegisterEnum("protobuf.Node_Activity", Node_Activity_name, Node_Activity_value)
	proto.RegisterEnum("protobuf.Node_Health", Node_Health_name, Node_Health_value)
	proto.RegisterEnum("protobuf.Cluster_Health", Cluster_Health_name, Cluster_Health_value)
	proto.RegisterEnum("protobuf.BulkUpdateRequest_Update_Command", BulkUpdateRequest_Update_Command_name, BulkUpdateRequest_Update_Command_value)
	proto.RegisterEnum("protobuf.Proposal_Type", Proposal_Type_name, Proposal_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Data service

type DataClient interface {
	PutNode(ctx context.Context, in *PutNodeRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error)
	DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	GetCluster(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetClusterResponse, error)
	Snapshot(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	PutDocument(ctx context.Context, in *PutDocumentRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error)
	DeleteDocument(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	BulkUpdate(ctx context.Context, in *BulkUpdateRequest, opts ...grpc.CallOption) (*BulkUpdateResponse, error)
	SearchDocuments(ctx context.Context, in *SearchDocumentsRequest, opts ...grpc.CallOption) (*SearchDocumentsResponse, error)
}

type dataClient struct {
	cc *grpc.ClientConn
}

func NewDataClient(cc *grpc.ClientConn) DataClient {
	return &dataClient{cc}
}

func (c *dataClient) PutNode(ctx context.Context, in *PutNodeRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/protobuf.Data/PutNode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error) {
	out := new(GetNodeResponse)
	err := grpc.Invoke(ctx, "/protobuf.Data/GetNode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/protobuf.Data/DeleteNode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) GetCluster(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetClusterResponse, error) {
	out := new(GetClusterResponse)
	err := grpc.Invoke(ctx, "/protobuf.Data/GetCluster", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) Snapshot(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/protobuf.Data/Snapshot", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) PutDocument(ctx context.Context, in *PutDocumentRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/protobuf.Data/PutDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error) {
	out := new(GetDocumentResponse)
	err := grpc.Invoke(ctx, "/protobuf.Data/GetDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) DeleteDocument(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/protobuf.Data/DeleteDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) BulkUpdate(ctx context.Context, in *BulkUpdateRequest, opts ...grpc.CallOption) (*BulkUpdateResponse, error) {
	out := new(BulkUpdateResponse)
	err := grpc.Invoke(ctx, "/protobuf.Data/BulkUpdate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) SearchDocuments(ctx context.Context, in *SearchDocumentsRequest, opts ...grpc.CallOption) (*SearchDocumentsResponse, error) {
	out := new(SearchDocumentsResponse)
	err := grpc.Invoke(ctx, "/protobuf.Data/SearchDocuments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Data service

type DataServer interface {
	PutNode(context.Context, *PutNodeRequest) (*google_protobuf1.Empty, error)
	GetNode(context.Context, *GetNodeRequest) (*GetNodeResponse, error)
	DeleteNode(context.Context, *DeleteNodeRequest) (*google_protobuf1.Empty, error)
	GetCluster(context.Context, *google_protobuf1.Empty) (*GetClusterResponse, error)
	Snapshot(context.Context, *google_protobuf1.Empty) (*google_protobuf1.Empty, error)
	PutDocument(context.Context, *PutDocumentRequest) (*google_protobuf1.Empty, error)
	GetDocument(context.Context, *GetDocumentRequest) (*GetDocumentResponse, error)
	DeleteDocument(context.Context, *DeleteDocumentRequest) (*google_protobuf1.Empty, error)
	BulkUpdate(context.Context, *BulkUpdateRequest) (*BulkUpdateResponse, error)
	SearchDocuments(context.Context, *SearchDocumentsRequest) (*SearchDocumentsResponse, error)
}

func RegisterDataServer(s *grpc.Server, srv DataServer) {
	s.RegisterService(&_Data_serviceDesc, srv)
}

func _Data_PutNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).PutNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Data/PutNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).PutNode(ctx, req.(*PutNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Data/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).GetNode(ctx, req.(*GetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_DeleteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).DeleteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Data/DeleteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).DeleteNode(ctx, req.(*DeleteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_GetCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).GetCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Data/GetCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).GetCluster(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_Snapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).Snapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Data/Snapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).Snapshot(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_PutDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).PutDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Data/PutDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).PutDocument(ctx, req.(*PutDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_GetDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).GetDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Data/GetDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).GetDocument(ctx, req.(*GetDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_DeleteDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).DeleteDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Data/DeleteDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).DeleteDocument(ctx, req.(*DeleteDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_BulkUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).BulkUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Data/BulkUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).BulkUpdate(ctx, req.(*BulkUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_SearchDocuments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchDocumentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).SearchDocuments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Data/SearchDocuments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).SearchDocuments(ctx, req.(*SearchDocumentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Data_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.Data",
	HandlerType: (*DataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutNode",
			Handler:    _Data_PutNode_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _Data_GetNode_Handler,
		},
		{
			MethodName: "DeleteNode",
			Handler:    _Data_DeleteNode_Handler,
		},
		{
			MethodName: "GetCluster",
			Handler:    _Data_GetCluster_Handler,
		},
		{
			MethodName: "Snapshot",
			Handler:    _Data_Snapshot_Handler,
		},
		{
			MethodName: "PutDocument",
			Handler:    _Data_PutDocument_Handler,
		},
		{
			MethodName: "GetDocument",
			Handler:    _Data_GetDocument_Handler,
		},
		{
			MethodName: "DeleteDocument",
			Handler:    _Data_DeleteDocument_Handler,
		},
		{
			MethodName: "BulkUpdate",
			Handler:    _Data_BulkUpdate_Handler,
		},
		{
			MethodName: "SearchDocuments",
			Handler:    _Data_SearchDocuments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "data.proto",
}

func init() { proto.RegisterFile("data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1007 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0x15, 0x69, 0x49, 0xa4, 0x47, 0xb6, 0x4c, 0x4f, 0x12, 0x47, 0x91, 0x13, 0x54, 0x59, 0x04,
	0xa8, 0x51, 0xb7, 0x4a, 0xe1, 0xa0, 0x40, 0x2f, 0x29, 0x10, 0x5a, 0x22, 0x62, 0xc3, 0xb6, 0x2c,
	0xd0, 0x54, 0xdb, 0xf4, 0x45, 0xa0, 0xc5, 0xb5, 0x25, 0x54, 0x16, 0x19, 0x72, 0xd9, 0xc2, 0xe9,
	0xa7, 0x14, 0xe8, 0x0f, 0xf4, 0x83, 0xfa, 0xd6, 0xfe, 0x4a, 0xc1, 0xdd, 0x25, 0x45, 0x49, 0xb6,
	0x9c, 0xe6, 0x21, 0x4f, 0xd2, 0xce, 0x39, 0x73, 0x76, 0x76, 0x86, 0x7b, 0x48, 0x00, 0xcf, 0x65,
	0x6e, 0x33, 0x08, 0x7d, 0xe6, 0xa3, 0xce, 0x7f, 0xce, 0xe3, 0x8b, 0xfa, 0xa3, 0x4b, 0xdf, 0xbf,
	0x1c, 0xd3, 0xe7, 0x69, 0xe0, 0xb9, 0x3b, 0xb9, 0x16, 0xa4, 0xfa, 0xf6, 0x3c, 0x44, 0xaf, 0x02,
	0x26, 0x41, 0xf2, 0x16, 0xf4, 0x13, 0xca, 0xdc, 0x44, 0x13, 0xab, 0xa0, 0x8e, 0xbc, 0x9a, 0xd2,
	0x50, 0x76, 0x56, 0x6d, 0x75, 0xe4, 0xe1, 0x36, 0xac, 0x86, 0xee, 0x05, 0xeb, 0xbb, 0x9e, 0x17,
	0xd6, 0x54, 0x1e, 0xd6, 0x93, 0x80, 0xe9, 0x79, 0x61, 0x02, 0x5e, 0x86, 0xc1, 0x40, 0x80, 0x2b,
	0x02, 0x4c, 0x02, 0x29, 0x38, 0x64, 0x2c, 0x10, 0x60, 0x51, 0x80, 0x49, 0x20, 0x01, 0xc9, 0xbf,
	0x2a, 0x14, 0x3b, 0xbe, 0x47, 0x3f, 0xd2, 0x7e, 0xb8, 0x05, 0xe5, 0x31, 0x75, 0x3d, 0x1a, 0xd6,
	0x4a, 0x0d, 0x65, 0x47, 0xb7, 0xe5, 0x0a, 0x5f, 0x80, 0xee, 0x0e, 0xd8, 0xe8, 0xd7, 0x11, 0xbb,
	0xae, 0x95, 0x1b, 0xca, 0x4e, 0x75, 0xef, 0x61, 0x33, 0xed, 0x51, 0x33, 0x29, 0xb0, 0x69, 0x4a,
	0xd8, 0xce, 0x88, 0xf8, 0x05, 0x94, 0x87, 0xd4, 0x1d, 0xb3, 0x61, 0x4d, 0xe3, 0x29, 0x0f, 0xe6,
	0x52, 0x0e, 0x38, 0x68, 0x4b, 0x12, 0xf9, 0x16, 0xf4, 0x54, 0x04, 0xef, 0x83, 0xd1, 0xeb, 0x1c,
	0x75, 0x4e, 0x7f, 0xec, 0xf4, 0xcd, 0x96, 0x73, 0xf8, 0xc3, 0xa1, 0xf3, 0xc6, 0x28, 0x20, 0x40,
	0x99, 0xaf, 0x2c, 0x43, 0xc1, 0x35, 0xd0, 0x0f, 0x3b, 0x72, 0xa5, 0x92, 0xaf, 0xa1, 0x2c, 0xd4,
	0x10, 0xa1, 0x9a, 0x66, 0x1e, 0x58, 0xe6, 0xb1, 0x73, 0x60, 0x14, 0xb0, 0x02, 0x9a, 0xf8, 0xff,
	0xc6, 0x50, 0x70, 0x1d, 0x56, 0x7b, 0x9d, 0x74, 0xa9, 0x92, 0x3f, 0x14, 0xd0, 0x5a, 0xe3, 0x38,
	0x62, 0x34, 0xc4, 0x67, 0x50, 0x9a, 0xf8, 0x1e, 0x8d, 0x6a, 0x4a, 0x63, 0x65, 0xa7, 0xb2, 0x57,
	0x9d, 0xad, 0xd7, 0x16, 0x20, 0x7e, 0x99, 0x1d, 0x4b, 0xe5, 0xc7, 0xaa, 0x4d, 0x69, 0x52, 0x68,
	0xfe, 0x64, 0x1f, 0x5e, 0xdd, 0x6f, 0x50, 0xed, 0xc6, 0x8c, 0xef, 0x4e, 0xdf, 0xc6, 0x34, 0x62,
	0x1f, 0xeb, 0xc1, 0x6b, 0x40, 0xf5, 0x35, 0x5d, 0xb6, 0x31, 0xf9, 0x0a, 0x36, 0x32, 0x46, 0x14,
	0xf8, 0x93, 0x88, 0x22, 0x81, 0x62, 0xd2, 0x22, 0x4e, 0x5a, 0x6c, 0x1f, 0xc7, 0xc8, 0x2b, 0xd8,
	0x6c, 0xd3, 0x31, 0x65, 0xf4, 0x43, 0x0f, 0x45, 0x4c, 0xc0, 0xd7, 0x94, 0xc9, 0x56, 0x67, 0x7b,
	0xef, 0x82, 0x36, 0x10, 0x21, 0xb9, 0xfd, 0xe6, 0xc2, 0x58, 0xec, 0x94, 0x41, 0x0e, 0x40, 0x6f,
	0xfb, 0x83, 0xf8, 0x8a, 0x4e, 0x16, 0xf7, 0xfe, 0x1c, 0xca, 0x17, 0x23, 0x3a, 0xf6, 0x22, 0xbe,
	0x71, 0x65, 0xef, 0x7e, 0x53, 0x78, 0xc2, 0x54, 0xce, 0x9c, 0x5c, 0xdb, 0x92, 0x43, 0x6c, 0xc0,
	0x6e, 0xcc, 0x52, 0xb1, 0xdb, 0xce, 0xf3, 0xff, 0x34, 0x9f, 0xf1, 0x03, 0xde, 0xa1, 0x49, 0x2c,
	0xb8, 0x37, 0xc3, 0x92, 0x7d, 0x68, 0x82, 0xee, 0xc9, 0x98, 0x6c, 0x04, 0x4e, 0x77, 0xc9, 0xd8,
	0x19, 0x87, 0x7c, 0x0a, 0x0f, 0xc4, 0x3c, 0xee, 0xda, 0xef, 0x4f, 0x15, 0x36, 0xf7, 0xe3, 0xf1,
	0x2f, 0xbd, 0xc0, 0x73, 0x59, 0x36, 0xb9, 0x27, 0x00, 0xe7, 0x2e, 0x1b, 0x0c, 0xfb, 0xd1, 0xe8,
	0x9d, 0x18, 0x7c, 0xc9, 0x5e, 0xe5, 0x91, 0xb3, 0xd1, 0x3b, 0x8a, 0x2f, 0x41, 0x8b, 0x39, 0x3f,
	0x39, 0x79, 0x72, 0xa7, 0xc8, 0xb4, 0x98, 0x05, 0xb1, 0xa6, 0x5c, 0xa5, 0x29, 0xf5, 0xbf, 0x14,
	0x28, 0x8b, 0x18, 0xb6, 0x41, 0x1b, 0xf8, 0x57, 0x57, 0xee, 0x44, 0x94, 0x54, 0xdd, 0xfb, 0xec,
	0x6e, 0xa1, 0x66, 0x4b, 0x64, 0xd8, 0x69, 0xea, 0x4c, 0x73, 0xd4, 0xf7, 0x68, 0xce, 0x2e, 0x68,
	0x52, 0x23, 0xb9, 0xa5, 0xf2, 0xe6, 0x1a, 0x05, 0xd4, 0x60, 0xa5, 0xdb, 0x73, 0x0c, 0x25, 0x71,
	0xa4, 0xb6, 0x75, 0x6c, 0x39, 0x89, 0x07, 0x39, 0x80, 0xf9, 0x4a, 0xe4, 0x3c, 0xb6, 0x61, 0x35,
	0x88, 0x59, 0x7f, 0xe0, 0xc7, 0x72, 0x20, 0x25, 0x5b, 0x0f, 0x62, 0xd6, 0x4a, 0xd6, 0xf8, 0x14,
	0xd6, 0x3c, 0xde, 0x7c, 0x89, 0xab, 0x1c, 0xaf, 0x88, 0x18, 0xa7, 0x90, 0x1e, 0x6c, 0x9d, 0x51,
	0x37, 0x1c, 0x0c, 0xd3, 0xf2, 0xa2, 0xb4, 0xf5, 0xdf, 0x41, 0x35, 0xe2, 0x48, 0x3f, 0x14, 0x11,
	0x39, 0xef, 0x9b, 0x1f, 0xae, 0x75, 0xc1, 0x95, 0xc9, 0xc4, 0x81, 0x87, 0x0b, 0xb2, 0xb2, 0xe2,
	0x6f, 0x60, 0x3d, 0xd3, 0x8d, 0xe2, 0xf1, 0x72, 0xd9, 0xb5, 0x54, 0x36, 0x61, 0x92, 0x7f, 0x14,
	0xd0, 0xbb, 0xa1, 0x1f, 0xf8, 0x91, 0x3b, 0xc6, 0x5d, 0x28, 0xb2, 0xeb, 0x80, 0xca, 0x79, 0xe5,
	0xde, 0x17, 0x29, 0xa3, 0xe9, 0x5c, 0x07, 0xd4, 0xe6, 0x24, 0xdc, 0x81, 0x62, 0xf2, 0x5e, 0x5d,
	0x7a, 0x3f, 0x38, 0x83, 0xfc, 0x0e, 0xc5, 0x24, 0x2f, 0xff, 0x8a, 0xe8, 0xda, 0xa7, 0xdd, 0xd3,
	0x33, 0xf3, 0xd8, 0x28, 0xa0, 0x01, 0x6b, 0xdd, 0x9e, 0xd3, 0x3f, 0xb1, 0x1c, 0xb3, 0x6d, 0x3a,
	0xa6, 0xa1, 0xe0, 0x3d, 0xd8, 0x10, 0x23, 0x9a, 0x06, 0xd5, 0x94, 0xd6, 0x3e, 0x6d, 0xf5, 0x4e,
	0xac, 0x8e, 0x63, 0xac, 0xe4, 0x68, 0x59, 0xb0, 0x88, 0x1b, 0x50, 0xd9, 0xef, 0x1d, 0x1f, 0xf5,
	0x7b, 0xdd, 0xb6, 0xe9, 0x58, 0x46, 0x69, 0xef, 0xef, 0x12, 0x14, 0xdb, 0xc9, 0xfb, 0xff, 0x7b,
	0xd0, 0xa4, 0x31, 0x63, 0xce, 0xff, 0x67, 0xbd, 0xba, 0xbe, 0xb5, 0x70, 0x0c, 0x2b, 0xf9, 0x9c,
	0x20, 0x05, 0x7c, 0x05, 0x9a, 0x34, 0xcf, 0x7c, 0xfa, 0xac, 0xe3, 0xd6, 0x1f, 0xdd, 0x80, 0x88,
	0x19, 0x91, 0x02, 0xb6, 0x00, 0xa6, 0x3e, 0x8a, 0xdb, 0xb9, 0xc7, 0x78, 0xde, 0x5d, 0x97, 0x94,
	0xd1, 0x06, 0x98, 0x5a, 0x29, 0xde, 0xc2, 0xab, 0x3f, 0x9e, 0xa9, 0x63, 0xce, 0x78, 0x49, 0x01,
	0x5f, 0x82, 0x7e, 0x36, 0x71, 0x83, 0x68, 0xe8, 0xb3, 0x5b, 0x35, 0x6e, 0xaf, 0xc1, 0x82, 0x4a,
	0xce, 0x41, 0xf1, 0xf1, 0x4c, 0x37, 0xe7, 0x4c, 0x69, 0x89, 0xcc, 0x31, 0x54, 0x72, 0x76, 0x88,
	0xb3, 0x35, 0xcf, 0xcb, 0x3c, 0xb9, 0x05, 0xcd, 0x8e, 0x74, 0x04, 0xd5, 0x59, 0x57, 0xc4, 0x4f,
	0xe6, 0x3b, 0xfc, 0xfe, 0xa5, 0x1d, 0x02, 0x4c, 0x8d, 0x21, 0x3f, 0xaa, 0x05, 0xe3, 0xca, 0xb7,
	0x7a, 0xd1, 0x4b, 0x48, 0x01, 0x7f, 0x82, 0x8d, 0xb9, 0x6b, 0x8b, 0x8d, 0x69, 0xca, 0xcd, 0x46,
	0x51, 0x7f, 0xba, 0x84, 0x91, 0x2a, 0xef, 0xc3, 0xcf, 0xd9, 0x07, 0xf2, 0x79, 0x99, 0xff, 0x7b,
	0xf1, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x2e, 0xef, 0xc0, 0x3f, 0x0b, 0x00, 0x00,
}
